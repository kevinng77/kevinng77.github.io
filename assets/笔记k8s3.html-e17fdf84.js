import{_ as e}from"./plugin-vue_export-helper-c27b6911.js";import{r as p,o,c,a as s,b as a,d as l,f as r}from"./app-80ce1db6.js";const i={},t=s("p",null,"https://blog.csdn.net/weixin_53072519/article/details/126693667",-1),d=s("p",null,"helm",-1),y={href:"https://helm.sh/",target:"_blank",rel:"noopener noreferrer"},h=s("p",null,"Helm 为 K8S 提供了包管理工具，如 Linux 下的 yum，apt 等。",-1),u=s("p",null,"Helm 的三个概念：",-1),m=s("ul",null,[s("li",null,"Chart：一系列用于创建 K8S 应用的信息。相当于 helm 的安装包。类似于 apt 的 dpkg 或者 Yum 的 RPM。"),s("li",null,"config：配置文件"),s("li",null,"release：运行 chart 之后生成的实例，与对应的 config 绑定在一起。release 与 chart 类似于 docker 中的容器实例与镜像的关系。")],-1),v=s("h3",{id:"快速开始",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#快速开始","aria-hidden":"true"},"#"),a(" 快速开始")],-1),b=s("p",null,"安装",-1),E={href:"https://github.com/helm/helm/releases",target:"_blank",rel:"noopener noreferrer"},g=r(`<p>移动到系统的 <code>/usr/local/bin/</code> 即可：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="shiki github-light" style="background-color:#fff;" tabindex="0"><code><span class="line"><span style="color:#6F42C1;">tar</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-zxvf</span><span style="color:#24292E;"> </span><span style="color:#032F62;">helm-v3.10.0-linux-amd64.tar.gz</span></span>
<span class="line"><span style="color:#6F42C1;">mv</span><span style="color:#24292E;"> </span><span style="color:#032F62;">linux-amd64/helm</span><span style="color:#24292E;"> </span><span style="color:#032F62;">/usr/local/bin/helm</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>其他安装方式参考官网。</p><p>测试安装成功：<code>helm help</code></p><h4 id="配置仓库" tabindex="-1"><a class="header-anchor" href="#配置仓库" aria-hidden="true">#</a> 配置仓库</h4><p>一般国内的话，配置微软或者阿里云仓库。添加仓库时，通常会因为网络连接问题出现添加不上的情况，可以切换下 VPN 多次尝试添加。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="shiki github-light" style="background-color:#fff;" tabindex="0"><code><span class="line"><span style="color:#6F42C1;">helm</span><span style="color:#24292E;"> </span><span style="color:#032F62;">repo</span><span style="color:#24292E;"> </span><span style="color:#032F62;">add</span><span style="color:#24292E;"> </span><span style="color:#032F62;">stable</span><span style="color:#24292E;"> </span><span style="color:#032F62;">http://mirror.azure.cn/kubernetes/charts</span></span>
<span class="line"><span style="color:#6F42C1;">helm</span><span style="color:#24292E;"> </span><span style="color:#032F62;">repo</span><span style="color:#24292E;"> </span><span style="color:#032F62;">update</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>查看已经配置的仓库：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="shiki github-light" style="background-color:#fff;" tabindex="0"><code><span class="line"><span style="color:#6F42C1;">helm</span><span style="color:#24292E;"> </span><span style="color:#032F62;">repo</span><span style="color:#24292E;"> </span><span style="color:#032F62;">list</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>删除仓库</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="shiki github-light" style="background-color:#fff;" tabindex="0"><code><span class="line"><span style="color:#6F42C1;">helm</span><span style="color:#24292E;"> </span><span style="color:#032F62;">repo</span><span style="color:#24292E;"> </span><span style="color:#032F62;">remove</span><span style="color:#24292E;"> </span><span style="color:#032F62;">stable</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="安装应用" tabindex="-1"><a class="header-anchor" href="#安装应用" aria-hidden="true">#</a> 安装应用</h4><ol><li>搜索应用</li></ol><p>在已添加的仓库里搜索你的应用：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="shiki github-light" style="background-color:#fff;" tabindex="0"><code><span class="line"><span style="color:#6F42C1;">helm</span><span style="color:#24292E;"> </span><span style="color:#032F62;">search</span><span style="color:#24292E;"> </span><span style="color:#032F62;">repo</span><span style="color:#24292E;"> </span><span style="color:#032F62;">mysql</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>在 Artifact Hub 中搜索你的应用（包括你未添加的仓库）</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="shiki github-light" style="background-color:#fff;" tabindex="0"><code><span class="line"><span style="color:#6F42C1;">helm</span><span style="color:#24292E;"> </span><span style="color:#032F62;">search</span><span style="color:#24292E;"> </span><span style="color:#032F62;">hub</span><span style="color:#24292E;"> </span><span style="color:#032F62;">mysql</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="2"><li>查看 chart 的配置属性，如依赖镜像，资源限制，端口服务等。</li></ol><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="shiki github-light" style="background-color:#fff;" tabindex="0"><code><span class="line"><span style="color:#6F42C1;">helm</span><span style="color:#24292E;"> </span><span style="color:#032F62;">show</span><span style="color:#24292E;"> </span><span style="color:#032F62;">values</span><span style="color:#24292E;"> </span><span style="color:#032F62;">stable/mysql</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>我们可以将 show values 得到的文件进行修改，以配置我们自己的 chart：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="shiki github-light" style="background-color:#fff;" tabindex="0"><code><span class="line"><span style="color:#6F42C1;">helm</span><span style="color:#24292E;"> </span><span style="color:#032F62;">show</span><span style="color:#24292E;"> </span><span style="color:#032F62;">values</span><span style="color:#24292E;"> </span><span style="color:#032F62;">stable/mysql</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> </span><span style="color:#032F62;">my_chart_values.yaml</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="3"><li>安装应用</li></ol><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="shiki github-light" style="background-color:#fff;" tabindex="0"><code><span class="line"><span style="color:#6F42C1;">helm</span><span style="color:#24292E;"> </span><span style="color:#032F62;">upgrade</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--cleanup-on-fail</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">\\</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">--install</span><span style="color:#24292E;"> </span><span style="color:#032F62;">myhub</span><span style="color:#24292E;"> </span><span style="color:#032F62;">jupyterhub/jupyterhub</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">\\</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">--namespace</span><span style="color:#24292E;"> </span><span style="color:#032F62;">dev</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">\\</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">--create-namespace</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">\\</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">--values</span><span style="color:#24292E;"> </span><span style="color:#032F62;">my_config.yaml</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>除了用 --values 传递配置函数，还可以直接传递 <code>--set </code> 参数。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="shiki github-light" style="background-color:#fff;" tabindex="0"><code><span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>查看安装进度：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="shiki github-light" style="background-color:#fff;" tabindex="0"><code><span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"></div></div><h3 id="自定义-chart" tabindex="-1"><a class="header-anchor" href="#自定义-chart" aria-hidden="true">#</a> 自定义 Chart</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="shiki github-light" style="background-color:#fff;" tabindex="0"><code><span class="line"><span style="color:#6F42C1;">helm</span><span style="color:#24292E;"> </span><span style="color:#032F62;">create</span><span style="color:#24292E;"> </span><span style="color:#032F62;">mychart</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>生成一个 mychart 文件夹，里面包括 Chart 模板目录，目录下包括：</p><ul><li>charts 文件夹</li><li>Chart.yaml</li><li>templates 文件夹</li><li>values.yaml（上一节中我们 show value 得到的就是这个文件的内容）</li></ul><p>在 templates 中创建服务所需要的各种 <code>yaml</code> 文件。如</p><ul><li>deployment.yaml</li><li>service.yaml</li></ul><h4 id="安装-chart" tabindex="-1"><a class="header-anchor" href="#安装-chart" aria-hidden="true">#</a> 安装 Chart</h4><p>可以直接使用刚刚的 mychart 文件夹安装：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="shiki github-light" style="background-color:#fff;" tabindex="0"><code><span class="line"><span style="color:#6F42C1;">helm</span><span style="color:#24292E;"> </span><span style="color:#032F62;">install</span><span style="color:#24292E;"> </span><span style="color:#032F62;">myapp</span><span style="color:#24292E;"> </span><span style="color:#032F62;">mychart/</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>修改 yaml 文件后，同样可以直接使用 helm 升级 app：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="shiki github-light" style="background-color:#fff;" tabindex="0"><code><span class="line"><span style="color:#6F42C1;">helm</span><span style="color:#24292E;"> </span><span style="color:#032F62;">upgrade</span><span style="color:#24292E;"> </span><span style="color:#032F62;">myapp</span><span style="color:#24292E;"> </span><span style="color:#032F62;">mychart/</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="高效复用-yaml-文件" tabindex="-1"><a class="header-anchor" href="#高效复用-yaml-文件" aria-hidden="true">#</a> 高效复用 yaml 文件</h4><p>可以在 <code>values.yaml</code> 中配置参数，而后 helm 会将全局参数引用到 templates 中的文件，从而实现仅通过修改 <code>values.yaml</code>，就可以部署不同配置的同类型 k8s 服务。</p><p>values.yaml 中定义：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="shiki github-light" style="background-color:#fff;" tabindex="0"><code><span class="line"><span style="color:#6F42C1;">replicas:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span></span>
<span class="line"><span style="color:#6F42C1;">image:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">myimage</span></span>
<span class="line"><span style="color:#6F42C1;">tag:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1.0</span></span>
<span class="line"><span style="color:#6F42C1;">label:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">mylabel</span></span>
<span class="line"><span style="color:#6F42C1;">port:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">80</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在 <code>deployment.yaml</code> 中引用：</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="shiki github-light" style="background-color:#fff;" tabindex="0"><code><span class="line"><span style="color:#22863A;">apiVersion</span><span style="color:#24292E;">: </span><span style="color:#032F62;">apps/v1</span></span>
<span class="line"><span style="color:#22863A;">kind</span><span style="color:#24292E;">: </span><span style="color:#032F62;">Deployment</span></span>
<span class="line"><span style="color:#22863A;">metadata</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">creationTimestamp</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">null</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">labels</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">app</span><span style="color:#24292E;">: </span><span style="color:#032F62;">myweb1</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">name</span><span style="color:#24292E;">: {{ </span><span style="color:#032F62;">.Release.Name</span><span style="color:#24292E;">}}</span><span style="color:#032F62;">-deploy</span></span>
<span class="line"><span style="color:#22863A;">spec</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">replicas</span><span style="color:#24292E;">: {{ </span><span style="color:#032F62;">.Values.replicas</span><span style="color:#24292E;">}}</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">selector</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">matchLabels</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#22863A;">app</span><span style="color:#24292E;">: {{ </span><span style="color:#032F62;">.Values.label</span><span style="color:#24292E;">}}</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">strategy</span><span style="color:#24292E;">: {}</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">template</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">metadata</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#22863A;">labels</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#22863A;">app</span><span style="color:#24292E;">: {{ </span><span style="color:#032F62;">.Values.label</span><span style="color:#24292E;">}}</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">spec</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#22863A;">containers</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">      - </span><span style="color:#22863A;">image</span><span style="color:#24292E;">: {{ </span><span style="color:#032F62;">.Values.image</span><span style="color:#24292E;">}}</span></span>
<span class="line"><span style="color:#6F42C1;">...</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="储存方案" tabindex="-1"><a class="header-anchor" href="#储存方案" aria-hidden="true">#</a> 储存方案</h2>`,45);function f(F,C){const n=p("ExternalLinkIcon");return o(),c("div",null,[t,d,s("p",null,[s("a",y,[a("官网"),l(n)])]),h,u,m,v,b,s("p",null,[a("下载 helm 包 "),s("a",E,[a("desired version"),l(n)]),a(" ，而后解压。")]),g])}const _=e(i,[["render",f],["__file","笔记k8s3.html.vue"]]);export{_ as default};
