import{_ as o}from"./plugin-vue_export-helper-c27b6911.js";import{r as t,o as p,c as i,a as s,b as n,d as l,f as e}from"./app-b886ebe1.js";const r="/assets/img/function_call/image-20240810173733768.jpg",c="/assets/img/function_call/image-20240811164344721.jpg",d="/assets/img/function_call/image-20240810184324389.jpg",u="/assets/img/function_call/image-20240811110909818.jpg",y="/assets/img/function_call/图片.jpg",v="/assets/img/function_call/image-20240811151138851.jpg",m="/assets/img/function_call/image-20240811163510992.jpg",q="/assets/img/function_call/image-20240811165517133.jpg",b="/assets/img/function_call/image-20240810115637993.jpg",E={},g=e('<p>在本文中，我们梳理了开源模型 Function Calling 能力的相关信息，包括采用的 chat template，function call 训练方案等。涉及模型 LlaMa 3.1， Mistral Large 2，glm-4-9b-chat，Qwen 2。</p><h2 id="llama-3-1" tabindex="-1"><a class="header-anchor" href="#llama-3-1" aria-hidden="true">#</a> Llama 3.1</h2><p>推荐官方指南：https://llama.meta.com/docs/model-cards-and-prompt-formats/llama3_1/</p><h3 id="对话协议-chat-protocal" tabindex="-1"><a class="header-anchor" href="#对话协议-chat-protocal" aria-hidden="true">#</a> 对话协议（Chat Protocal)</h3><p>Llama 3.1 中采用了以下 special tokens 来辅助多轮对话和工具的调用。。</p><ul><li><strong><code>&lt;|begin_of_text|&gt;</code></strong> : 指定 prompt 的开始</li><li><strong><code>&lt;|end_of_text|&gt;</code>:</strong> 模型将停止生成更多的 tokens。此 token 仅由基础模型生成。</li><li><strong><code>&lt;|start_header_id|&gt;</code> 和 <code>&lt;|end_header_id|&gt;</code>:</strong> 这些 tokens 封闭特定消息的角色。可能的角色包括: <code>[system, user, assistant, and ipython]</code></li><li><strong><code>&lt;|eom_id|&gt;</code>:</strong> end of message。表示消息结束，提示模型接下来可能需要调用工具。这用于模型与任何可用工具之间的多步骤交互。当在系统提示中使用<code>Environment: ipython</code>指令时，或者如果模型调用内置工具时，会发出此 token。</li><li><strong><code>&lt;|eot_id|&gt;</code>:</strong> End of turn。表示模型已经确定它已完成与用户消息的互动，有两种情况会使用：</li><li>在模型与用户之间的直接互动结束时</li><li>在模型与任何可用工具之间的多次互动结束时</li><li><strong><code>&lt;|python_tag|&gt;</code>:</strong> 是模型响应中用来表示工具调用的特殊标签。</li></ul><p>在对话过程中，llama 3.1 支持了 4 中角色：</p><p><code>[system, assistant, user, ipython]</code> 其中 <code>ipython</code> 的角色与 gpt 中的 <code>tool</code> 类似，用来标记调用 tool 后生成的结果。</p><h4 id="tool-call-template-样式" tabindex="-1"><a class="header-anchor" href="#tool-call-template-样式" aria-hidden="true">#</a> Tool Call Template 样式</h4>',9),h={href:"https://arxiv.org/pdf/2407.21783",target:"_blank",rel:"noopener noreferrer"},f=s("img",{src:r,alt:"image-20240810173733768",loading:"lazy"},null,-1),_=e(`<p><strong>样式 1：Json based tool calling</strong></p><p>以下用一个例子展示 llama 3.1 tool call 时候的格式，假设用户与 agent 有了以下对话：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="shiki github-light" style="background-color:#fff;" tabindex="0"><code><span class="line"><span style="color:#24292E;">tool_call </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span><span style="color:#032F62;">&quot;name&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;get_current_temperature&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;arguments&quot;</span><span style="color:#24292E;">: {</span><span style="color:#032F62;">&quot;location&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;Paris, France&quot;</span><span style="color:#24292E;">}}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">messages </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> [</span></span>
<span class="line"><span style="color:#24292E;">  {</span><span style="color:#032F62;">&quot;role&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;system&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;content&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;You are a bot that responds to weather queries.&quot;</span><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;">  {</span><span style="color:#032F62;">&quot;role&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;user&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;content&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;Hey, what&#39;s the temperature in Paris right now?&quot;</span><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;">  {</span><span style="color:#032F62;">&quot;role&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;assistant&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;tool_calls&quot;</span><span style="color:#24292E;">: [{</span><span style="color:#032F62;">&quot;type&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;function&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;function&quot;</span><span style="color:#24292E;">: tool_call}]},</span></span>
<span class="line"><span style="color:#24292E;">  {</span><span style="color:#032F62;">&quot;role&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;tool&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;name&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;get_current_temperature&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;content&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;22.0&quot;</span><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#24292E;">]</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>那么，此时的 prompt 为：</p><div class="language-markdown line-numbers-mode" data-ext="md"><pre class="shiki github-light" style="background-color:#fff;" tabindex="0"><code><span class="line"><span style="color:#24292E;">&lt;|begin_of_text|&gt;&lt;|start_header_id|&gt;system&lt;|end_header_id|&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">Environment: ipython</span></span>
<span class="line"><span style="color:#24292E;">Cutting Knowledge Date: December 2023</span></span>
<span class="line"><span style="color:#24292E;">Today Date: 26 Jul 2024</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">You have access to the following functions. To call a function, please respond with JSON for a function call.Respond in the format {&quot;name&quot;: function name, &quot;parameters&quot;: dictionary of argument name and its value}.Do not use variables.</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">    &quot;type&quot;: &quot;function&quot;,</span></span>
<span class="line"><span style="color:#24292E;">    &quot;function&quot;: {</span></span>
<span class="line"><span style="color:#24292E;">        &quot;name&quot;: &quot;get_current_temperature&quot;,</span></span>
<span class="line"><span style="color:#24292E;">        &quot;description&quot;: &quot;Get the current temperature at a location.&quot;,</span></span>
<span class="line"><span style="color:#24292E;">        &quot;parameters&quot;: {</span></span>
<span class="line"><span style="color:#24292E;">            &quot;type&quot;: &quot;object&quot;,</span></span>
<span class="line"><span style="color:#24292E;">            &quot;properties&quot;: {</span></span>
<span class="line"><span style="color:#24292E;">                &quot;location&quot;: {</span></span>
<span class="line"><span style="color:#24292E;">                    &quot;type&quot;: &quot;string&quot;,</span></span>
<span class="line"><span style="color:#24292E;">                    &quot;description&quot;: &quot;The location to get the temperature for, in the format \\&quot;City, Country\\&quot;&quot;</span></span>
<span class="line"><span style="color:#24292E;">                }</span></span>
<span class="line"><span style="color:#24292E;">            },</span></span>
<span class="line"><span style="color:#24292E;">            &quot;required&quot;: [</span></span>
<span class="line"><span style="color:#24292E;">                &quot;location&quot;</span></span>
<span class="line"><span style="color:#24292E;">            ]</span></span>
<span class="line"><span style="color:#24292E;">        },</span></span>
<span class="line"><span style="color:#24292E;">        &quot;return&quot;: {</span></span>
<span class="line"><span style="color:#24292E;">            &quot;type&quot;: &quot;number&quot;,</span></span>
<span class="line"><span style="color:#24292E;">            &quot;description&quot;: &quot;The current temperature at the specified location in the specified units, as a float.&quot;</span></span>
<span class="line"><span style="color:#24292E;">        }</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">You are a bot that responds to weather queries.&lt;|eot_id|&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;|start_header_id|&gt;user&lt;|end_header_id|&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">Hey, what&#39;s the temperature in Paris right now?&lt;|eot_id|&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;|start_header_id|&gt;assistant&lt;|end_header_id|&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">{&quot;name&quot;: &quot;get_current_temperature&quot;, &quot;parameters&quot;: {&quot;location&quot;: &quot;Paris, France&quot;}}&lt;|eot_id|&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;|start_header_id|&gt;ipython&lt;|end_header_id|&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">&quot;22.0&quot;&lt;|eot_id|&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;|start_header_id|&gt;assistant&lt;|end_header_id|&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>关注点：</strong></p>`,6),F=s("li",null,"为了方便阅读，以上 prompt 中添加了一些换行符。",-1),C=s("li",null,"llama 3.1 70B instruct 提供的模板中，可以选择将 function 信息放在用户的输入中，或者放在 system prompt 中。",-1),x=s("li",null,[n("工具调用结果通过 "),s("code",null,"<|start_header_id|>ipython<|end_header_id|>"),n(" 标记。")],-1),k={href:"https://llama.meta.com/docs/model-cards-and-prompt-formats/llama3_1/#built-in-tooling",target:"_blank",rel:"noopener noreferrer"},A=e(`<details class="hint-container details"><summary>具体生成以上 prompt 的代码</summary><div class="language-python line-numbers-mode" data-ext="py"><pre class="shiki github-light" style="background-color:#fff;" tabindex="0"><code><span class="line"><span style="color:#D73A49;">from</span><span style="color:#24292E;"> transformers </span><span style="color:#D73A49;">import</span><span style="color:#24292E;"> AutoTokenizer</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">model_path </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;/home/kevin/models/Meta-Llama-3.1-70B-Instruct&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># First, define a tool</span></span>
<span class="line"><span style="color:#D73A49;">def</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">get_current_temperature</span><span style="color:#24292E;">(location: </span><span style="color:#005CC5;">str</span><span style="color:#24292E;">) -&gt; </span><span style="color:#005CC5;">float</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#032F62;">    Get the current temperature at a location.</span></span>
<span class="line"><span style="color:#032F62;">    </span></span>
<span class="line"><span style="color:#032F62;">    Args:</span></span>
<span class="line"><span style="color:#032F62;">        location: The location to get the temperature for, in the format &quot;City, Country&quot;</span></span>
<span class="line"><span style="color:#032F62;">    Returns:</span></span>
<span class="line"><span style="color:#032F62;">        The current temperature at the specified location in the specified units, as a float.</span></span>
<span class="line"><span style="color:#032F62;">    &quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">22</span><span style="color:#24292E;">.  </span><span style="color:#6A737D;"># A real function should probably actually get the temperature!</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">tool_call </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span><span style="color:#032F62;">&quot;name&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;get_current_temperature&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;arguments&quot;</span><span style="color:#24292E;">: {</span><span style="color:#032F62;">&quot;location&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;Paris, France&quot;</span><span style="color:#24292E;">}}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">messages </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> [</span></span>
<span class="line"><span style="color:#24292E;">  {</span><span style="color:#032F62;">&quot;role&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;system&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;content&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;You are a bot that responds to weather queries.&quot;</span><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;">  {</span><span style="color:#032F62;">&quot;role&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;user&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;content&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;Hey, what&#39;s the temperature in Paris right now?&quot;</span><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;">  {</span><span style="color:#032F62;">&quot;role&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;assistant&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;tool_calls&quot;</span><span style="color:#24292E;">: [{</span><span style="color:#032F62;">&quot;type&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;function&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;function&quot;</span><span style="color:#24292E;">: tool_call}]},</span></span>
<span class="line"><span style="color:#24292E;">  {</span><span style="color:#032F62;">&quot;role&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;tool&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;name&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;get_current_temperature&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;content&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;22.0&quot;</span><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#24292E;">]</span></span>
<span class="line"><span style="color:#24292E;">tokenizer </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> AutoTokenizer.from_pretrained(model_path, </span><span style="color:#E36209;">trust_remote_code</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">True</span><span style="color:#24292E;">)</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">inputs </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> tokenizer.apply_chat_template(messages, </span></span>
<span class="line"><span style="color:#24292E;">                                       </span><span style="color:#E36209;">tools</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">[get_current_temperature],</span></span>
<span class="line"><span style="color:#24292E;">                                       </span><span style="color:#E36209;">add_generation_prompt</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">True</span><span style="color:#24292E;">, </span></span>
<span class="line"><span style="color:#24292E;">                                       </span><span style="color:#E36209;">tokenize</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">False</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">                                       </span><span style="color:#E36209;">tools_in_user_message</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">False</span><span style="color:#24292E;">)</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">with</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">open</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;input.txt&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;w&#39;</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">as</span><span style="color:#24292E;"> fp:</span></span>
<span class="line"><span style="color:#24292E;">    fp.write(inputs)</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><p>更具体的多轮对话 prompt 可以参考 llama 3.1-70b-instruct 的 jinja chat template。</p><p><strong>样式 2：Built in Python based tool calling</strong></p><p>官方自带支持 <code>brave_search</code>, <code>wolfram_alpha</code>, 和 <code>code interpreter</code> 三种工具，使用这三种工具时，tokenizer 的处理方式与 json based tool calling 不太一样。具体是要在 system prompt 中加上</p><div class="language-txt line-numbers-mode" data-ext="txt"><pre class="shiki github-light" style="background-color:#fff;" tabindex="0"><code><span class="line"><span style="color:#24292e;">Environment: ipython</span></span>
<span class="line"><span style="color:#24292e;">Tools: brave_search, wolfram_alpha</span></span>
<span class="line"><span style="color:#24292e;"></span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>同时模型要调用工具时，会生成 <code>&lt;|python_tag|&gt;wolfram_alpha.call(query=&quot;solve x^3 - 4x^2 + 6x - 24 = 0&quot;)&lt;|eom_id|&gt;</code> 类似的样式，而非原先的 json 格式：</p><div class="language-markdown line-numbers-mode" data-ext="md"><pre class="shiki github-light" style="background-color:#fff;" tabindex="0"><code><span class="line"><span style="color:#24292E;">&lt;|begin_of_text|&gt;&lt;|start_header_id|&gt;system&lt;|end_header_id|&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">Environment: ipython</span></span>
<span class="line"><span style="color:#24292E;">Tools: brave_search, wolfram_alpha</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">Cutting Knowledge Date: December 2023</span></span>
<span class="line"><span style="color:#24292E;">Today Date: 23 Jul 2024</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">You are a helpful assistant.&lt;|eot_id|&gt;&lt;|start_header_id|&gt;user&lt;|end_header_id|&gt;</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">Can you help me solve this equation: x^3 - 4x^2 + 6x - 24 = 0&lt;|eot_id|&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;|start_header_id|&gt;assistant&lt;|end_header_id|&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">&lt;|python_tag|&gt;wolfram_alpha.call(query=&quot;solve x^3 - 4x^2 + 6x - 24 = 0&quot;)&lt;|eom_id|&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;|start_header_id|&gt;ipython&lt;|end_header_id|&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">{&quot;queryresult&quot;: {&quot;success&quot;: true, &quot;inputstring&quot;: &quot;solve x^3 - 4x^2 + 6x - 24 = 0&quot;, &quot;pods&quot;: [{&quot;title&quot;: &quot;Input interpretation&quot;, &quot;subpods&quot;: [{&quot;title&quot;: &quot;&quot;, &quot;plaintext&quot;: &quot;solve x^3 - 4 x^2 + 6 x - 24 = 0&quot;}]}, {&quot;title&quot;: &quot;Results&quot;, &quot;primary&quot;: true, &quot;subpods&quot;: [{&quot;title&quot;: &quot;&quot;, &quot;plaintext&quot;: &quot;x = 4&quot;}, {&quot;title&quot;: &quot;&quot;, &quot;plaintext&quot;: &quot;x = \\u00b1 (i sqrt(6))&quot;}]}, ... ]}}&lt;|eot_id|&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;|start_header_id|&gt;assistant&lt;|end_header_id|&gt;         </span></span>
<span class="line"><span style="color:#24292E;">          </span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="工具调用相关的训练" tabindex="-1"><a class="header-anchor" href="#工具调用相关的训练" aria-hidden="true">#</a> 工具调用相关的训练</h3>`,8),w={href:"https://arxiv.org/pdf/2407.21783",target:"_blank",rel:"noopener noreferrer"},D=e('<figure><img src="'+c+'" alt="Llama 3 训练流程" tabindex="0" loading="lazy"><figcaption>Llama 3 训练流程</figcaption></figure><h4 id="sft" tabindex="-1"><a class="header-anchor" href="#sft" aria-hidden="true">#</a> SFT</h4><p>Learning rate 1e-5，训练 9K steps。SFT 的训练集中，有 21.9% 的数据是用于推理和工具使用的:</p><figure><img src="'+d+'" alt="image-20240810184324389" tabindex="0" loading="lazy"><figcaption>image-20240810184324389</figcaption></figure><p><strong>数据</strong></p><p>参考 llama 3 herd of model 中对 SFT Tool 数据集的描述：</p><ul><li>标注员只对 assistant 信息进行排名打分（通常模型对当前问题的推理能力越强，打分越高），不对 tool message 进行排名打分。</li><li>不采用 rejection sampling，因为 llama 团队没有在后期的 tool 测评中观察到它带来的收益。</li></ul><p>为了加快标注过程，llama 团队首先通过在之前的 Llama 3 检查点生成的合成数据上进行微调来引导基本的工具使用能力。因此，标注员需要进行的编辑较少。同样地，随着 Llama 3 在开发过程中逐渐改进，我们逐步复杂化人类标注协议：从标注单轮 tool use 的对话数据开始，逐步过渡到标注对话中包含了 tool use 的数据，最后到标注对话中包含了多步 tool use 以及数据分析的训练数据。</p><p>llama 团队采用了以下方法来构造 Synthetic <strong>Tool datasets</strong></p><p><strong>single-step tool use 数据</strong></p><p>参考上文中提到的标注方案，llama 团队先构造了该数据集，并对模型进行单论 tool use 训练。构造步骤：</p><ol><li>通过 few-shot，用模型生成用户 prompt。该 prompt 必须涉及到调用 1 个 llama 的核心工具（core tools）。</li><li>通过 few-shot，和 step 1 中的 prompt，生成对应的 tool call 回答（包括调用工具名称，对应参数）。</li><li>执行 step 2 中的工具和参数，得到对应的 tool output。</li><li>让模型基于 用户 prompt，tool call，tool output，生成最终回复。</li></ol><p>因此整个数据集包括了：<code>system prompt</code>， <code>user prompt</code>, <code>tool call</code>, <code>tool output</code> 和 <code>final answer</code>。在获得数据集后，llama 还过滤了约 30% 的数据集，以去除无法执行工具或有其他格式问题的数据。</p><p>根据 llama 报告中介绍 core tools 包括 <code>brave_search</code>, <code>wolfram_alpha</code>, and <code>code interpreter</code> 等 python 对象。</p><p><strong>Multi-step tool use 数据：</strong></p><p>Multi-step 与 single step 的 tool use 数据生成方式相似：</p><ol><li>通过 few-shot，用模型生成用户 prompt。该 prompt 必须是一个需要使用多个 tool 来获得答案的任务（这些 tool 不一定得从 core tool 中选）。</li><li>基于 step 1 的 prompt，让 llama 3 生成包含了推理步骤和对应 tool call 信息的数据，具体可以看下图：</li></ol><figure><img src="'+u+'" alt="Multi-step tool usage 数据生成示例" tabindex="0" loading="lazy"><figcaption>Multi-step tool usage 数据生成示例</figcaption></figure><p><strong>File uploads 数据：</strong></p><p>File Uploads 数据参考下图训练数据示例。prompt 都是基于某个文件进行提问，问题包括总结，查找 bug，优化某个部分，数据分析等操作。</p><figure><img src="'+y+'" alt="Processing file uploads 数据示例" tabindex="0" loading="lazy"><figcaption>Processing file uploads 数据示例</figcaption></figure><p>除此外，llama 在 system prompt 中进行了调试，让模型能够只在激活了 tool call 的情况下去调用共外部工具。</p><p>llama 团队采用了以下方法来构造 <strong>Zero-shot tool use data</strong> （与 function calling 类似）</p>',23),L=s("strong",null,"Single, nested, and parallel function calling:",-1),T=s("em",null,"i.e.",-1),S=s("em",null,"i.e.",-1),M=s("em",null,"e.g.",-1),I={href:"https://arxiv.org/pdf/2211.15533",target:"_blank",rel:"noopener noreferrer"},P=s("strong",null,"Multi-turn function calling:",-1),H={href:"https://arxiv.org/pdf/2304.08244",target:"_blank",rel:"noopener noreferrer"},O=s("li",null,[s("p",null,"第一个 agent 用于生成不同的领域，如医疗保险，健身等。")],-1),j=s("li",null,[s("p",null,"第二个 agent，根据领域数据，生成潜在的 API。值得注意的是，在这一阶段，为了确保模拟 API 的真实性，我们在代理输入中加入了来自公共 API 的示例。")],-1),z=s("li",null,[s("p",null,"第三个 agent 从模拟 API 中随机选择一个或多个 API。此外，它还选择了我们设计原则中概述的一种能力。然后使用这些信息创建一个匹配所选能力的 query 问题，这个 query 问题可以通过调用所选 API 来完成回答。")],-1),B=s("li",null,[s("p",null,"第四个 agent 将领域、API、能力和 query 作为输入。这个 agent 需要通过模拟的方式调用选择的 API，然后根据 API 结果生成 response。")],-1),G=s("li",null,[s("p",null,"最后，我们引入了第五个 agent，作为测试者。该 agent 自动验证生成的数据是否符合我们的设计原则（实际上它丢弃了 35% 的实例）")],-1),N=e('<p>所有的 agent 都是通过简单的 prompt + llama 3 实现。</p><figure><img src="'+v+'" alt="image-20240811151138851" tabindex="0" loading="lazy"><figcaption>image-20240811151138851</figcaption></figure><h4 id="dpo" tabindex="-1"><a class="header-anchor" href="#dpo" aria-hidden="true">#</a> DPO</h4><p>Llama 发现 PPO 没有 DPO 好，于是只用了 DPO，preference data 中，有 5.89% 是和 reasoning 还有 tool 相关的。</p><figure><img src="'+m+'" alt="image-20240811163510992" tabindex="0" loading="lazy"><figcaption>image-20240811163510992</figcaption></figure><h3 id="效果" tabindex="-1"><a class="header-anchor" href="#效果" aria-hidden="true">#</a> 效果</h3><p>Llama 的工具调用能力还是不错的：</p><figure><img src="'+q+'" alt="image-20240811165517133" tabindex="0" loading="lazy"><figcaption>image-20240811165517133</figcaption></figure><h3 id="其他" tabindex="-1"><a class="header-anchor" href="#其他" aria-hidden="true">#</a> 其他</h3>',9),Q={href:"https://arxiv.org/pdf/2407.21783",target:"_blank",rel:"noopener noreferrer"},R=e(`<h2 id="mistral-large-2" tabindex="-1"><a class="header-anchor" href="#mistral-large-2" aria-hidden="true">#</a> Mistral Large 2</h2><p>Mistral Large 也是采用了额外的 special token 来辅助 function call 的处理。</p><p>比如对于以下对话内容：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="shiki github-light" style="background-color:#fff;" tabindex="0"><code><span class="line"><span style="color:#24292E;">messages </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> [ </span></span>
<span class="line"><span style="color:#24292E;">    {</span><span style="color:#032F62;">&quot;role&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;user&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;content&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;What&#39;s the weather like in Paris?&quot;</span><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;">    {</span><span style="color:#032F62;">&quot;role&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;assistant&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;content&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;tool_calls&quot;</span><span style="color:#24292E;">: [</span></span>
<span class="line"><span style="color:#24292E;">        {</span><span style="color:#032F62;">&quot;type&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;function&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;id&quot;</span><span style="color:#24292E;">:</span><span style="color:#032F62;">&#39;D681PevKs&#39;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;function&quot;</span><span style="color:#24292E;">: </span></span>
<span class="line"><span style="color:#24292E;">            {</span><span style="color:#032F62;">&quot;name&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;get_current_weather&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;arguments&quot;</span><span style="color:#24292E;">: {</span><span style="color:#032F62;">&quot;location&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;Paris, France&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;format&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;celsius&quot;</span><span style="color:#24292E;">}}</span></span>
<span class="line"><span style="color:#24292E;">            }]},</span></span>
<span class="line"><span style="color:#24292E;">    {</span><span style="color:#032F62;">&quot;role&quot;</span><span style="color:#24292E;">:</span><span style="color:#032F62;">&quot;tool&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;name&quot;</span><span style="color:#24292E;">:</span><span style="color:#032F62;">&quot;get_current_weather&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;content&quot;</span><span style="color:#24292E;">:</span><span style="color:#032F62;">&quot;20&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;tool_call_id&quot;</span><span style="color:#24292E;">:</span><span style="color:#032F62;">&#39;D681PevKs&#39;</span><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#24292E;">    ]</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>经过 mistral large 2 的 tokenizer 处理：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="shiki github-light" style="background-color:#fff;" tabindex="0"><code><span class="line"><span style="color:#D73A49;">def</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">get_current_weather</span><span style="color:#24292E;">(location: </span><span style="color:#005CC5;">str</span><span style="color:#24292E;">, format: </span><span style="color:#005CC5;">str</span><span style="color:#24292E;">):</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#032F62;">    Get the current weather</span></span>
<span class="line"></span>
<span class="line"><span style="color:#032F62;">    Args:</span></span>
<span class="line"><span style="color:#032F62;">        location: The city and state, e.g. San Francisco, CA</span></span>
<span class="line"><span style="color:#032F62;">        format: The temperature unit to use. Infer this from the users location. (choices: [&quot;celsius&quot;, &quot;fahrenheit&quot;])</span></span>
<span class="line"><span style="color:#032F62;">    &quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">pass</span></span>
<span class="line"><span style="color:#24292E;">model_path </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;/home/kevin/models/Mistral-Large-Instruct-2407&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">tokenizer </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> AutoTokenizer.from_pretrained(model_path, </span></span>
<span class="line"><span style="color:#24292E;">                                          </span></span>
<span class="line"><span style="color:#24292E;">                                          </span><span style="color:#E36209;">trust_remote_code</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">True</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">                                          )</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">inputs </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> tokenizer.apply_chat_template(messages, </span></span>
<span class="line"><span style="color:#24292E;">                                       </span><span style="color:#E36209;">tokenize</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">False</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">                                       </span><span style="color:#E36209;">tools</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> [get_current_weather],</span></span>
<span class="line"><span style="color:#24292E;">                                       </span><span style="color:#E36209;">add_generation_prompt</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">True</span><span style="color:#24292E;">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>输入 <code>input</code> 如下：</p><div class="language-markdown line-numbers-mode" data-ext="md"><pre class="shiki github-light" style="background-color:#fff;" tabindex="0"><code><span class="line"><span style="color:#24292E;">&lt;s&gt;[</span><span style="color:#032F62;text-decoration:underline;">AVAILABLE_TOOLS</span><span style="color:#24292E;">] [</span></span>
<span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">    &quot;type&quot;: &quot;function&quot;,</span></span>
<span class="line"><span style="color:#24292E;">    &quot;function&quot;: {</span></span>
<span class="line"><span style="color:#24292E;">        &quot;name&quot;: &quot;get_current_weather&quot;,</span></span>
<span class="line"><span style="color:#24292E;">        &quot;description&quot;: &quot;Get the current weather&quot;,</span></span>
<span class="line"><span style="color:#24292E;">        &quot;parameters&quot;: {</span></span>
<span class="line"><span style="color:#24292E;">            &quot;type&quot;: &quot;object&quot;,</span></span>
<span class="line"><span style="color:#24292E;">            &quot;properties&quot;: {</span></span>
<span class="line"><span style="color:#24292E;">                &quot;location&quot;: {</span></span>
<span class="line"><span style="color:#24292E;">                    &quot;type&quot;: &quot;string&quot;,</span></span>
<span class="line"><span style="color:#24292E;">                    &quot;description&quot;: &quot;The city and state, e.g. San Francisco, CA&quot;</span></span>
<span class="line"><span style="color:#24292E;">                },</span></span>
<span class="line"><span style="color:#24292E;">                &quot;format&quot;: {</span></span>
<span class="line"><span style="color:#24292E;">                    &quot;type&quot;: &quot;string&quot;,</span></span>
<span class="line"><span style="color:#24292E;">                    &quot;enum&quot;: [</span></span>
<span class="line"><span style="color:#24292E;">                        &quot;celsius&quot;,</span></span>
<span class="line"><span style="color:#24292E;">                        &quot;fahrenheit&quot;</span></span>
<span class="line"><span style="color:#24292E;">                    ],</span></span>
<span class="line"><span style="color:#24292E;">                    &quot;description&quot;: &quot;The temperature unit to use. Infer this from the users location.&quot;</span></span>
<span class="line"><span style="color:#24292E;">                }</span></span>
<span class="line"><span style="color:#24292E;">            },</span></span>
<span class="line"><span style="color:#24292E;">            &quot;required&quot;: [</span></span>
<span class="line"><span style="color:#24292E;">                &quot;location&quot;,</span></span>
<span class="line"><span style="color:#24292E;">                &quot;format&quot;</span></span>
<span class="line"><span style="color:#24292E;">            ]</span></span>
<span class="line"><span style="color:#24292E;">        }</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#24292E;">]</span></span>
<span class="line"><span style="color:#24292E;">[</span><span style="color:#032F62;text-decoration:underline;">/AVAILABLE_TOOLS</span><span style="color:#24292E;">]</span></span>
<span class="line"><span style="color:#24292E;">[</span><span style="color:#032F62;text-decoration:underline;">INST</span><span style="color:#24292E;">] What&#39;s the weather like in Paris?[</span><span style="color:#032F62;text-decoration:underline;">/INST</span><span style="color:#24292E;">]</span></span>
<span class="line"><span style="color:#24292E;">[</span><span style="color:#032F62;text-decoration:underline;">TOOL_CALLS</span><span style="color:#24292E;">] </span></span>
<span class="line"><span style="color:#24292E;">[</span></span>
<span class="line"><span style="color:#24292E;">    {</span></span>
<span class="line"><span style="color:#24292E;">        &quot;name&quot;: &quot;get_current_weather&quot;,</span></span>
<span class="line"><span style="color:#24292E;">        &quot;arguments&quot;: {</span></span>
<span class="line"><span style="color:#24292E;">            &quot;location&quot;: &quot;Paris, France&quot;,</span></span>
<span class="line"><span style="color:#24292E;">            &quot;format&quot;: &quot;celsius&quot;</span></span>
<span class="line"><span style="color:#24292E;">        },</span></span>
<span class="line"><span style="color:#24292E;">        &quot;id&quot;: &quot;D681PevKs&quot;</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">]</span></span>
<span class="line"><span style="color:#24292E;">&lt;/s&gt;</span></span>
<span class="line"><span style="color:#24292E;">[</span><span style="color:#032F62;text-decoration:underline;">TOOL_RESULTS</span><span style="color:#24292E;">] {&quot;content&quot;: 20, &quot;call_id&quot;: &quot;D681PevKs&quot;}[</span><span style="color:#032F62;text-decoration:underline;">/TOOL_RESULTS</span><span style="color:#24292E;">]</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>关注点：</strong></p><ul><li>为了方便展示观看，以上 <code>inputs</code> 进行了必要的格式化。</li><li>function 的信息是统一放在了 system prompt 的地方。</li><li>用了 <code>[TOOL_CALLS]</code>, <code>[TOOL_RESULTS]</code> 等额外 token 来辅助 function calling。</li></ul><p>具体的 mistral large 2 Chat Template 如下：</p><div class="language-markdown line-numbers-mode" data-ext="md"><pre class="shiki github-light" style="background-color:#fff;" tabindex="0"><code><span class="line"><span style="color:#24292E;">{%- if messages[</span><span style="color:#032F62;text-decoration:underline;">0</span><span style="color:#24292E;">][</span><span style="color:#032F62;text-decoration:underline;">&quot;role&quot;</span><span style="color:#24292E;">] == &quot;system&quot; %}</span></span>
<span class="line"><span style="color:#24292E;">    {%- set system_message = messages[</span><span style="color:#032F62;text-decoration:underline;">0</span><span style="color:#24292E;">][</span><span style="color:#032F62;text-decoration:underline;">&quot;content&quot;</span><span style="color:#24292E;">] %}</span></span>
<span class="line"><span style="color:#24292E;">    {%- set loop_messages = messages[</span><span style="color:#032F62;text-decoration:underline;">1:</span><span style="color:#24292E;">] %}</span></span>
<span class="line"><span style="color:#24292E;">{%- else %}</span></span>
<span class="line"><span style="color:#24292E;">    {%- set loop_messages = messages %}</span></span>
<span class="line"><span style="color:#24292E;">{%- endif %}</span></span>
<span class="line"><span style="color:#24292E;">{%- if not tools is defined %}</span></span>
<span class="line"><span style="color:#24292E;">    {%- set tools = none %}</span></span>
<span class="line"><span style="color:#24292E;">{%- endif %}</span></span>
<span class="line"><span style="color:#24292E;">{%- set user_messages = loop_messages | selectattr(&quot;role&quot;, &quot;equalto&quot;, &quot;user&quot;) | list %}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">{%- for message in loop_messages | rejectattr(&quot;role&quot;, &quot;equalto&quot;, &quot;tool&quot;) | rejectattr(&quot;role&quot;, &quot;equalto&quot;, &quot;tool_results&quot;) | selectattr(&quot;tool_calls&quot;, &quot;undefined&quot;) %}</span></span>
<span class="line"><span style="color:#24292E;">    {%- if (message[</span><span style="color:#032F62;text-decoration:underline;">&quot;role&quot;</span><span style="color:#24292E;">] == &quot;user&quot;) != (loop.index0 % 2 == 0) %}</span></span>
<span class="line"><span style="color:#24292E;">        {{- raise_exception(&quot;After the optional system message, conversation roles must alternate user/assistant/user/assistant/...&quot;) }}</span></span>
<span class="line"><span style="color:#24292E;">    {%- endif %}</span></span>
<span class="line"><span style="color:#24292E;">{%- endfor %}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">{{- bos_token }}</span></span>
<span class="line"><span style="color:#24292E;">{%- for message in loop_messages %}</span></span>
<span class="line"><span style="color:#24292E;">    {%- if message[</span><span style="color:#032F62;text-decoration:underline;">&quot;role&quot;</span><span style="color:#24292E;">] == &quot;user&quot; %}</span></span>
<span class="line"><span style="color:#24292E;">        {%- if tools is not none and (message == user_messages[</span><span style="color:#032F62;text-decoration:underline;">-1</span><span style="color:#24292E;">]) %}</span></span>
<span class="line"><span style="color:#24292E;">            {{- &quot;[</span><span style="color:#032F62;text-decoration:underline;">AVAILABLE_TOOLS</span><span style="color:#24292E;">] [&quot; }}</span></span>
<span class="line"><span style="color:#24292E;">            {%- for tool in tools %}</span></span>
<span class="line"><span style="color:#24292E;">        {%- set tool = tool.function %}</span></span>
<span class="line"><span style="color:#24292E;">        {{- &#39;{&quot;type&quot;: &quot;function&quot;, &quot;function&quot;: {&#39; }}</span></span>
<span class="line"><span style="color:#24292E;">        {%- for key, val in tool.items() if key != &quot;return&quot; %}</span></span>
<span class="line"><span style="color:#24292E;">            {%- if val is string %}</span></span>
<span class="line"><span style="color:#24292E;">            {{- &#39;&quot;&#39; + key + &#39;&quot;: &quot;&#39; + val + &#39;&quot;&#39; }}</span></span>
<span class="line"><span style="color:#24292E;">            {%- else %}</span></span>
<span class="line"><span style="color:#24292E;">            {{- &#39;&quot;&#39; + key + &#39;&quot;: &#39; + val|tojson }}</span></span>
<span class="line"><span style="color:#24292E;">            {%- endif %}</span></span>
<span class="line"><span style="color:#24292E;">            {%- if not loop.last %}</span></span>
<span class="line"><span style="color:#24292E;">            {{- &quot;, &quot; }}</span></span>
<span class="line"><span style="color:#24292E;">            {%- endif %}</span></span>
<span class="line"><span style="color:#24292E;">        {%- endfor %}</span></span>
<span class="line"><span style="color:#24292E;">        {{- &quot;}}&quot; }}</span></span>
<span class="line"><span style="color:#24292E;">                {%- if not loop.last %}</span></span>
<span class="line"><span style="color:#24292E;">                    {{- &quot;, &quot; }}</span></span>
<span class="line"><span style="color:#24292E;">                {%- else %}</span></span>
<span class="line"><span style="color:#24292E;">                    {{- &quot;]&quot; }}</span></span>
<span class="line"><span style="color:#24292E;">                {%- endif %}</span></span>
<span class="line"><span style="color:#24292E;">            {%- endfor %}</span></span>
<span class="line"><span style="color:#24292E;">            {{- &quot;[</span><span style="color:#032F62;text-decoration:underline;">/AVAILABLE_TOOLS</span><span style="color:#24292E;">]&quot; }}</span></span>
<span class="line"><span style="color:#24292E;">            {%- endif %}</span></span>
<span class="line"><span style="color:#24292E;">        {%- if loop.last and system_message is defined %}</span></span>
<span class="line"><span style="color:#24292E;">            {{- &quot;[</span><span style="color:#032F62;text-decoration:underline;">INST</span><span style="color:#24292E;">] &quot; + system_message + &quot;\\n\\n&quot; + message[</span><span style="color:#032F62;text-decoration:underline;">&quot;content&quot;</span><span style="color:#24292E;">] + &quot;[</span><span style="color:#032F62;text-decoration:underline;">/INST</span><span style="color:#24292E;">]&quot; }}</span></span>
<span class="line"><span style="color:#24292E;">        {%- else %}</span></span>
<span class="line"><span style="color:#24292E;">            {{- &quot;[</span><span style="color:#032F62;text-decoration:underline;">INST</span><span style="color:#24292E;">] &quot; + message[</span><span style="color:#032F62;text-decoration:underline;">&quot;content&quot;</span><span style="color:#24292E;">] + &quot;[</span><span style="color:#032F62;text-decoration:underline;">/INST</span><span style="color:#24292E;">]&quot; }}</span></span>
<span class="line"><span style="color:#24292E;">        {%- endif %}</span></span>
<span class="line"><span style="color:#24292E;">    {%- elif message[</span><span style="color:#032F62;text-decoration:underline;">&quot;role&quot;</span><span style="color:#24292E;">] == &quot;tool_calls&quot; or message.tool_calls is defined %}</span></span>
<span class="line"><span style="color:#24292E;">        {%- if message.tool_calls is defined %}</span></span>
<span class="line"><span style="color:#24292E;">            {%- set tool_calls = message.tool_calls %}</span></span>
<span class="line"><span style="color:#24292E;">        {%- else %}</span></span>
<span class="line"><span style="color:#24292E;">            {%- set tool_calls = message.content %}</span></span>
<span class="line"><span style="color:#24292E;">        {%- endif %}</span></span>
<span class="line"><span style="color:#24292E;">        {{- &quot;[</span><span style="color:#032F62;text-decoration:underline;">TOOL_CALLS</span><span style="color:#24292E;">] [&quot; }}</span></span>
<span class="line"><span style="color:#24292E;">        {%- for tool_call in tool_calls %}</span></span>
<span class="line"><span style="color:#24292E;">            {%- set out = tool_call.function|tojson %}</span></span>
<span class="line"><span style="color:#24292E;">            {{- out[</span><span style="color:#032F62;text-decoration:underline;">:-1</span><span style="color:#24292E;">] }}</span></span>
<span class="line"><span style="color:#24292E;">            {%- if not tool_call.id is defined or tool_call.id|length != 9 %}</span></span>
<span class="line"><span style="color:#24292E;">                {{- raise_exception(&quot;Tool call IDs should be alphanumeric strings with length 9!&quot;) }}</span></span>
<span class="line"><span style="color:#24292E;">            {%- endif %}</span></span>
<span class="line"><span style="color:#24292E;">            {{- &#39;, &quot;id&quot;: &quot;&#39; + tool_call.id + &#39;&quot;}&#39; }}</span></span>
<span class="line"><span style="color:#24292E;">            {%- if not loop.last %}</span></span>
<span class="line"><span style="color:#24292E;">                {{- &quot;, &quot; }}</span></span>
<span class="line"><span style="color:#24292E;">            {%- else %}</span></span>
<span class="line"><span style="color:#24292E;">                {{- &quot;]&quot; + eos_token }}</span></span>
<span class="line"><span style="color:#24292E;">            {%- endif %}</span></span>
<span class="line"><span style="color:#24292E;">        {%- endfor %}</span></span>
<span class="line"><span style="color:#24292E;">    {%- elif message[</span><span style="color:#032F62;text-decoration:underline;">&quot;role&quot;</span><span style="color:#24292E;">] == &quot;assistant&quot; %}</span></span>
<span class="line"><span style="color:#24292E;">        {{- &quot; &quot; + message[</span><span style="color:#032F62;text-decoration:underline;">&quot;content&quot;</span><span style="color:#24292E;">] + eos_token}}</span></span>
<span class="line"><span style="color:#24292E;">    {%- elif message[</span><span style="color:#032F62;text-decoration:underline;">&quot;role&quot;</span><span style="color:#24292E;">] == &quot;tool_results&quot; or message[</span><span style="color:#032F62;text-decoration:underline;">&quot;role&quot;</span><span style="color:#24292E;">] == &quot;tool&quot; %}</span></span>
<span class="line"><span style="color:#24292E;">        {%- if message.content is defined and message.content.content is defined %}</span></span>
<span class="line"><span style="color:#24292E;">            {%- set content = message.content.content %}</span></span>
<span class="line"><span style="color:#24292E;">        {%- else %}</span></span>
<span class="line"><span style="color:#24292E;">            {%- set content = message.content %}</span></span>
<span class="line"><span style="color:#24292E;">        {%- endif %}</span></span>
<span class="line"><span style="color:#24292E;">        {{- &#39;[</span><span style="color:#032F62;text-decoration:underline;">TOOL_RESULTS</span><span style="color:#24292E;">] {&quot;content&quot;: &#39; + content|string + &quot;, &quot; }}</span></span>
<span class="line"><span style="color:#24292E;">        {%- if not message.tool_call_id is defined or message.tool_call_id|length != 9 %}</span></span>
<span class="line"><span style="color:#24292E;">            {{- raise_exception(&quot;Tool call IDs should be alphanumeric strings with length 9!&quot;) }}</span></span>
<span class="line"><span style="color:#24292E;">        {%- endif %}</span></span>
<span class="line"><span style="color:#24292E;">        {{- &#39;&quot;call_id&quot;: &quot;&#39; + message.tool_call_id + &#39;&quot;}[</span><span style="color:#032F62;text-decoration:underline;">/TOOL_RESULTS</span><span style="color:#24292E;">]&#39; }}</span></span>
<span class="line"><span style="color:#24292E;">    {%- else %}</span></span>
<span class="line"><span style="color:#24292E;">        {{- raise_exception(&quot;Only user and assistant roles are supported, with the exception of an initial optional system message!&quot;) }}</span></span>
<span class="line"><span style="color:#24292E;">    {%- endif %}</span></span>
<span class="line"><span style="color:#24292E;">{%- endfor %}</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="glm-4-9b-chat" tabindex="-1"><a class="header-anchor" href="#glm-4-9b-chat" aria-hidden="true">#</a> glm-4-9b-chat</h2>`,13),U={href:"https://github.com/THUDM/GLM-4/tree/main",target:"_blank",rel:"noopener noreferrer"},K={href:"https://arxiv.org/pdf/2406.12793",target:"_blank",rel:"noopener noreferrer"},Y=e(`<h3 id="对话协议" tabindex="-1"><a class="header-anchor" href="#对话协议" aria-hidden="true">#</a> 对话协议</h3><p>GLM 中的特殊 token 有:</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="shiki github-light" style="background-color:#fff;" tabindex="0"><code><span class="line"><span style="color:#24292E;">[</span><span style="color:#032F62;">&quot;&lt;|endoftext|&gt;&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;[MASK]&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;[gMASK]&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;[sMASK]&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;&lt;sop&gt;&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;&lt;eop&gt;&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;&lt;|system|&gt;&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">                               </span><span style="color:#032F62;">&quot;&lt;|user|&gt;&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;&lt;|assistant|&gt;&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;&lt;|observation|&gt;&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;&lt;|begin_of_image|&gt;&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;&lt;|end_of_image|&gt;&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">                               </span><span style="color:#032F62;">&quot;&lt;|begin_of_video|&gt;&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;&lt;|end_of_video|&gt;&quot;</span><span style="color:#24292E;">]</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>其中 <code>&lt;|observation|&gt;</code> 用来标记工具的执行结果。</p><p>GLM 使用的 chat template 如下：</p><div class="language-markdown line-numbers-mode" data-ext="md"><pre class="shiki github-light" style="background-color:#fff;" tabindex="0"><code><span class="line"><span style="color:#24292E;">[</span><span style="color:#032F62;text-decoration:underline;">gMASK</span><span style="color:#24292E;">]&lt;sop&gt;{% for item in messages %}{% if item[</span><span style="color:#032F62;text-decoration:underline;">&#39;tools&#39;</span><span style="color:#24292E;">] is defined %}&lt;|system|&gt;</span></span>
<span class="line"><span style="color:#24292E;">你是一个名为 GLM-4 的人工智能助手。你是基于智谱 AI 训练的语言模型 GLM-4 模型开发的，你的任务是针对用户的问题和要求提供适当的答复和支持。</span></span>
<span class="line"></span>
<span class="line"><span style="color:#005CC5;font-weight:bold;"># 可用工具{% set tools = item[</span><span style="color:#032F62;text-decoration:underline;">&#39;tools&#39;</span><span style="color:#005CC5;font-weight:bold;">] %}{% for tool in tools %}{% if tool[</span><span style="color:#032F62;text-decoration:underline;">&#39;type&#39;</span><span style="color:#005CC5;font-weight:bold;">] == &#39;function&#39; %}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#005CC5;font-weight:bold;">## {{ tool[</span><span style="color:#032F62;text-decoration:underline;">&#39;function&#39;</span><span style="color:#005CC5;font-weight:bold;">][</span><span style="color:#032F62;text-decoration:underline;">&#39;name&#39;</span><span style="color:#005CC5;font-weight:bold;">] }}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">{{ tool[</span><span style="color:#032F62;text-decoration:underline;">&#39;function&#39;</span><span style="color:#24292E;">] | tojson(indent=4) }}</span></span>
<span class="line"><span style="color:#24292E;">在调用上述函数时，请使用 Json 格式表示调用的参数。{% elif tool[</span><span style="color:#032F62;text-decoration:underline;">&#39;type&#39;</span><span style="color:#24292E;">] == &#39;python&#39; %}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#005CC5;font-weight:bold;">## python</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">当你向 </span><span style="color:#005CC5;">\`python\`</span><span style="color:#24292E;"> 发送包含 Python 代码的消息时，该代码将会在一个有状态的 Jupyter notebook 环境中执行。</span></span>
<span class="line"><span style="color:#005CC5;">\`python\`</span><span style="color:#24292E;"> 返回代码执行的输出，或在执行 60 秒后返回超时。</span></span>
<span class="line"><span style="color:#005CC5;">\`/mnt/data\`</span><span style="color:#24292E;"> 将会持久化存储你的文件。在此会话中，</span><span style="color:#005CC5;">\`python\`</span><span style="color:#24292E;"> 无法访问互联网。不要使用 </span><span style="color:#005CC5;">\`python\`</span><span style="color:#24292E;"> 进行任何网络请求或者在线 API 调用，这些在线内容的访问将不会成功。{% elif tool[</span><span style="color:#032F62;text-decoration:underline;">&#39;type&#39;</span><span style="color:#24292E;">] == &#39;simple_browser&#39; %}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#005CC5;font-weight:bold;">## simple_browser</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">你可以使用 </span><span style="color:#005CC5;">\`simple_browser\`</span><span style="color:#24292E;"> 工具。该工具支持以下函数：</span></span>
<span class="line"><span style="color:#005CC5;">\`search(query: str, recency_days: int)\`</span><span style="color:#24292E;">：使用搜索引擎进行查询并显示结果，可以使用 </span><span style="color:#005CC5;">\`recency_days\`</span><span style="color:#24292E;"> 参数控制搜索内容的时效性。</span></span>
<span class="line"><span style="color:#005CC5;">\`mclick(ids: list[int])\`</span><span style="color:#24292E;">：获取一系列指定 id 的页面内容。每次调用时，须选择 3-10 个页面。选择多个角度的页面，同时尽可能选择可信任的信息来源。考虑到部分页面是无法加载的，你也可以多打开一些可能有用的页面而不用担心内容过多。</span></span>
<span class="line"><span style="color:#005CC5;">\`open_url(url: str)\`</span><span style="color:#24292E;">：打开指定的 URL。</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">使用 </span><span style="color:#005CC5;">\`【{引用 id}†{引用文本}】\`</span><span style="color:#24292E;"> 来引用内容。</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">操作步骤：1. 使用 </span><span style="color:#005CC5;">\`search\`</span><span style="color:#24292E;"> 来获得信息列表; 2. 使用 </span><span style="color:#005CC5;">\`mclick\`</span><span style="color:#24292E;"> 来获取指定 ID 页面的内容; 3. 根据获得的内容进行回复。在回复中应当引用信息来源。</span></span>
<span class="line"><span style="color:#24292E;"> 如果用户提供了 URL，也可以用 </span><span style="color:#005CC5;">\`open_url\`</span><span style="color:#24292E;"> 直接打开页面。</span></span>
<span class="line"><span style="color:#24292E;">如果初次搜索结果没有找到合适的信息，也可以再次使用 </span><span style="color:#005CC5;">\`search\`</span><span style="color:#24292E;"> 进行搜索。{% elif tool[</span><span style="color:#032F62;text-decoration:underline;">&#39;type&#39;</span><span style="color:#24292E;">] == &#39;cogview&#39; %}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#005CC5;font-weight:bold;">## cogview</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">如果用户的请求中包含了对图像的描述，你可以使用 </span><span style="color:#005CC5;">\`cogview\`</span><span style="color:#24292E;"> 来生成图像并展示给用户。你需要向 </span><span style="color:#005CC5;">\`cogview\`</span><span style="color:#24292E;"> 发送图像描述，规则：</span></span>
<span class="line"><span style="color:#E36209;">-</span><span style="color:#24292E;"> 发送给 </span><span style="color:#005CC5;">\`cogview\`</span><span style="color:#24292E;"> 的消息必须使用英语。用户的中文描述必须完全翻译为英语。</span></span>
<span class="line"><span style="color:#E36209;">-</span><span style="color:#24292E;"> 应当尽可能详细地描述图像生成的需求，需求描述约 100 英文单词。</span></span>
<span class="line"><span style="color:#E36209;">-</span><span style="color:#24292E;"> 保持用户原始描述的意图。不要虚构内容或者没见过的人物。</span></span>
<span class="line"><span style="color:#E36209;">-</span><span style="color:#24292E;"> 如无特殊说明，所在地为中国，持有中国立场并遵循中国社会主义价值观。{% endif %}{% endfor %}{% endif %}{% if item[</span><span style="color:#032F62;text-decoration:underline;">&#39;content&#39;</span><span style="color:#24292E;">] %}&lt;|{{ item[</span><span style="color:#032F62;text-decoration:underline;">&#39;role&#39;</span><span style="color:#24292E;">] }}|&gt;{{ item[</span><span style="color:#032F62;text-decoration:underline;">&#39;metadata&#39;</span><span style="color:#24292E;">] }}</span></span>
<span class="line"><span style="color:#24292E;">{{ item[</span><span style="color:#032F62;text-decoration:underline;">&#39;content&#39;</span><span style="color:#24292E;">] }}{% endif %}{% endfor %}{% if add_generation_prompt %}&lt;|assistant|&gt;{% endif %}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>通过以下对话内容进行示例：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="shiki github-light" style="background-color:#fff;" tabindex="0"><code><span class="line"><span style="color:#24292E;">messages </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> [</span></span>
<span class="line"><span style="color:#24292E;">    {</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#032F62;">&quot;role&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;system&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#032F62;">&quot;content&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#032F62;">&quot;tools&quot;</span><span style="color:#24292E;">: [</span></span>
<span class="line"><span style="color:#24292E;">        {</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#032F62;">&quot;type&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;function&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#032F62;">&quot;function&quot;</span><span style="color:#24292E;">: {</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#032F62;">&quot;name&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;get_recommended_books&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#032F62;">&quot;description&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;Get recommended books based on user&#39;s interests&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#032F62;">&quot;parameters&quot;</span><span style="color:#24292E;">: {</span></span>
<span class="line"><span style="color:#24292E;">              </span><span style="color:#032F62;">&quot;type&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;object&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">              </span><span style="color:#032F62;">&quot;properties&quot;</span><span style="color:#24292E;">: {</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#032F62;">&quot;interests&quot;</span><span style="color:#24292E;">: {</span></span>
<span class="line"><span style="color:#24292E;">                  </span><span style="color:#032F62;">&quot;type&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;array&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">                  </span><span style="color:#032F62;">&quot;items&quot;</span><span style="color:#24292E;">: {</span></span>
<span class="line"><span style="color:#24292E;">                    </span><span style="color:#032F62;">&quot;type&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;string&quot;</span></span>
<span class="line"><span style="color:#24292E;">                  },</span></span>
<span class="line"><span style="color:#24292E;">                  </span><span style="color:#032F62;">&quot;description&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;The interests to recommend books for&quot;</span></span>
<span class="line"><span style="color:#24292E;">                }</span></span>
<span class="line"><span style="color:#24292E;">              },</span></span>
<span class="line"><span style="color:#24292E;">              </span><span style="color:#032F62;">&quot;required&quot;</span><span style="color:#24292E;">: [</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#032F62;">&quot;interests&quot;</span></span>
<span class="line"><span style="color:#24292E;">              ]</span></span>
<span class="line"><span style="color:#24292E;">            }</span></span>
<span class="line"><span style="color:#24292E;">          }</span></span>
<span class="line"><span style="color:#24292E;">        }</span></span>
<span class="line"><span style="color:#24292E;">      ]</span></span>
<span class="line"><span style="color:#24292E;">    },</span></span>
<span class="line"><span style="color:#24292E;">    {</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#032F62;">&quot;role&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;user&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#032F62;">&quot;content&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;Hi, I am looking for some book recommendations. I am interested in history and science fiction.&quot;</span></span>
<span class="line"><span style="color:#24292E;">    },</span></span>
<span class="line"><span style="color:#24292E;">    {</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#032F62;">&quot;role&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;assistant&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#032F62;">&quot;content&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;{</span><span style="color:#005CC5;">\\&quot;</span><span style="color:#032F62;">name</span><span style="color:#005CC5;">\\&quot;</span><span style="color:#032F62;">: </span><span style="color:#005CC5;">\\&quot;</span><span style="color:#032F62;">get_recommended_books</span><span style="color:#005CC5;">\\&quot;</span><span style="color:#032F62;">, </span><span style="color:#005CC5;">\\&quot;</span><span style="color:#032F62;">arguments</span><span style="color:#005CC5;">\\&quot;</span><span style="color:#032F62;">: {</span><span style="color:#005CC5;">\\&quot;</span><span style="color:#032F62;">interests</span><span style="color:#005CC5;">\\&quot;</span><span style="color:#032F62;">: [</span><span style="color:#005CC5;">\\&quot;</span><span style="color:#032F62;">history</span><span style="color:#005CC5;">\\&quot;</span><span style="color:#032F62;">, </span><span style="color:#005CC5;">\\&quot;</span><span style="color:#032F62;">science fiction</span><span style="color:#005CC5;">\\&quot;</span><span style="color:#032F62;">]}}&quot;</span></span>
<span class="line"><span style="color:#24292E;">    },</span></span>
<span class="line"><span style="color:#24292E;">    {</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#032F62;">&quot;role&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;observation&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#032F62;">&quot;content&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;{</span><span style="color:#005CC5;">\\&quot;</span><span style="color:#032F62;">books</span><span style="color:#005CC5;">\\&quot;</span><span style="color:#032F62;">: [</span><span style="color:#005CC5;">\\&quot;</span><span style="color:#032F62;">Sapiens: A Brief History of Humankind by Yuval Noah Harari</span><span style="color:#005CC5;">\\&quot;</span><span style="color:#032F62;">, </span><span style="color:#005CC5;">\\&quot;</span><span style="color:#032F62;">A Brief History of Time by Stephen Hawking</span><span style="color:#005CC5;">\\&quot;</span><span style="color:#032F62;">, </span><span style="color:#005CC5;">\\&quot;</span><span style="color:#032F62;">Dune by Frank Herbert</span><span style="color:#005CC5;">\\&quot;</span><span style="color:#032F62;">, </span><span style="color:#005CC5;">\\&quot;</span><span style="color:#032F62;">The Martian by Andy Weir</span><span style="color:#005CC5;">\\&quot;</span><span style="color:#032F62;">]}&quot;</span></span>
<span class="line"><span style="color:#24292E;">    },</span></span>
<span class="line"><span style="color:#24292E;">    {</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#032F62;">&quot;role&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;assistant&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#032F62;">&quot;content&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;Based on your interests in history and science fiction, I would recommend the following books: </span><span style="color:#005CC5;">\\&quot;</span><span style="color:#032F62;">Sapiens: A Brief History of Humankind</span><span style="color:#005CC5;">\\&quot;</span><span style="color:#032F62;"> by Yuval Noah Harari, </span><span style="color:#005CC5;">\\&quot;</span><span style="color:#032F62;">A Brief History of Time</span><span style="color:#005CC5;">\\&quot;</span><span style="color:#032F62;"> by Stephen Hawking, </span><span style="color:#005CC5;">\\&quot;</span><span style="color:#032F62;">Dune</span><span style="color:#005CC5;">\\&quot;</span><span style="color:#032F62;"> by Frank Herbert, and </span><span style="color:#005CC5;">\\&quot;</span><span style="color:#032F62;">The Martian</span><span style="color:#005CC5;">\\&quot;</span><span style="color:#032F62;"> by Andy Weir.&quot;</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">  ]</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>那么，对应的 input 就会是：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="shiki github-light" style="background-color:#fff;" tabindex="0"><code><span class="line"><span style="color:#24292E;">tokenizer </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> AutoTokenizer.from_pretrained(</span><span style="color:#032F62;">&quot;/home/kevin/models/glm-4-9b-chat&quot;</span><span style="color:#24292E;">, </span><span style="color:#E36209;">trust_remote_code</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">True</span><span style="color:#24292E;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">inputs </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> tokenizer.apply_chat_template(messages, </span></span>
<span class="line"><span style="color:#24292E;">                                       </span><span style="color:#E36209;">tokenize</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">False</span><span style="color:#24292E;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># inputs =</span></span>
<span class="line"><span style="color:#032F62;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#032F62;">[gMASK]&lt;sop&gt;&lt;|system|&gt;</span></span>
<span class="line"><span style="color:#032F62;">你是一个名为 GLM-4 的人工智能助手。你是基于智谱 AI 训练的语言模型 GLM-4 模型开发的，你的任务是针对用户的问题和要求提供适当的答复和支持。</span></span>
<span class="line"></span>
<span class="line"><span style="color:#032F62;"># 可用工具</span></span>
<span class="line"><span style="color:#032F62;">## get_recommended_books</span></span>
<span class="line"></span>
<span class="line"><span style="color:#032F62;">{</span></span>
<span class="line"><span style="color:#032F62;">    &quot;name&quot;: &quot;get_recommended_books&quot;,</span></span>
<span class="line"><span style="color:#032F62;">    &quot;description&quot;: &quot;Get recommended books based on user&#39;s interests&quot;,</span></span>
<span class="line"><span style="color:#032F62;">    &quot;parameters&quot;: {</span></span>
<span class="line"><span style="color:#032F62;">        &quot;type&quot;: &quot;object&quot;,</span></span>
<span class="line"><span style="color:#032F62;">        &quot;properties&quot;: {</span></span>
<span class="line"><span style="color:#032F62;">            &quot;interests&quot;: {</span></span>
<span class="line"><span style="color:#032F62;">                &quot;type&quot;: &quot;array&quot;,</span></span>
<span class="line"><span style="color:#032F62;">                &quot;items&quot;: {</span></span>
<span class="line"><span style="color:#032F62;">                    &quot;type&quot;: &quot;string&quot;</span></span>
<span class="line"><span style="color:#032F62;">                },</span></span>
<span class="line"><span style="color:#032F62;">                &quot;description&quot;: &quot;The interests to recommend books for&quot;</span></span>
<span class="line"><span style="color:#032F62;">            }</span></span>
<span class="line"><span style="color:#032F62;">        },</span></span>
<span class="line"><span style="color:#032F62;">        &quot;required&quot;: [</span></span>
<span class="line"><span style="color:#032F62;">            &quot;interests&quot;</span></span>
<span class="line"><span style="color:#032F62;">        ]</span></span>
<span class="line"><span style="color:#032F62;">    }</span></span>
<span class="line"><span style="color:#032F62;">}</span></span>
<span class="line"><span style="color:#032F62;">在调用上述函数时，请使用 Json 格式表示调用的参数。&lt;|user|&gt;</span></span>
<span class="line"><span style="color:#032F62;">Hi, I am looking for some book recommendations. I am interested in history and science fiction.&lt;|assistant|&gt;</span></span>
<span class="line"><span style="color:#032F62;">{&quot;name&quot;: &quot;get_recommended_books&quot;, &quot;arguments&quot;: {&quot;interests&quot;: [&quot;history&quot;, &quot;science fiction&quot;]}}&lt;|observation|&gt;</span></span>
<span class="line"><span style="color:#032F62;">{&quot;books&quot;: [&quot;Sapiens: A Brief History of Humankind by Yuval Noah Harari&quot;, &quot;A Brief History of Time by Stephen Hawking&quot;, &quot;Dune by Frank Herbert&quot;, &quot;The Martian by Andy Weir&quot;]}&lt;|assistant|&gt;</span></span>
<span class="line"><span style="color:#032F62;">Based on your interests in history and science fiction, I would recommend the following books: &quot;Sapiens: A Brief History of Humankind&quot; by Yuval Noah Harari, &quot;A Brief History of Time&quot; by Stephen Hawking, &quot;Dune&quot; by Frank Herbert, and &quot;The Martian&quot; by Andy Weir.</span></span>
<span class="line"><span style="color:#032F62;">&quot;&quot;&quot;</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="效果-1" tabindex="-1"><a class="header-anchor" href="#效果-1" aria-hidden="true">#</a> 效果</h3>`,11),V={href:"https://gorilla.cs.berkeley.edu/leaderboard.html",target:"_blank",rel:"noopener noreferrer"},J=s("figure",null,[s("img",{src:b,alt:"image-20240810115637993",tabindex:"0",loading:"lazy"}),s("figcaption",null,"image-20240810115637993")],-1),W=s("h3",{id:"其他-1",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#其他-1","aria-hidden":"true"},"#"),n(" 其他")],-1),Z={href:"https://github.com/THUDM/GLM-4/tree/main",target:"_blank",rel:"noopener noreferrer"},X={href:"https://arxiv.org/pdf/2406.12793",target:"_blank",rel:"noopener noreferrer"},$=s("h2",{id:"qwen-2",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#qwen-2","aria-hidden":"true"},"#"),n(" Qwen 2")],-1),ss={href:"https://qwen.readthedocs.io/zh-cn/latest/framework/function_call.html",target:"_blank",rel:"noopener noreferrer"},ns=e(`<p>Qwen2 instruct 的 chat template 如下：</p><div class="language-markdown line-numbers-mode" data-ext="md"><pre class="shiki github-light" style="background-color:#fff;" tabindex="0"><code><span class="line"><span style="color:#24292E;">{% for message in messages %}{% if loop.first and messages[</span><span style="color:#032F62;text-decoration:underline;">0</span><span style="color:#24292E;">][</span><span style="color:#032F62;text-decoration:underline;">&#39;role&#39;</span><span style="color:#24292E;">] != &#39;system&#39; %}{{ &#39;&lt;|im_start|&gt;system</span></span>
<span class="line"><span style="color:#24292E;">You are a helpful assistant.&lt;|im_end|&gt;</span></span>
<span class="line"><span style="color:#24292E;">&#39; }}{% endif %}{{&#39;&lt;|im_start|&gt;&#39; + message[</span><span style="color:#032F62;text-decoration:underline;">&#39;role&#39;</span><span style="color:#24292E;">] + &#39;</span></span>
<span class="line"><span style="color:#24292E;">&#39; + message[</span><span style="color:#032F62;text-decoration:underline;">&#39;content&#39;</span><span style="color:#24292E;">] + &#39;&lt;|im_end|&gt;&#39; + &#39;</span></span>
<span class="line"><span style="color:#24292E;">&#39;}}{% endfor %}{% if add_generation_prompt %}{{ &#39;&lt;|im_start|&gt;assistant</span></span>
<span class="line"><span style="color:#24292E;">&#39; }}{% endif %}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>可以看到，chat template 中是没有 tool 相关的 special token 的。</p>`,3),as=s("code",null,"BaseFnCallModel",-1),ls={href:"https://github.com/QwenLM/Qwen-Agent/blob/main/qwen_agent/llm/function_calling.py#L33",target:"_blank",rel:"noopener noreferrer"},es=e(`<div class="language-python line-numbers-mode" data-ext="py"><pre class="shiki github-light" style="background-color:#fff;" tabindex="0"><code><span class="line"><span style="color:#D73A49;">def</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">_prepend_fncall_system</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">        self,</span></span>
<span class="line"><span style="color:#24292E;">        messages: List[Message],</span></span>
<span class="line"><span style="color:#24292E;">        functions: List[Dict],</span></span>
<span class="line"><span style="color:#24292E;">        lang: Literal[</span><span style="color:#032F62;">&#39;en&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;zh&#39;</span><span style="color:#24292E;">],</span></span>
<span class="line"><span style="color:#24292E;">        parallel_function_calls: </span><span style="color:#005CC5;">bool</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">False</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    ) -&gt; List[Message]:</span></span>
<span class="line"><span style="color:#24292E;">        tool_desc_template </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">FN_CALL_TEMPLATE</span><span style="color:#24292E;">[lang </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> (</span><span style="color:#032F62;">&#39;_parallel&#39;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> parallel_function_calls </span><span style="color:#D73A49;">else</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;&#39;</span><span style="color:#24292E;">)]</span></span>
<span class="line"><span style="color:#24292E;">        tool_descs </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;</span><span style="color:#005CC5;">\\n\\n</span><span style="color:#032F62;">&#39;</span><span style="color:#24292E;">.join(get_function_description(function, </span><span style="color:#E36209;">lang</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">lang) </span><span style="color:#D73A49;">for</span><span style="color:#24292E;"> function </span><span style="color:#D73A49;">in</span><span style="color:#24292E;"> functions)</span></span>
<span class="line"><span style="color:#24292E;">        tool_names </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;,&#39;</span><span style="color:#24292E;">.join(function.get(</span><span style="color:#032F62;">&#39;name&#39;</span><span style="color:#24292E;">, function.get(</span><span style="color:#032F62;">&#39;name_for_model&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;&#39;</span><span style="color:#24292E;">)) </span><span style="color:#D73A49;">for</span><span style="color:#24292E;"> function </span><span style="color:#D73A49;">in</span><span style="color:#24292E;"> functions)</span></span>
<span class="line"><span style="color:#24292E;">        tool_system </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> tool_desc_template.format(</span><span style="color:#E36209;">tool_descs</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">tool_descs, </span><span style="color:#E36209;">tool_names</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">tool_names)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">assert</span><span style="color:#24292E;"> messages[</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">].role </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">SYSTEM</span></span>
<span class="line"><span style="color:#24292E;">        messages </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> copy.deepcopy(messages[:</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">]) </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> messages[</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">:]</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">isinstance</span><span style="color:#24292E;">(messages[</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">].content, </span><span style="color:#005CC5;">str</span><span style="color:#24292E;">):</span></span>
<span class="line"><span style="color:#24292E;">            messages[</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">].content </span><span style="color:#D73A49;">+=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;</span><span style="color:#005CC5;">\\n\\n</span><span style="color:#032F62;">&#39;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> tool_system</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">else</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">            messages[</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">].content.append(ContentItem(</span><span style="color:#E36209;">text</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&#39;</span><span style="color:#005CC5;">\\n\\n</span><span style="color:#032F62;">&#39;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> tool_system))</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> messages</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),os={href:"https://github.com/QwenLM/Qwen-Agent/blob/main/qwen_agent/llm/function_calling.py#L33",target:"_blank",rel:"noopener noreferrer"},ts=e(`<div class="language-python line-numbers-mode" data-ext="py"><pre class="shiki github-light" style="background-color:#fff;" tabindex="0"><code><span class="line"><span style="color:#032F62;">&quot;&quot;&quot;# 工具</span></span>
<span class="line"></span>
<span class="line"><span style="color:#032F62;">## 你拥有如下工具：</span></span>
<span class="line"></span>
<span class="line"><span style="color:#032F62;">{tool_descs}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#032F62;">## 你可以在回复中插入零次、一次或多次以下命令以调用工具：</span></span>
<span class="line"></span>
<span class="line"><span style="color:#032F62;">✿FUNCTION✿: 工具名称，必须是[{tool_names}]之一。</span></span>
<span class="line"><span style="color:#032F62;">✿ARGS✿: 工具输入</span></span>
<span class="line"><span style="color:#032F62;">✿RESULT✿: 工具结果</span></span>
<span class="line"><span style="color:#032F62;">✿RETURN✿: 根据工具结果进行回复，需将图片用![](url)渲染出来&quot;&quot;&quot;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),ps={href:"https://github.com/QwenLM/Qwen-Agent/blob/main/qwen_agent/llm/function_calling.py#L252",target:"_blank",rel:"noopener noreferrer"},is=s("h3",{id:"其他-2",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#其他-2","aria-hidden":"true"},"#"),n(" 其他")],-1),rs={href:"https://arxiv.org/abs/2407.10671",target:"_blank",rel:"noopener noreferrer"},cs={href:"https://qwenlm.github.io/zh/blog/qwen2/",target:"_blank",rel:"noopener noreferrer"};function ds(us,ys){const a=t("ExternalLinkIcon");return p(),i("div",null,[g,s("p",null,[n("根据 "),s("a",h,[n("Llama 的这个技术报告"),l(a)]),n(" 来看，llama 3 工具调用能力，是在 post training 的时候加上去的。大致的使用 tool 流程和 GPT 的 tool call 差不多，如下："),f]),_,s("ul",null,[F,C,x,s("li",null,[n("在 llama 3.1 的"),s("a",k,[n("官方文档"),l(a)]),n("中还记录了一种 User-defined Custom tool calling 的方法，但是没有在 llama3.1 70B instruct 的 jinja chat template 中找到对应的功能，可能官方还没更新 jinja template？")])]),A,s("p",null,[s("a",w,[n("The Llama 3 Herd of Models"),l(a)]),n(" 中提到工具调用是在 post training 部分加上去的，包括了多组的 SFT + DPO 训练。")]),D,s("ul",null,[s("li",null,[s("p",null,[L,n(" Calls can be simple, nested, "),T,n(" we pass a function call as an argument of another function, or parallel, "),S,n(" the model returns a list of independent function calls. Generating a diverse set of functions, queries and ground truths can be challenging (Mekala et al., 2024), and we resort to mining the Stack (Kocetkov et al., 2022) to ground our synthetic user queries in real functions. More precisely, we extract function calls and their definitions, clean and filter them, "),M,n(" for missing docstrings or non-executable functions, and use Llama 3 to generate a natural language query corresponding to the function call. 以上为原文描述，个人理解是 llama 基于 "),s("a",I,[n("the Stack"),l(a)]),n(" 的开源数据进行筛选/修改，构造了 function call 信息，而后用 llama 3 基于 function call 信息，生成对应的用户 query。")])]),s("li",null,[s("p",null,[P,n(" 采用了 "),s("a",H,[n("API-Bank: A Comprehensive Benchmark for Tool-Augmented LLMs"),l(a)]),n(" 中的方法生成数据。Llama 采用了 5 个 agent 如下图：")])]),O,j,z,B,G]),N,s("p",null,[n("更多关于 llama 3.1 tool 和 reasoning 的细节，推荐查看 "),s("a",Q,[n("The Llama 3 Herd of Models"),l(a)]),n("。")]),R,s("p",null,[s("a",U,[n("官方 github"),l(a)]),n("， "),s("a",K,[n("官方技术报告"),l(a)])]),Y,s("p",null,[n("GLM function call 能力（"),s("a",V,[n("Berkeley function-calling leaderboard"),l(a)]),n("）：")]),J,W,s("p",null,[n("GLM 公开的信息还是挺少的，"),s("a",Z,[n("官方 github"),l(a)]),n(" 及 "),s("a",X,[n("官方技术报告"),l(a)]),n(" 都没有找到一些 function call 训练细节。")]),$,s("p",null,[n("参考 Qwen2 的这个 "),s("a",ss,[n("function calling 文档"),l(a)]),n("。Qwen 2 的 function calling 功能需要依靠 Qwen-Agent 来实现。")]),ns,s("p",null,[n("参考 Qwen-Agent 的 "),as,n(" 实现（"),s("a",ls,[n("github link"),l(a)]),n("），当用 Qwen2 官方示例的 function call 方式时，function 的信息会被添加到 system prompt 中：")]),es,s("p",null,[n("添加 function call 的模板有中文和英文模板，也有并行调用和非并行调用模板，具体可以在 "),s("a",os,[n("Qwen-Agent 代码"),l(a)]),n("中查看，以下是一个中文模板示例：")]),ts,s("p",null,[n("在得到模型输出之后，通过 Qwen-Agent 中的 "),s("a",ps,[n("_postprocess_fncall_message"),l(a)]),n(" 来抽取对应的结构化数据。")]),is,s("p",null,[n("Qwen 初代的 function call 采用的 react 的思路，当时模型有在额外的工具调用数据集上专门对 function call 进行训练。Qwen 2 "),s("a",rs,[n("Qwen2 Technical Report"),l(a)]),n("， "),s("a",cs,[n("blog"),l(a)]),n(" 中虽然没有提到 function call 实现细节，但个人猜测也是经过了额外的 function call 能力训练。")])])}const qs=o(E,[["render",ds],["__file","笔记function_call.html.vue"]]);export{qs as default};
