import{_ as p}from"./plugin-vue_export-helper-c27b6911.js";import{r as e,o as t,c as r,a as s,b as n,d as l,e as c,f as o}from"./app-e29b0bb8.js";const i="/assets/img/mcp/image-20250620211847064.png",y={},d={href:"https://github.com/modelcontextprotocol",target:"_blank",rel:"noopener noreferrer"},v={href:"https://modelcontextprotocol.io/introduction",target:"_blank",rel:"noopener noreferrer"},u=o(`<h2 id="mcp-server" tabindex="-1"><a class="header-anchor" href="#mcp-server" aria-hidden="true">#</a> MCP Server</h2><div class="language-python line-numbers-mode" data-ext="py"><pre class="shiki github-light" style="background-color:#fff;" tabindex="0"><code><span class="line"><span style="color:#6A737D;"># server.py</span></span>
<span class="line"><span style="color:#D73A49;">from</span><span style="color:#24292E;"> mcp.server.fastmcp </span><span style="color:#D73A49;">import</span><span style="color:#24292E;"> FastMCP</span></span>
<span class="line"><span style="color:#D73A49;">from</span><span style="color:#24292E;"> mcp.server.fastmcp.prompts </span><span style="color:#D73A49;">import</span><span style="color:#24292E;"> base</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># Create an MCP server</span></span>
<span class="line"><span style="color:#24292E;">mcp </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> FastMCP(</span><span style="color:#032F62;">&quot;Demo&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># Add an addition tool</span></span>
<span class="line"><span style="color:#6F42C1;">@mcp.tool</span><span style="color:#24292E;">()</span></span>
<span class="line"><span style="color:#D73A49;">def</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">add</span><span style="color:#24292E;">(a: </span><span style="color:#005CC5;">int</span><span style="color:#24292E;">, b: </span><span style="color:#005CC5;">int</span><span style="color:#24292E;">) -&gt; </span><span style="color:#005CC5;">int</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;&quot;&quot;Add two numbers&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> a </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> b</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># Add a dynamic greeting resource</span></span>
<span class="line"><span style="color:#6F42C1;">@mcp.resource</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;greeting://</span><span style="color:#005CC5;">{name}</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#D73A49;">def</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">get_greeting</span><span style="color:#24292E;">(name: </span><span style="color:#005CC5;">str</span><span style="color:#24292E;">) -&gt; </span><span style="color:#005CC5;">str</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;&quot;&quot;Get a personalized greeting&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">f</span><span style="color:#032F62;">&quot;Hello, </span><span style="color:#005CC5;">{</span><span style="color:#24292E;">name</span><span style="color:#005CC5;">}</span><span style="color:#032F62;">!&quot;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>安装对应 python 环境： <code>pip install &quot;mcp[cli]&quot;</code> ，运行 <code>mcp dev server.py</code> 。</p><p>打开对应的 MCP Inspector 进行测试：command 填 <code>python</code>，arguments 填 <code>server.py</code>。点击链接后出现如下界面。</p><figure><img src="`+i+`" alt="image-20250620211847064" tabindex="0" loading="lazy"><figcaption>image-20250620211847064</figcaption></figure><p>在该界面上可以测试 <code>list_tools</code>， 调用 tool 等方式，MCP 采用了 JSON-RPC 2.0 作为消息格式，实例数据格式：</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="shiki github-light" style="background-color:#fff;" tabindex="0"><code><span class="line"><span style="color:#24292E;">{</span><span style="color:#B31D28;font-style:italic;">method</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;tools/call&quot;</span><span style="color:#24292E;">, </span><span style="color:#B31D28;font-style:italic;">params</span><span style="color:#24292E;">: {</span><span style="color:#B31D28;font-style:italic;">name</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;add&quot;</span><span style="color:#24292E;">, </span><span style="color:#B31D28;font-style:italic;">arguments</span><span style="color:#24292E;">: {</span><span style="color:#B31D28;font-style:italic;">a</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">, </span><span style="color:#B31D28;font-style:italic;">b</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">}, </span><span style="color:#B31D28;font-style:italic;">_meta</span><span style="color:#24292E;">: {</span><span style="color:#B31D28;font-style:italic;">progressToken</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">6</span><span style="color:#24292E;">}},</span><span style="color:#B31D28;font-style:italic;">…</span><span style="color:#24292E;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="mcp-client" tabindex="-1"><a class="header-anchor" href="#mcp-client" aria-hidden="true">#</a> MCP Client</h2><h3 id="建立连接" tabindex="-1"><a class="header-anchor" href="#建立连接" aria-hidden="true">#</a> 建立连接</h3><div class="language-python line-numbers-mode" data-ext="py"><pre class="shiki github-light" style="background-color:#fff;" tabindex="0"><code><span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> asyncio</span></span>
<span class="line"><span style="color:#D73A49;">from</span><span style="color:#24292E;"> typing </span><span style="color:#D73A49;">import</span><span style="color:#24292E;"> Optional</span></span>
<span class="line"><span style="color:#D73A49;">from</span><span style="color:#24292E;"> contextlib </span><span style="color:#D73A49;">import</span><span style="color:#24292E;"> AsyncExitStack</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">from</span><span style="color:#24292E;"> mcp </span><span style="color:#D73A49;">import</span><span style="color:#24292E;"> ClientSession, StdioServerParameters</span></span>
<span class="line"><span style="color:#D73A49;">from</span><span style="color:#24292E;"> mcp.client.stdio </span><span style="color:#D73A49;">import</span><span style="color:#24292E;"> stdio_client</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">from</span><span style="color:#24292E;"> dotenv </span><span style="color:#D73A49;">import</span><span style="color:#24292E;"> load_dotenv</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">load_dotenv()  </span><span style="color:#6A737D;"># load environment variables from .env</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">MCPClient</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">def</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">__init__</span><span style="color:#24292E;">(self):</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;"># Initialize session and client objects</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#005CC5;">self</span><span style="color:#24292E;">.session: Optional[ClientSession] </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">None</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#005CC5;">self</span><span style="color:#24292E;">.exit_stack </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> AsyncExitStack()</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;"># methods will go here</span></span>
<span class="line"><span style="color:#24292E;">    </span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">async</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">def</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">connect_to_server</span><span style="color:#24292E;">(self, server_script_path: </span><span style="color:#005CC5;">str</span><span style="color:#24292E;">):</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#032F62;">&quot;&quot;&quot;Connect to an MCP server</span></span>
<span class="line"></span>
<span class="line"><span style="color:#032F62;">        Args:</span></span>
<span class="line"><span style="color:#032F62;">            server_script_path: Path to the server script (.py or .js)</span></span>
<span class="line"><span style="color:#032F62;">        &quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#24292E;">        is_python </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> server_script_path.endswith(</span><span style="color:#032F62;">&#39;.py&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">        is_js </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> server_script_path.endswith(</span><span style="color:#032F62;">&#39;.js&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">not</span><span style="color:#24292E;"> (is_python </span><span style="color:#D73A49;">or</span><span style="color:#24292E;"> is_js):</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">raise</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">ValueError</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;Server script must be a .py or .js file&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">        command </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;python&quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> is_python </span><span style="color:#D73A49;">else</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;node&quot;</span></span>
<span class="line"><span style="color:#24292E;">        server_params </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> StdioServerParameters(</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#E36209;">command</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">command,</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#E36209;">args</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">[server_script_path],</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#E36209;">env</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">None</span></span>
<span class="line"><span style="color:#24292E;">        )</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">        stdio_transport </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">await</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">self</span><span style="color:#24292E;">.exit_stack.enter_async_context(stdio_client(server_params))</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#005CC5;">self</span><span style="color:#24292E;">.stdio, </span><span style="color:#005CC5;">self</span><span style="color:#24292E;">.write </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> stdio_transport</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#005CC5;">self</span><span style="color:#24292E;">.session </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">await</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">self</span><span style="color:#24292E;">.exit_stack.enter_async_context(ClientSession(</span><span style="color:#005CC5;">self</span><span style="color:#24292E;">.stdio, </span><span style="color:#005CC5;">self</span><span style="color:#24292E;">.write))</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">await</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">self</span><span style="color:#24292E;">.session.initialize()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;"># List available tools</span></span>
<span class="line"><span style="color:#24292E;">        response </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">await</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">self</span><span style="color:#24292E;">.session.list_tools()</span></span>
<span class="line"><span style="color:#24292E;">        tools </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> response.tools</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#005CC5;">print</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;</span><span style="color:#005CC5;">\\n</span><span style="color:#032F62;">Connected to server with tools:&quot;</span><span style="color:#24292E;">, [tool.name </span><span style="color:#D73A49;">for</span><span style="color:#24292E;"> tool </span><span style="color:#D73A49;">in</span><span style="color:#24292E;"> tools])</span></span>
<span class="line"><span style="color:#24292E;">        </span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;"># call tool example </span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;"># result = await self.session.call_tool(tool_name, tool_args)</span></span>
<span class="line"><span style="color:#24292E;">        </span></span>
<span class="line"><span style="color:#D73A49;">async</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">def</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">main</span><span style="color:#24292E;">():</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">len</span><span style="color:#24292E;">(sys.argv) </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">2</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#005CC5;">print</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;Usage: python client.py &lt;path_to_server_script&gt;&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">        sys.exit(</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    client </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> MCPClient()</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">try</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">await</span><span style="color:#24292E;"> client.connect_to_server(sys.argv[</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">])</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;"># await client.chat_loop()</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">finally</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">await</span><span style="color:#24292E;"> client.cleanup()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">if</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">__name__</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;__main__&quot;</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">import</span><span style="color:#24292E;"> sys</span></span>
<span class="line"><span style="color:#24292E;">    asyncio.run(main())</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;"># python client.py server.py</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>MCP Client 的 python SDK 提供了连接到 mcp server 的函数，如上。</p><h3 id="tool" tabindex="-1"><a class="header-anchor" href="#tool" aria-hidden="true">#</a> Tool</h3>`,12),E={href:"https://modelcontextprotocol.io/docs/concepts/tools",target:"_blank",rel:"noopener noreferrer"},m=o(`<p>在建立好连接后，可以使用 <code>ClientSession</code> 一类来获取对应的 Tool 信息，如</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="shiki github-light" style="background-color:#fff;" tabindex="0"><code><span class="line"><span style="color:#6A737D;"># client.py</span></span>
<span class="line"><span style="color:#D73A49;">async</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">def</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">tool_demo</span><span style="color:#24292E;">(self):</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;"># get tool info</span></span>
<span class="line"><span style="color:#24292E;">    response </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">await</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">self</span><span style="color:#24292E;">.session.list_tools()</span></span>
<span class="line"><span style="color:#24292E;">    tools </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> response.tools</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">print</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;</span><span style="color:#005CC5;">\\n</span><span style="color:#032F62;">Connected to server with tools:&quot;</span><span style="color:#24292E;">, [tool </span><span style="color:#D73A49;">for</span><span style="color:#24292E;"> tool </span><span style="color:#D73A49;">in</span><span style="color:#24292E;"> tools])</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;"># call tool example </span></span>
<span class="line"><span style="color:#24292E;">    result </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">await</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">self</span><span style="color:#24292E;">.session.call_tool(</span><span style="color:#032F62;">&quot;add&quot;</span><span style="color:#24292E;">, {</span><span style="color:#032F62;">&quot;a&quot;</span><span style="color:#24292E;">:</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;b&quot;</span><span style="color:#24292E;">:</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">})</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">print</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">f</span><span style="color:#032F62;">&quot;</span><span style="color:#005CC5;">{</span><span style="color:#24292E;">result</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">}</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>运行 <code>python client.py server.py</code> 可以从 mcp server 那边执行 <code>tool_demo</code> 函数，打印结果：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="shiki github-light" style="background-color:#fff;" tabindex="0"><code><span class="line"><span style="color:#24292E;">Connected to server </span><span style="color:#D73A49;">with</span><span style="color:#24292E;"> tools: [Tool(</span><span style="color:#E36209;">name</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&#39;add&#39;</span><span style="color:#24292E;">, </span><span style="color:#E36209;">description</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&#39;Add two numbers&#39;</span><span style="color:#24292E;">, </span><span style="color:#E36209;">inputSchema</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">{</span><span style="color:#032F62;">&#39;properties&#39;</span><span style="color:#24292E;">: {</span><span style="color:#032F62;">&#39;a&#39;</span><span style="color:#24292E;">: {</span><span style="color:#032F62;">&#39;title&#39;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&#39;A&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;type&#39;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&#39;integer&#39;</span><span style="color:#24292E;">}, </span><span style="color:#032F62;">&#39;b&#39;</span><span style="color:#24292E;">: {</span><span style="color:#032F62;">&#39;title&#39;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&#39;B&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;type&#39;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&#39;integer&#39;</span><span style="color:#24292E;">}}, </span><span style="color:#032F62;">&#39;required&#39;</span><span style="color:#24292E;">: [</span><span style="color:#032F62;">&#39;a&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;b&#39;</span><span style="color:#24292E;">], </span><span style="color:#032F62;">&#39;title&#39;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&#39;addArguments&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;type&#39;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&#39;object&#39;</span><span style="color:#24292E;">}, </span><span style="color:#E36209;">annotations</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">None</span><span style="color:#24292E;">)]</span></span>
<span class="line"><span style="color:#24292E;">result</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">CallToolResult(</span><span style="color:#E36209;">meta</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">None</span><span style="color:#24292E;">, </span><span style="color:#E36209;">content</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">[TextContent(</span><span style="color:#E36209;">type</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&#39;text&#39;</span><span style="color:#24292E;">, </span><span style="color:#E36209;">text</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&#39;3&#39;</span><span style="color:#24292E;">, </span><span style="color:#E36209;">annotations</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">None</span><span style="color:#24292E;">)], </span><span style="color:#E36209;">isError</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">False</span><span style="color:#24292E;">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>MCP server 中规定的 tool 包含了以下信息：</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="shiki github-light" style="background-color:#fff;" tabindex="0"><code><span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#B31D28;font-style:italic;">name</span><span style="color:#24292E;">: </span><span style="color:#B31D28;font-style:italic;">string;</span><span style="color:#24292E;">          </span><span style="color:#6A737D;">// Unique identifier for the tool</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#B31D28;font-style:italic;">description?:</span><span style="color:#24292E;"> </span><span style="color:#B31D28;font-style:italic;">string;</span><span style="color:#24292E;">  </span><span style="color:#6A737D;">// Human-readable description</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#B31D28;font-style:italic;">inputSchema:</span><span style="color:#24292E;"> {         </span><span style="color:#6A737D;">// JSON Schema for the tool&#39;s parameters</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#B31D28;font-style:italic;">type</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;object&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#B31D28;font-style:italic;">properties</span><span style="color:#24292E;">: { </span><span style="color:#B31D28;font-style:italic;">...</span><span style="color:#24292E;"> }  </span><span style="color:#6A737D;">// Tool-specific parameters</span></span>
<span class="line"><span style="color:#24292E;">  },</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#B31D28;font-style:italic;">annotations?</span><span style="color:#24292E;">: {        </span><span style="color:#6A737D;">// Optional hints about tool behavior</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#B31D28;font-style:italic;">title?</span><span style="color:#24292E;">: </span><span style="color:#B31D28;font-style:italic;">string;</span><span style="color:#24292E;">      </span><span style="color:#6A737D;">// Human-readable title for the tool</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#B31D28;font-style:italic;">readOnlyHint?:</span><span style="color:#24292E;"> </span><span style="color:#B31D28;font-style:italic;">boolean;</span><span style="color:#24292E;">    </span><span style="color:#6A737D;">// If true, the tool does not modify its environment</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#B31D28;font-style:italic;">destructiveHint?:</span><span style="color:#24292E;"> </span><span style="color:#B31D28;font-style:italic;">boolean;</span><span style="color:#24292E;"> </span><span style="color:#6A737D;">// If true, the tool may perform destructive updates</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#B31D28;font-style:italic;">idempotentHint?:</span><span style="color:#24292E;"> </span><span style="color:#B31D28;font-style:italic;">boolean;</span><span style="color:#24292E;">  </span><span style="color:#6A737D;">// If true, repeated calls with same args have no additional effect</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#B31D28;font-style:italic;">openWorldHint?:</span><span style="color:#24292E;"> </span><span style="color:#B31D28;font-style:italic;">boolean;</span><span style="color:#24292E;">   </span><span style="color:#6A737D;">// If true, tool interacts with external entities</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="prompt" tabindex="-1"><a class="header-anchor" href="#prompt" aria-hidden="true">#</a> prompt</h3><p>也可以从 MCP 服务器提取一些 prompt：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="shiki github-light" style="background-color:#fff;" tabindex="0"><code><span class="line"><span style="color:#D73A49;">async</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">def</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">prompt_demo</span><span style="color:#24292E;">(self):</span></span>
<span class="line"><span style="color:#24292E;">    prompts </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">await</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">self</span><span style="color:#24292E;">.session.list_prompts()</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">print</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">f</span><span style="color:#032F62;">&quot;</span><span style="color:#005CC5;">{</span><span style="color:#24292E;">prompts</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">}</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">for</span><span style="color:#24292E;"> prompt </span><span style="color:#D73A49;">in</span><span style="color:#24292E;"> prompts.prompts:</span></span>
<span class="line"><span style="color:#24292E;">        p </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">await</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">self</span><span style="color:#24292E;">.session.get_prompt(prompt.name, </span><span style="color:#E36209;">arguments</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">{</span><span style="color:#032F62;">&quot;code&quot;</span><span style="color:#24292E;">: </span><span style="color:#D73A49;">f</span><span style="color:#032F62;">&quot;this is a code for </span><span style="color:#005CC5;">{</span><span style="color:#24292E;">prompt.name</span><span style="color:#005CC5;">}</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;">})</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#005CC5;">print</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">f</span><span style="color:#032F62;">&quot;</span><span style="color:#005CC5;">\\n</span><span style="color:#032F62;">Prompt </span><span style="color:#005CC5;">{</span><span style="color:#24292E;">p</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">}</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>返回的 prompt 结果 <code>p</code> 通常为一个 list，其中包含了 role，content， annotation 等信息。</p><p>MCP server 中的 prompt 都通过一下格式定义：</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="shiki github-light" style="background-color:#fff;" tabindex="0"><code><span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#B31D28;font-style:italic;">name</span><span style="color:#24292E;">: </span><span style="color:#B31D28;font-style:italic;">string;</span><span style="color:#24292E;">              </span><span style="color:#6A737D;">// Unique identifier for the prompt</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#B31D28;font-style:italic;">description?:</span><span style="color:#24292E;"> </span><span style="color:#B31D28;font-style:italic;">string;</span><span style="color:#24292E;">      </span><span style="color:#6A737D;">// Human-readable description</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#B31D28;font-style:italic;">arguments?:</span><span style="color:#24292E;"> [              </span><span style="color:#6A737D;">// Optional list of arguments</span></span>
<span class="line"><span style="color:#24292E;">    {</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#B31D28;font-style:italic;">name</span><span style="color:#24292E;">: </span><span style="color:#B31D28;font-style:italic;">string;</span><span style="color:#24292E;">          </span><span style="color:#6A737D;">// Argument identifier</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#B31D28;font-style:italic;">description?:</span><span style="color:#24292E;"> </span><span style="color:#B31D28;font-style:italic;">string;</span><span style="color:#24292E;">  </span><span style="color:#6A737D;">// Argument description</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#B31D28;font-style:italic;">required?:</span><span style="color:#24292E;"> </span><span style="color:#B31D28;font-style:italic;">boolean;</span><span style="color:#24292E;">    </span><span style="color:#6A737D;">// Whether argument is required</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">  ]</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="resources" tabindex="-1"><a class="header-anchor" href="#resources" aria-hidden="true">#</a> resources</h3><div class="language-python line-numbers-mode" data-ext="py"><pre class="shiki github-light" style="background-color:#fff;" tabindex="0"><code><span class="line"><span style="color:#D73A49;">from</span><span style="color:#24292E;"> mcp.server.fastmcp </span><span style="color:#D73A49;">import</span><span style="color:#24292E;"> FastMCP</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">mcp </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> FastMCP(</span><span style="color:#032F62;">&quot;My App&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#6F42C1;">@mcp.resource</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;config://app&quot;</span><span style="color:#24292E;">, </span><span style="color:#E36209;">title</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;Application Configuration&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#D73A49;">def</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">get_config</span><span style="color:#24292E;">() -&gt; </span><span style="color:#005CC5;">str</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;&quot;&quot;Static configuration data&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;App configuration here&quot;</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#6F42C1;">@mcp.resource</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;users://</span><span style="color:#005CC5;">{user_id}</span><span style="color:#032F62;">/profile&quot;</span><span style="color:#24292E;">, </span><span style="color:#E36209;">title</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;User Profile&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#D73A49;">def</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">get_user_profile</span><span style="color:#24292E;">(user_id: </span><span style="color:#005CC5;">str</span><span style="color:#24292E;">) -&gt; </span><span style="color:#005CC5;">str</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;&quot;&quot;Dynamic user data&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">f</span><span style="color:#032F62;">&quot;Profile data for user </span><span style="color:#005CC5;">{</span><span style="color:#24292E;">user_id</span><span style="color:#005CC5;">}</span><span style="color:#032F62;">&quot;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>resource 可以返回字符串，dict，或 bytes 类型的数据，但 resource 中需要知名对应的 <code>mime_type</code>， 如 <code>&quot;image/png&quot;</code>, <code>&quot;application/octet-stream&quot;</code> 等</p><h2 id="参考资源" tabindex="-1"><a class="header-anchor" href="#参考资源" aria-hidden="true">#</a> 参考资源</h2>`,16),b={href:"https://github.com/modelcontextprotocol/servers?tab=readme-ov-file#-third-party-servers",target:"_blank",rel:"noopener noreferrer"},f={href:"https://github.com/jlowin/fastmcp",target:"_blank",rel:"noopener noreferrer"};function D(C,A){const a=e("ExternalLinkIcon");return t(),r("div",null,[s("blockquote",null,[s("p",null,[s("a",d,[n("MCP github 主页"),l(a)]),n("， "),s("a",v,[n("MCP 官方文档"),l(a)])])]),c("more"),u,s("blockquote",null,[s("p",null,[s("a",E,[n("详细参考官方文档"),l(a)])])]),m,s("p",null,[s("a",b,[n("官方 server github"),l(a)])]),s("p",null,[s("a",f,[n("fastmcp"),l(a)])])])}const _=p(y,[["render",D],["__file","笔记mcp.html.vue"]]);export{_ as default};
