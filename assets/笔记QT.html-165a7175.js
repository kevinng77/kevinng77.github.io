import{_ as t,Q as p,V as e,Z as n,a2 as s,Y as o,a1 as c,aQ as i,H as l}from"./framework-6f4ef33f.js";const u={},d=n("h1",{id:"qt",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#qt","aria-hidden":"true"},"#"),s(" QT")],-1),r=n("p",null,"嵌入式自学开始啦~ 为了自己的贾维斯",-1),k=n("p",null,"多看帮助文档！！帮助》索引查看函数与类详情，也可以通过 qt 助手查询，即 qt assistant",-1),v=n("p",null,"application》qt widgets application",-1),m={href:"https://www.bilibili.com/video/BV1FA411v7YW?p=530&spm_id_from=pageDriver",target:"_blank",rel:"noopener noreferrer"},b=i(`<h1 id="qwidget" tabindex="-1"><a class="header-anchor" href="#qwidget" aria-hidden="true">#</a> QWidget</h1><p>base class</p><ul><li>qwidget 窗口应用</li><li>qmainwindow 带工具栏的窗口</li><li>qdialog 对画框窗口</li></ul><h2 id="qt-框架" tabindex="-1"><a class="header-anchor" href="#qt-框架" aria-hidden="true">#</a> qt 框架</h2><div class="language-cpp line-numbers-mode" data-ext="cpp"><pre class="language-cpp"><code>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;QApplication&gt;</span> <span class="token comment">//qt 框架头文件</span></span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">int</span> argc<span class="token punctuation">,</span> <span class="token keyword">char</span> <span class="token operator">*</span>argv<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    QApplication <span class="token function">a</span><span class="token punctuation">(</span>argc<span class="token punctuation">,</span> argv<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//框架初始化</span>
    <span class="token comment">//你的设计</span>
    Qwidget w<span class="token punctuation">;</span>
    w<span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> a<span class="token punctuation">.</span><span class="token function">exec</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>a.exec() 让程序不终结，类似于 while 循环 程序进入消息循环，等待对用户输入进行响应。这里 main()把控制权转交给 Qt，Qt 完成事件处理工作，当应用程序退出的时候 exec()的值就会返回。在 exec()中 Qt 接受并处理用户和系统的事件并且把它们传递给适当的窗口部件。</li><li>编译后生成对应文件夹</li></ul><h2 id="手动创建" tabindex="-1"><a class="header-anchor" href="#手动创建" aria-hidden="true">#</a> 手动创建</h2><p>其他项目，空项目</p><ul><li><p>添加 c/c++ source file</p></li><li><p>debug 输出</p></li></ul><div class="language-cpp line-numbers-mode" data-ext="cpp"><pre class="language-cpp"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;QDebug&gt;</span></span>

<span class="token function">qDebug</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&lt;&lt;</span><span class="token string">&quot;hello&quot;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="。pro-文件" tabindex="-1"><a class="header-anchor" href="#。pro-文件" aria-hidden="true">#</a> 。pro 文件</h3><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>30 l greaterThan(QT_MAJOR_VERSION, 4): QT += widgets
31 这条语句的含义是，如果 QT_MAJOR_VERSION 大于 4（也就是当前使用的 Qt5 及更高版本）需
要增加 widgets 模块。如果项目仅需支持 Qt5，
32 也可以直接添加“QT += widgets”一句。
33 不过为了保持代码兼容，最好还是按照 QtCreator 生成的语句编写。
34 l #配置信息
35 CONFIG 用来告诉 qmake 关于应用程序的配置信息。
36 CONFIG += c++11 //使用 c++11 的特性
37 在这里使用“+=”，是因为我们添加我们的配置选项到任何一个已经存在中。这样做比使
用“=”那样替换已经指定的所有选项更安全。
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="设置窗口属性" tabindex="-1"><a class="header-anchor" href="#设置窗口属性" aria-hidden="true">#</a> 设置窗口属性</h2><p>所以一般窗口的属性和添加控件以及对控件的操作都会在类的构造函数中（widget.cpp）书写</p><div class="language-cpp line-numbers-mode" data-ext="cpp"><pre class="language-cpp"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&quot;widget.h&quot;</span></span>

<span class="token class-name">Widget</span><span class="token double-colon punctuation">::</span><span class="token function">Widget</span><span class="token punctuation">(</span>QWidget <span class="token operator">*</span>parent<span class="token punctuation">)</span>
    <span class="token operator">:</span> <span class="token function">QWidget</span><span class="token punctuation">(</span>parent<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token comment">//代码</span>
    <span class="token keyword">this</span><span class="token operator">-&gt;</span><span class="token function">setWindowTitle</span><span class="token punctuation">(</span><span class="token string">&quot;hello&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token operator">-&gt;</span><span class="token function">setFixedSize</span><span class="token punctuation">(</span><span class="token number">600</span><span class="token punctuation">,</span><span class="token number">400</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token punctuation">}</span>

<span class="token class-name">Widget</span><span class="token double-colon punctuation">::</span><span class="token operator">~</span><span class="token function">Widget</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>其他窗口属性在 Qwidget 类中查看</p><ul><li>按钮</li></ul><div class="language-cpp line-numbers-mode" data-ext="cpp"><pre class="language-cpp"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&quot;widget.h&quot;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;QPushButton&gt;</span></span>
<span class="token class-name">Widget</span><span class="token double-colon punctuation">::</span><span class="token function">Widget</span><span class="token punctuation">(</span>QWidget <span class="token operator">*</span>parent<span class="token punctuation">)</span>
    <span class="token operator">:</span> <span class="token function">QWidget</span><span class="token punctuation">(</span>parent<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token comment">//代码</span>
    <span class="token keyword">this</span><span class="token operator">-&gt;</span><span class="token function">setWindowTitle</span><span class="token punctuation">(</span><span class="token string">&quot;hello&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token operator">-&gt;</span><span class="token function">setFixedSize</span><span class="token punctuation">(</span><span class="token number">600</span><span class="token punctuation">,</span><span class="token number">400</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    button <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token function">QPushButton</span><span class="token punctuation">(</span><span class="token string">&quot;登入&quot;</span><span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//构造函数时指定父对象和设置文本</span>
    <span class="token comment">//如果不给按钮指定父对象 那么按钮和窗口是单独显示 如果给按钮指定了父对象,只要父对象显示了,按钮也会显示</span>
    button<span class="token operator">-&gt;</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//指定按钮的父类是窗口</span>
     <span class="token comment">// button‐&gt;setParent(this);//指定按钮的父亲是窗口</span>
    button<span class="token operator">-&gt;</span><span class="token function">resize</span><span class="token punctuation">(</span><span class="token number">300</span><span class="token punctuation">,</span><span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//设置按钮的大小</span>
    button<span class="token operator">-&gt;</span><span class="token function">move</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//设置按钮在窗口中的位置</span>
    <span class="token comment">// button‐&gt;setText(&quot;登入&quot;);//设置按钮的文本</span>
<span class="token punctuation">}</span>

<span class="token class-name">Widget</span><span class="token double-colon punctuation">::</span><span class="token operator">~</span><span class="token function">Widget</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>widget.h 中声明</p><div class="language-cpp line-numbers-mode" data-ext="cpp"><pre class="language-cpp"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">ifndef</span> <span class="token expression">WIDGET_H</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">WIDGET_H</span></span>

<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;QWidget&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;QPushButton&gt;</span></span>

<span class="token keyword">class</span> <span class="token class-name">Widget</span> <span class="token operator">:</span> <span class="token base-clause"><span class="token keyword">public</span> <span class="token class-name">QWidget</span></span>
<span class="token punctuation">{</span>
    Q_OBJECT

<span class="token keyword">public</span><span class="token operator">:</span>
    <span class="token function">Widget</span><span class="token punctuation">(</span>QWidget <span class="token operator">*</span>parenc<span class="token operator">++</span>t <span class="token operator">=</span> <span class="token keyword">nullptr</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token operator">~</span><span class="token function">Widget</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    QPushButton <span class="token operator">*</span>button<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">endif</span> <span class="token comment">// WIDGET_H</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="对象树" tabindex="-1"><a class="header-anchor" href="#对象树" aria-hidden="true">#</a> 对象树</h3><p>QObject 中会自动添加创建的子对象到 children 列表中，当父对象析构时，这个列表里面的所有对象都会被析构。</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>{QPushButton quit(&quot;Quit&quot;);
QWidget window;
quit.setParent(&amp;window);}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>但析构顺序是未定义的，上例中 quit 会被析构两次</p><h2 id="窗口坐标系" tabindex="-1"><a class="header-anchor" href="#窗口坐标系" aria-hidden="true">#</a> 窗口坐标系</h2><p>左上角为 0，0，X,Y 分别向右，向下增大</p><h2 id="信号与槽" tabindex="-1"><a class="header-anchor" href="#信号与槽" aria-hidden="true">#</a> 信号与槽</h2><p>当事件发生后，会有一个信号被广播出来。如果右对象对这个信号感兴趣，他就会将想处理的信号和自己的一个函数（称为槽 slot）绑定来处理这个信号。也就是说，当信号发出时，被连接的槽函数会自动被回调。</p><div class="language-cpp line-numbers-mode" data-ext="cpp"><pre class="language-cpp"><code><span class="token function">connect</span><span class="token punctuation">(</span>sender<span class="token punctuation">,</span> signal<span class="token punctuation">,</span> receiver<span class="token punctuation">,</span> slot<span class="token punctuation">)</span>;

<span class="token keyword">class</span> <span class="token class-name">Widget</span> <span class="token operator">:</span> <span class="token base-clause"><span class="token keyword">public</span> <span class="token class-name">QWidget</span></span>
<span class="token punctuation">{</span>
    Q_OBJECT
<span class="token keyword">public</span><span class="token operator">:</span>
    <span class="token function">Widget</span><span class="token punctuation">(</span>QWidget <span class="token operator">*</span>parent <span class="token operator">=</span> <span class="token keyword">nullptr</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token operator">~</span><span class="token function">Widget</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    QPushButton <span class="token operator">*</span>button<span class="token punctuation">;</span>
<span class="token keyword">public</span> slots<span class="token operator">:</span> <span class="token comment">//下下方声明自定义的槽函数</span>
    <span class="token keyword">void</span> <span class="token function">print</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token class-name">Widget</span><span class="token double-colon punctuation">::</span><span class="token function">Widget</span><span class="token punctuation">(</span>QWidget <span class="token operator">*</span>parent<span class="token punctuation">)</span>
    <span class="token operator">:</span> <span class="token function">QWidget</span><span class="token punctuation">(</span>parent<span class="token punctuation">)</span>
<span class="token punctuation">{</span>   <span class="token keyword">this</span><span class="token operator">-&gt;</span><span class="token function">setWindowTitle</span><span class="token punctuation">(</span><span class="token string">&quot;hello&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token operator">-&gt;</span><span class="token function">setFixedSize</span><span class="token punctuation">(</span><span class="token number">600</span><span class="token punctuation">,</span><span class="token number">400</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    button <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token function">QPushButton</span><span class="token punctuation">(</span><span class="token string">&quot;登入&quot;</span><span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>	<span class="token function">connect</span><span class="token punctuation">(</span>button<span class="token punctuation">,</span><span class="token operator">&amp;</span>QPushButton<span class="token double-colon punctuation">::</span>pressed<span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">,</span><span class="token operator">&amp;</span>Widget<span class="token double-colon punctuation">::</span>print<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">void</span> <span class="token class-name">Widget</span><span class="token double-colon punctuation">::</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token function">qDebug</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&lt;&lt;</span><span class="token string">&quot;点击了&quot;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="查找系统自带的信号和槽" tabindex="-1"><a class="header-anchor" href="#查找系统自带的信号和槽" aria-hidden="true">#</a> 查找系统自带的信号和槽</h3><p>在帮助文档中输入 QPushButton，首先我们可以在 Contents 中寻找关键字 signals，如果没找到，应该想到也许这个信号是从父类继承下来的，因此去他的父类查找就行。</p><h3 id="自定义信号" tabindex="-1"><a class="header-anchor" href="#自定义信号" aria-hidden="true">#</a> 自定义信号</h3><p>例中先通过 clicked 接受点击信号，然后启动设计好的 emit_mysignal 槽函数，在槽函数种设置发射信号。</p><div class="language-cpp line-numbers-mode" data-ext="cpp"><pre class="language-cpp"><code><span class="token keyword">void</span> <span class="token class-name">Sonwidget</span><span class="token double-colon punctuation">::</span><span class="token function">emit_mysignal</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>emit <span class="token function">show_hide_signal</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>信号只需要声明，不需要实现。</p><p>槽函数需要声明与实现。会受到 public，private 等影响。</p><p>信号和槽的参数类型应该一致。</p><p>信号槽可以使用 disconnect 断开连接</p><p>任何成员函数、static 函数、全局函数和 Lambda 表达式都可以作为槽函数</p><h1 id="qmainwindow" tabindex="-1"><a class="header-anchor" href="#qmainwindow" aria-hidden="true">#</a> Qmainwindow</h1><div class="language-cpp line-numbers-mode" data-ext="cpp"><pre class="language-cpp"><code><span class="token class-name">MainWindow</span><span class="token double-colon punctuation">::</span><span class="token function">MainWindow</span><span class="token punctuation">(</span>QWidget <span class="token operator">*</span>parent<span class="token punctuation">)</span>
    <span class="token operator">:</span> <span class="token function">QMainWindow</span><span class="token punctuation">(</span>parent<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
QMenuBar <span class="token operator">*</span>menubar1 <span class="token operator">=</span> <span class="token keyword">this</span><span class="token operator">-&gt;</span><span class="token function">menuBar</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//取出菜单栏</span>
QMenu <span class="token operator">*</span>filemenu <span class="token operator">=</span> menubar1<span class="token operator">-&gt;</span><span class="token function">addMenu</span><span class="token punctuation">(</span><span class="token string">&quot;文件&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//向菜单栏上去添加 菜单项</span>
<span class="token comment">//QMenu *fileedit = menubar1-&gt;addMenu(&quot;编辑&quot;);</span>

<span class="token comment">//向菜单添加菜单项</span>
QAction <span class="token operator">*</span>openaction <span class="token operator">=</span> filemenu<span class="token operator">-&gt;</span><span class="token function">addAction</span><span class="token punctuation">(</span><span class="token string">&quot;文件&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//可以通过槽函数来实现打开文件等操作</span>
filemenu<span class="token operator">-&gt;</span><span class="token function">addSeparator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//添加分割线</span>
QAction <span class="token operator">*</span>saveaction <span class="token operator">=</span> filemenu<span class="token operator">-&gt;</span><span class="token function">addAction</span><span class="token punctuation">(</span><span class="token string">&quot;保存&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

QPixmap pix<span class="token punctuation">;</span>
<span class="token comment">//选择图片</span>
pix<span class="token punctuation">.</span><span class="token function">load</span><span class="token punctuation">(</span><span class="token string">&quot;:/image/test.png&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//给菜单项设置图片</span>
openaction<span class="token operator">-&gt;</span><span class="token function">setIcon</span><span class="token punctuation">(</span><span class="token function">QIcon</span><span class="token punctuation">(</span>pix<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">//获取工具栏 工具栏中的工具其实是菜单栏中的快捷方式</span>
QToolBar <span class="token operator">*</span>toolbar <span class="token operator">=</span> <span class="token keyword">this</span><span class="token operator">-&gt;</span><span class="token function">addToolBar</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//向工具栏中添加工具(添加菜单项)</span>
toolbar<span class="token operator">-&gt;</span><span class="token function">addAction</span><span class="token punctuation">(</span>openaction<span class="token punctuation">)</span><span class="token punctuation">;</span>
toolbar<span class="token operator">-&gt;</span><span class="token function">addAction</span><span class="token punctuation">(</span>saveaction<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">//取出状态栏</span>
QStatusBar <span class="token operator">*</span>status <span class="token operator">=</span> <span class="token keyword">this</span><span class="token operator">-&gt;</span><span class="token function">statusBar</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
status<span class="token operator">-&gt;</span><span class="token function">addWidget</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token function">QLabel</span><span class="token punctuation">(</span><span class="token string">&quot;状态&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//向状态添加控件</span>

<span class="token comment">////创建铆接部件</span>
<span class="token comment">//QDockWidget *dockwidget = new QDockWidget(&quot;这是一个铆接部件&quot;, this);</span>
<span class="token comment">//this-&gt;addDockWidget(Qt::TopDockWidgetArea, dockwidget);//将浮动窗口添加到 mainwindow</span>
QTextEdit <span class="token operator">*</span>edit <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token function">QTextEdit</span><span class="token punctuation">(</span><span class="token string">&quot;文本编辑器&quot;</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">this</span><span class="token operator">-&gt;</span><span class="token function">setCentralWidget</span><span class="token punctuation">(</span>edit<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="对话框" tabindex="-1"><a class="header-anchor" href="#对话框" aria-hidden="true">#</a> 对话框</h2><div class="language-cpp line-numbers-mode" data-ext="cpp"><pre class="language-cpp"><code>
<span class="token class-name">Widget</span><span class="token double-colon punctuation">::</span><span class="token function">Widget</span><span class="token punctuation">(</span>QWidget <span class="token operator">*</span>parent<span class="token punctuation">)</span>
    <span class="token operator">:</span> <span class="token function">QWidget</span><span class="token punctuation">(</span>parent<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token operator">-&gt;</span><span class="token function">resize</span><span class="token punctuation">(</span><span class="token number">600</span><span class="token punctuation">,</span><span class="token number">400</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    button <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token function">QPushButton</span><span class="token punctuation">(</span><span class="token string">&quot;选择文件&quot;</span><span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    button<span class="token operator">-&gt;</span><span class="token function">resize</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    button<span class="token operator">-&gt;</span><span class="token function">move</span><span class="token punctuation">(</span><span class="token number">250</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">connect</span><span class="token punctuation">(</span>button<span class="token punctuation">,</span><span class="token operator">&amp;</span>QPushButton<span class="token double-colon punctuation">::</span>clicked<span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token comment">// QString str = QFileDialog::getOpenFileName();</span>
    <span class="token comment">// qDebug()&lt;&lt;str;</span>
    QStringList str <span class="token operator">=</span> <span class="token class-name">QFileDialog</span><span class="token double-colon punctuation">::</span><span class="token function">getOpenFileNames</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">qDebug</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&lt;&lt;</span>str<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    button1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token function">QPushButton</span><span class="token punctuation">(</span><span class="token string">&quot;模态对话框&quot;</span><span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//模态对话框，必须关了才能操作主窗口</span>
    button1<span class="token operator">-&gt;</span><span class="token function">resize</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    button1<span class="token operator">-&gt;</span><span class="token function">move</span><span class="token punctuation">(</span><span class="token number">150</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">connect</span><span class="token punctuation">(</span>button1<span class="token punctuation">,</span><span class="token operator">&amp;</span>QPushButton<span class="token double-colon punctuation">::</span>clicked<span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        QDialog dialog<span class="token punctuation">;</span>
        dialog<span class="token punctuation">.</span><span class="token function">setWindowTitle</span><span class="token punctuation">(</span><span class="token function">tr</span><span class="token punctuation">(</span><span class="token string">&quot;Hello, dialog!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//设置标题</span>
        dialog<span class="token punctuation">.</span><span class="token function">exec</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//阻塞对话框</span>

<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    button2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token function">QPushButton</span><span class="token punctuation">(</span><span class="token string">&quot;非模态对话框&quot;</span><span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//非模态对话框，不关闭也能操作主窗口</span>
    button2<span class="token operator">-&gt;</span><span class="token function">resize</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    button2<span class="token operator">-&gt;</span><span class="token function">move</span><span class="token punctuation">(</span><span class="token number">250</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">connect</span><span class="token punctuation">(</span>button2<span class="token punctuation">,</span><span class="token operator">&amp;</span>QPushButton<span class="token double-colon punctuation">::</span>clicked<span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        QDialog <span class="token operator">*</span>dialog <span class="token operator">=</span> <span class="token keyword">new</span> QDialog<span class="token punctuation">;</span>
        dialog<span class="token operator">-&gt;</span><span class="token function">setAttribute</span><span class="token punctuation">(</span>Qt<span class="token double-colon punctuation">::</span>WA_DeleteOnClose<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//释放内存</span>
        dialog<span class="token operator">-&gt;</span><span class="token function">setWindowTitle</span><span class="token punctuation">(</span><span class="token function">tr</span><span class="token punctuation">(</span><span class="token string">&quot;Hello, dialog!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//设置标题</span>
        dialog<span class="token operator">-&gt;</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>QColorDialog： 选择颜色； QFileDialog： 选择文件或者目录； QFontDialog： 选择字体； QInputDialog： 允许用户输入一个值，并将其值返回； QMessageBox： 模态对话框，用于显示信息、询问问题等； QPageSetupDialog： 为打印机提供纸张相关的选项； QPrintDialog： 打印机配置； QPrintPreviewDialog：打印预览； QProgressDialog： 显示操作过程。</p><p>消息对话框</p><p>如果我们希望制作一个询问是否保存的对话框，我们可以使用如下的代码：</p><div class="language-cpp line-numbers-mode" data-ext="cpp"><pre class="language-cpp"><code>QMessageBox msgBox;
msgBox<span class="token punctuation">.</span><span class="token function">setText</span><span class="token punctuation">(</span><span class="token function">tr</span><span class="token punctuation">(</span><span class="token string">&quot;The document has been modified.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>;
msgBox<span class="token punctuation">.</span><span class="token function">setInformativeText</span><span class="token punctuation">(</span><span class="token function">tr</span><span class="token punctuation">(</span><span class="token string">&quot;Do you want to save your changes?&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>;
msgBox<span class="token punctuation">.</span><span class="token function">setDetailedText</span><span class="token punctuation">(</span><span class="token function">tr</span><span class="token punctuation">(</span><span class="token string">&quot;Differences here...&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>;
msgBox<span class="token punctuation">.</span><span class="token function">setStandardButtons</span><span class="token punctuation">(</span>QMessageBox<span class="token double-colon punctuation">::</span>Save
<span class="token operator">|</span> QMessageBox<span class="token double-colon punctuation">::</span>Discard
<span class="token operator">|</span> QMessageBox<span class="token double-colon punctuation">::</span>Cancel<span class="token punctuation">)</span>;
msgBox<span class="token punctuation">.</span><span class="token function">setDefaultButton</span><span class="token punctuation">(</span>QMessageBox<span class="token double-colon punctuation">::</span>Save<span class="token punctuation">)</span>;
<span class="token keyword">int</span> ret <span class="token operator">=</span> msgBox<span class="token punctuation">.</span><span class="token function">exec</span><span class="token punctuation">(</span><span class="token punctuation">)</span>;
<span class="token keyword">switch</span> <span class="token punctuation">(</span>ret<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
<span class="token keyword">case</span> QMessageBox<span class="token double-colon punctuation">::</span>Save<span class="token operator">:</span>
<span class="token function">qDebug</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;Save document!&quot;</span>;
<span class="token keyword">break</span>;
<span class="token keyword">case</span> QMessageBox<span class="token double-colon punctuation">::</span>Discard<span class="token operator">:</span>
<span class="token function">qDebug</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;Discard changes!&quot;</span>;
<span class="token keyword">break</span>;
<span class="token keyword">case</span> QMessageBox<span class="token double-colon punctuation">::</span>Cancel<span class="token operator">:</span>
<span class="token function">qDebug</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;Close document!&quot;</span>;
<span class="token keyword">break</span>;
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="布局管理器" tabindex="-1"><a class="header-anchor" href="#布局管理器" aria-hidden="true">#</a> 布局管理器</h3><p>在创建项目的时候勾选使用 widget.ui，然后打开项目在 widget.ui 中编辑窗口</p><p>.ui 文件会被系统解析成.h 文件</p><p>.h 中会有 ui_widget 的类，namespace 是 ui</p><ul><li>工具中可以设置按钮布局，按钮大小等</li></ul><p>spacer 弹簧可以用来控制界面的优化</p><p>图片的相对路径的上一级目录是 makefile（）如果在 qt 运行的话。建议将图片编辑成资源 sources 来添加到程序中，而不是使用相对路径。</p><ul><li><strong>在按钮上右击，选择转到槽，那么就会跳转到相对应的槽函数界面。只需要编辑槽函数的反应内容就行，connect 部分 qt 会自动设置，但是槽函数的名字不能乱改</strong></li></ul><h2 id="常用控件" tabindex="-1"><a class="header-anchor" href="#常用控件" aria-hidden="true">#</a> 常用控件</h2><h3 id="label" tabindex="-1"><a class="header-anchor" href="#label" aria-hidden="true">#</a> label</h3><p>在界面中显示文本图片和图画或者超链接（使用 HTML 格式）</p><p>头文件：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>#include &lt;Qlabel&gt;
//类中添加 Qlabel *label;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-cpp line-numbers-mode" data-ext="cpp"><pre class="language-cpp"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&quot;widget.h&quot;</span></span>

<span class="token class-name">Widget</span><span class="token double-colon punctuation">::</span><span class="token function">Widget</span><span class="token punctuation">(</span>QWidget <span class="token operator">*</span>parent<span class="token punctuation">)</span>
<span class="token operator">:</span> <span class="token function">QWidget</span><span class="token punctuation">(</span>parent<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
<span class="token keyword">this</span>‐<span class="token operator">&gt;</span><span class="token function">resize</span><span class="token punctuation">(</span><span class="token number">600</span><span class="token punctuation">,</span><span class="token number">400</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
label <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token function">QLabel</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
label‐<span class="token operator">&gt;</span><span class="token function">resize</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">,</span><span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
label‐<span class="token operator">&gt;</span><span class="token function">move</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// label‐&gt;setText(&quot;我是一个标签&quot;);</span>
label ‐<span class="token operator">&gt;</span><span class="token function">setText</span><span class="token punctuation">(</span><span class="token string">&quot;&lt;a href=\\&quot;https://www.baidu.com\\&quot;&gt;百度一下&lt;/a&gt;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
label<span class="token operator">-&gt;</span><span class="token function">setOpenExternalLinks</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//设置点击链接自动打开</span>
    
<span class="token comment">//设置标签  </span>
label_pic <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token function">QLabel</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
label_pic‐<span class="token operator">&gt;</span><span class="token function">resize</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
label_pic‐<span class="token operator">&gt;</span><span class="token function">move</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">,</span><span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
label_pic‐<span class="token operator">&gt;</span><span class="token function">setPixmap</span><span class="token punctuation">(</span><span class="token function">QPixmap</span><span class="token punctuation">(</span><span class="token string">&quot;../Image/face.png&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
label_pic‐<span class="token operator">&gt;</span><span class="token function">setScaledContents</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//设置自适应大小</span>
<span class="token punctuation">}</span>

<span class="token class-name">Widget</span><span class="token double-colon punctuation">::</span><span class="token operator">~</span><span class="token function">Widget</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="lineedit" tabindex="-1"><a class="header-anchor" href="#lineedit" aria-hidden="true">#</a> LineEdit</h3><p>行文本输入框</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&quot;widget.h&quot;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&quot;ui_widget.h&quot;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;QDebug&gt;</span></span>
Widget<span class="token operator">::</span><span class="token function">Widget</span><span class="token punctuation">(</span>QWidget <span class="token operator">*</span>parent<span class="token punctuation">)</span> <span class="token operator">:</span>
<span class="token function">QWidget</span><span class="token punctuation">(</span>parent<span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token function">ui</span><span class="token punctuation">(</span>new Ui<span class="token operator">::</span>Widget<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    ui‐<span class="token operator">&gt;</span><span class="token function">setupUi</span><span class="token punctuation">(</span>this<span class="token punctuation">)</span><span class="token punctuation">;</span>
    ui‐<span class="token operator">&gt;</span>lineEdit‐<span class="token operator">&gt;</span><span class="token function">setText</span><span class="token punctuation">(</span><span class="token string">&quot;hello&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//设置行编辑内容</span>
<span class="token punctuation">}</span>


<span class="token comment">//密码模式</span>
<span class="token punctuation">{</span>
    ui‐<span class="token operator">&gt;</span><span class="token function">setupUi</span><span class="token punctuation">(</span>this<span class="token punctuation">)</span><span class="token punctuation">;</span>
    ui‐<span class="token operator">&gt;</span>lineEdit‐<span class="token operator">&gt;</span><span class="token function">setEchoMode</span><span class="token punctuation">(</span>QLineEdit<span class="token operator">::</span>Password<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//设置密码模式</span>
    <span class="token number">10</span> ui‐<span class="token operator">&gt;</span>lineEdit‐<span class="token operator">&gt;</span><span class="token function">setTextMargins</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//设置间距</span>
    <span class="token number">11</span> ui‐<span class="token operator">&gt;</span>lineEdit‐<span class="token operator">&gt;</span><span class="token function">setText</span><span class="token punctuation">(</span><span class="token string">&quot;hello&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//设置行编辑内容</span>
<span class="token punctuation">}</span>
<span class="token comment">//密码模式</span>


Widget<span class="token operator">::</span><span class="token operator">~</span><span class="token function">Widget</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    delete ui<span class="token punctuation">;</span>

    <span class="token keyword">void</span> Widget<span class="token operator">::</span><span class="token function">on_lineEdit_returnPressed</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token function">qDebug</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&lt;&lt;</span>ui‐<span class="token operator">&gt;</span>lineEdit‐<span class="token operator">&gt;</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//获取行编辑内容</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="自定义控件" tabindex="-1"><a class="header-anchor" href="#自定义控件" aria-hidden="true">#</a> 自定义控件</h3><h3 id="定时器" tabindex="-1"><a class="header-anchor" href="#定时器" aria-hidden="true">#</a> 定时器</h3><div class="language-cpp line-numbers-mode" data-ext="cpp"><pre class="language-cpp"><code><span class="token class-name">Widget</span><span class="token double-colon punctuation">::</span><span class="token function">Widget</span><span class="token punctuation">(</span>QWidget <span class="token operator">*</span>parent<span class="token punctuation">)</span> <span class="token operator">:</span>
<span class="token function">QWidget</span><span class="token punctuation">(</span>parent<span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token function">ui</span><span class="token punctuation">(</span><span class="token keyword">new</span> Ui<span class="token double-colon punctuation">::</span>Widget<span class="token punctuation">)</span>
<span class="token punctuation">{</span>ui‐<span class="token operator">&gt;</span><span class="token function">setupUi</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
t <span class="token operator">=</span> <span class="token keyword">new</span> QTimer<span class="token punctuation">;</span>
<span class="token comment">//设置定时器的超时事件 如果超时 会发出一个超时信号</span>
<span class="token function">connect</span><span class="token punctuation">(</span>t<span class="token punctuation">,</span><span class="token operator">&amp;</span>QTimer<span class="token double-colon punctuation">::</span>timeout<span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
<span class="token function">qDebug</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&lt;&lt;</span><span class="token string">&quot;timeout&quot;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
 <span class="token comment">//定时器必须启动</span>
<span class="token punctuation">}</span>

<span class="token class-name">Widget</span><span class="token double-colon punctuation">::</span><span class="token operator">~</span><span class="token function">Widget</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span><span class="token keyword">delete</span> ui<span class="token punctuation">;</span><span class="token punctuation">}</span>

<span class="token keyword">void</span> <span class="token class-name">Widget</span><span class="token double-colon punctuation">::</span><span class="token function">on_pushButton_clicked</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
t‐<span class="token operator">&gt;</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//启动定时器 1ms 超时一次}</span>

<span class="token keyword">void</span> <span class="token class-name">Widget</span><span class="token double-colon punctuation">::</span><span class="token function">on_pushButton_2_clicked</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
t‐<span class="token operator">&gt;</span><span class="token function">stop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//停止定时器</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="鼠标" tabindex="-1"><a class="header-anchor" href="#鼠标" aria-hidden="true">#</a> 鼠标</h3><p>.cpp</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&quot;widget.h&quot;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&quot;ui_widget.h&quot;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;QMouseEvent&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;QDebug&gt;</span></span>
Widget<span class="token operator">::</span><span class="token function">Widget</span><span class="token punctuation">(</span>QWidget <span class="token operator">*</span>parent<span class="token punctuation">)</span> <span class="token operator">:</span>
<span class="token function">QWidget</span><span class="token punctuation">(</span>parent<span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token function">ui</span><span class="token punctuation">(</span>new Ui<span class="token operator">::</span>Widget<span class="token punctuation">)</span>
<span class="token punctuation">{</span> ui‐<span class="token operator">&gt;</span><span class="token function">setupUi</span><span class="token punctuation">(</span>this<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

Widget<span class="token operator">::</span><span class="token operator">~</span><span class="token function">Widget</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    delete ui<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">void</span> Widget<span class="token operator">::</span><span class="token function">mousePressEvent</span><span class="token punctuation">(</span>QMouseEvent <span class="token operator">*</span>event<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token function">qDebug</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&lt;&lt;</span><span class="token string">&quot;鼠标点击&quot;</span><span class="token operator">&lt;&lt;</span>event‐<span class="token operator">&gt;</span><span class="token function">x</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&lt;&lt;</span>event‐<span class="token operator">&gt;</span><span class="token function">y</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>event‐<span class="token operator">&gt;</span><span class="token function">button</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span>Qt<span class="token operator">::</span>LeftButton <span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token function">qDebug</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&lt;&lt;</span><span class="token string">&quot;点击了左键&quot;</span><span class="token punctuation">;</span>

    <span class="token punctuation">}</span>
    <span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>event‐<span class="token operator">&gt;</span><span class="token function">button</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span>Qt<span class="token operator">::</span>RightButton <span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token function">qDebug</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&lt;&lt;</span><span class="token string">&quot;点击了右键&quot;</span><span class="token punctuation">;</span>

    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>

<span class="token keyword">void</span> Widget<span class="token operator">::</span> <span class="token function">mouseMoveEvent</span><span class="token punctuation">(</span>QMouseEvent <span class="token operator">*</span>event<span class="token punctuation">)</span>
<span class="token punctuation">{</span>

    <span class="token function">qDebug</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&lt;&lt;</span><span class="token string">&quot;鼠标点击&quot;</span><span class="token operator">&lt;&lt;</span>event‐<span class="token operator">&gt;</span><span class="token function">x</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&lt;&lt;</span>event‐<span class="token operator">&gt;</span><span class="token function">y</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>.h</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">ifndef</span> <span class="token expression">WIDGET_H</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">WIDGET_H</span></span>

<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;QWidget&gt;</span></span>
namespace Ui <span class="token punctuation">{</span>
class Widget<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
class Widget <span class="token operator">:</span> public QWidget
<span class="token punctuation">{</span>
    Q_OBJECT

        public<span class="token operator">:</span>
    explicit <span class="token function">Widget</span><span class="token punctuation">(</span>QWidget <span class="token operator">*</span>parent <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token operator">~</span><span class="token function">Widget</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    protected<span class="token operator">:</span>
    <span class="token keyword">void</span> <span class="token function">mousePressEvent</span><span class="token punctuation">(</span>QMouseEvent <span class="token operator">*</span>event<span class="token punctuation">)</span><span class="token punctuation">;</span>c
        <span class="token keyword">void</span> <span class="token function">mouseMoveEvent</span><span class="token punctuation">(</span>QMouseEvent <span class="token operator">*</span>event<span class="token punctuation">)</span><span class="token punctuation">;</span>

    private<span class="token operator">:</span>
Ui<span class="token operator">::</span>Widget <span class="token operator">*</span>ui<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">endif</span> <span class="token comment">// WIDGET_H</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>未完待续...</p>`,73);function g(h,f){const a=l("ExternalLinkIcon");return p(),e("div",null,[d,n("blockquote",null,[r,k,v,n("p",null,[s("笔记总结 课程链接："),n("a",m,[s("千峰嵌入式教程"),o(a)])])]),c(" more"),b])}const q=t(u,[["render",g],["__file","笔记QT.html.vue"]]);export{q as default};
