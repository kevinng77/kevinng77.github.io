import{_ as p}from"./plugin-vue_export-helper-c27b6911.js";import{r as o,o as i,c,a as s,b as n,d as l,f as e}from"./app-e9b04ba5.js";const r="/assets/img/uniapp2/index_picture_1-16936464377531.png",t="/assets/img/uniapp2/image-20230904110203015.png",d="/assets/img/uniapp2/index_picture_2.png",y={},u=e('<div class="hint-container info"><p class="hint-container-title">相关信息</p><p>感谢黑马程序员提供的完善资料。该文章基于黑马程序员教材做了少量改动。</p></div><h2 id="项目架构" tabindex="-1"><a class="header-anchor" href="#项目架构" aria-hidden="true">#</a> 项目架构</h2><h3 id="项目架构图" tabindex="-1"><a class="header-anchor" href="#项目架构图" aria-hidden="true">#</a> 项目架构图</h3><figure><img src="'+r+`" alt="项目架构图" tabindex="0" loading="lazy"><figcaption>项目架构图</figcaption></figure><h2 id="拉取项目模板代码" tabindex="-1"><a class="header-anchor" href="#拉取项目模板代码" aria-hidden="true">#</a> 拉取项目模板代码</h2><p>项目模板包含：目录结构，项目素材，代码风格。</p><h3 id="模板地址" tabindex="-1"><a class="header-anchor" href="#模板地址" aria-hidden="true">#</a> 模板地址</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="shiki github-light" style="background-color:#fff;" tabindex="0"><code><span class="line"><span style="color:#6F42C1;">git</span><span style="color:#24292E;"> </span><span style="color:#032F62;">clone</span><span style="color:#24292E;"> </span><span style="color:#032F62;">https://gitee.com/Megasu/uniapp-shop-vue3-ts.git</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><blockquote><p>注意事项</p><ul><li>在 <code>manifest.json</code> 中添加微信小程序的 <code>appid</code></li></ul></blockquote><h2 id="页面构建-引入-uni-ui-组件库" tabindex="-1"><a class="header-anchor" href="#页面构建-引入-uni-ui-组件库" aria-hidden="true">#</a> 页面构建：引入 uni-ui 组件库</h2><h3 id="操作步骤" tabindex="-1"><a class="header-anchor" href="#操作步骤" aria-hidden="true">#</a> 操作步骤</h3><p>安装 [uni-ui 组件库](https://uniapp.dcloud.net.cn/component/uniui/quickstart.html#npm 安装)</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="shiki github-light" style="background-color:#fff;" tabindex="0"><code><span class="line"><span style="color:#6F42C1;">npm</span><span style="color:#24292E;"> </span><span style="color:#032F62;">i</span><span style="color:#24292E;"> </span><span style="color:#032F62;">@dcloudio/uni-ui</span></span>
<span class="line"><span style="color:#6F42C1;">npm</span><span style="color:#24292E;"> </span><span style="color:#032F62;">install</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--save-dev</span><span style="color:#24292E;"> </span><span style="color:#032F62;">sass</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container info"><p class="hint-container-title">相关信息</p><p>uni-ui 类似 element-ui 等 vue 模块库。</p></div><p><strong>配置自动导入组件</strong></p><div class="language-json line-numbers-mode" data-ext="json"><pre class="shiki github-light" style="background-color:#fff;" tabindex="0"><code><span class="line"><span style="color:#6A737D;">// pages.json</span></span>
<span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// 组件自动导入，可以在 vue 文件中，自动导入组件库</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">&quot;easycom&quot;</span><span style="color:#24292E;">: {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">&quot;autoscan&quot;</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">&quot;custom&quot;</span><span style="color:#24292E;">: {</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6A737D;">// uni-ui 规则如下配置  </span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#005CC5;">&quot;^uni-(.*)&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;@dcloudio/uni-ui/lib/uni-$1/uni-$1.vue&quot;</span><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">  },</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">&quot;pages&quot;</span><span style="color:#24292E;">: [</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// …省略</span></span>
<span class="line"><span style="color:#24292E;">  ]</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>安装类型声明文件</strong></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="shiki github-light" style="background-color:#fff;" tabindex="0"><code><span class="line"><span style="color:#6F42C1;">npm</span><span style="color:#24292E;"> </span><span style="color:#032F62;">i</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-D</span><span style="color:#24292E;"> </span><span style="color:#032F62;">@uni-helper/uni-ui-types</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>配置类型声明文件</strong></p><div class="language-json line-numbers-mode" data-ext="json"><pre class="shiki github-light" style="background-color:#fff;" tabindex="0"><code><span class="line"><span style="color:#6A737D;">// tsconfig.json</span></span>
<span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">&quot;compilerOptions&quot;</span><span style="color:#24292E;">: {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">&quot;types&quot;</span><span style="color:#24292E;">: [</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#032F62;">&quot;@dcloudio/types&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#032F62;">&quot;@uni-helper/uni-app-types&quot;</span><span style="color:#24292E;">, </span><span style="color:#6A737D;">// [!code ++]</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#032F62;">&quot;@uni-helper/uni-ui-types&quot;</span><span style="color:#24292E;"> </span><span style="color:#6A737D;">// [!code ++]</span></span>
<span class="line"><span style="color:#24292E;">    ]</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>使用 uni-ui 的 component</strong></p><ul><li>比如要使用 Uni-Ui 官方提供的 card 模块的话，直接在 vue 文件中添加即可。</li></ul><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="shiki github-light" style="background-color:#fff;" tabindex="0"><code><span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">uni-card</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">title</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;基础卡片&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">extra</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;额外信息&quot;</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;text&gt;这是一个基础卡片示例，此示例展示了一个标题加标题额外信息的标准卡片。&lt;/text&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">uni-card</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="状态管理-小程序端-pinia-持久化" tabindex="-1"><a class="header-anchor" href="#状态管理-小程序端-pinia-持久化" aria-hidden="true">#</a> 状态管理：小程序端 Pinia 持久化</h2><div class="hint-container tip"><p class="hint-container-title">提示</p><p>项目中 Pinia 用法平时完全一致，主要解决持久化插件 <strong>兼容性</strong> 问题。插件默认使用 <code>localStorage</code> 实现持久化，小程序端不兼容，需要替换持久化 API。</p><p>当然 Uni-app 也支持使用 vuex 来进行状态管理。但是看网上对 Pinia 以及 VUEX 的评论，感觉 Pinia 更好一点？</p><p>但目前看来 VUEX 对 TypeScript 的支持没有 pinia 那么好。</p></div><h3 id="持久化存储插件" tabindex="-1"><a class="header-anchor" href="#持久化存储插件" aria-hidden="true">#</a> 持久化存储插件</h3>`,26),v={href:"https://prazdevs.github.io/pinia-plugin-persistedstate/guide/config.html#storage",target:"_blank",rel:"noopener noreferrer"},E=s("code",null,"npm install pinia@2.0.27 pinia-plugin-persistedstate ",-1),m=s("code",null,"vue>3.3.4",-1),b={href:"https://pinia.vuejs.org/zh/",target:"_blank",rel:"noopener noreferrer"},h=e(`<p><strong>网页端持久化 API</strong></p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="shiki github-light" style="background-color:#fff;" tabindex="0"><code><span class="line"><span style="color:#6A737D;">// 网页端 API</span></span>
<span class="line"><span style="color:#24292E;">localStorage.</span><span style="color:#6F42C1;">setItem</span><span style="color:#24292E;">()</span></span>
<span class="line"><span style="color:#24292E;">localStorage.</span><span style="color:#6F42C1;">getItem</span><span style="color:#24292E;">()</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>多端持久化 API</strong></p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="shiki github-light" style="background-color:#fff;" tabindex="0"><code><span class="line"><span style="color:#6A737D;">// 兼容多端 API</span></span>
<span class="line"><span style="color:#24292E;">uni.</span><span style="color:#6F42C1;">setStorageSync</span><span style="color:#24292E;">()</span></span>
<span class="line"><span style="color:#24292E;">uni.</span><span style="color:#6F42C1;">getStorageSync</span><span style="color:#24292E;">()</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>参考代码</strong></p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="shiki github-light" style="background-color:#fff;" tabindex="0"><code><span class="line"><span style="color:#6A737D;">// stores/modules/member.ts</span></span>
<span class="line"><span style="color:#D73A49;">export</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">useMemberStore</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">defineStore</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#032F62;">&#39;member&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  () </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// 常规的 pinia 配置</span></span>
<span class="line"><span style="color:#24292E;">  },</span></span>
<span class="line"><span style="color:#24292E;">  {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// 配置持久化</span></span>
<span class="line"><span style="color:#24292E;">    persist: {</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6A737D;">// 调整为兼容多端的 API</span></span>
<span class="line"><span style="color:#24292E;">      storage: {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6F42C1;">setItem</span><span style="color:#24292E;">(</span><span style="color:#E36209;">key</span><span style="color:#24292E;">, </span><span style="color:#E36209;">value</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">          uni.</span><span style="color:#6F42C1;">setStorageSync</span><span style="color:#24292E;">(key, value) </span><span style="color:#6A737D;">// [!code warning]</span></span>
<span class="line"><span style="color:#24292E;">        },</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6F42C1;">getItem</span><span style="color:#24292E;">(</span><span style="color:#E36209;">key</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> uni.</span><span style="color:#6F42C1;">getStorageSync</span><span style="color:#24292E;">(key) </span><span style="color:#6A737D;">// [!code warning]</span></span>
<span class="line"><span style="color:#24292E;">        },</span></span>
<span class="line"><span style="color:#24292E;">      },</span></span>
<span class="line"><span style="color:#24292E;">    },</span></span>
<span class="line"><span style="color:#24292E;">  },</span></span>
<span class="line"><span style="color:#24292E;">)</span></span>
<span class="line"></span></code></pre><div class="highlight-lines"><br><br><br><br><br><br><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><br></div><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>持久化储存，用户之间不会受到影响。</p><h2 id="数据交互-uni-request-请求封装" tabindex="-1"><a class="header-anchor" href="#数据交互-uni-request-请求封装" aria-hidden="true">#</a> 数据交互：uni.request 请求封装</h2><h3 id="添加请求和上传文件拦截器" tabindex="-1"><a class="header-anchor" href="#添加请求和上传文件拦截器" aria-hidden="true">#</a> 添加请求和上传文件拦截器</h3><div class="hint-container info"><p class="hint-container-title">相关信息</p><p>在各种页面的 vue 文件中，我们可能需要发送不同的 request。配置拦截器之后，所有 vue 中发送的请求，都会先经过拦截器，而后发送出 request。</p><p>拦截器可以用于对 URL 进行格式化，添加 header，timeout 配置等操作。当然我们可以同时拦截 <code>request</code> 和 <code>uploadFile</code></p></div>`,10),g=s("strong",null,"uniapp 拦截器",-1),f={href:"https://uniapp.dcloud.net.cn/api/interceptor.html",target:"_blank",rel:"noopener noreferrer"},C=s("strong",null,"接口说明",-1),A={href:"https://www.apifox.cn/apidoc/shared-0e6ee326-d646-41bd-9214-29dbf47648fa/doc-1521513",target:"_blank",rel:"noopener noreferrer"},D=e(`<p><strong>实现步骤</strong></p><ol><li>基础地址</li><li>超时时间</li><li>请求头标识</li><li>添加 token</li></ol><p><strong>参考代码</strong></p><p>在 vue 文件中填写请求：</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="shiki github-light" style="background-color:#fff;" tabindex="0"><code><span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;@/utils/http&#39;</span></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">get_data</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> ()</span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">res</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> uni.</span><span style="color:#6F42C1;">request</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#032F62;">&#39;method&#39;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&#39;GET&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#032F62;">&#39;url&#39;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&#39;/&#39;</span></span>
<span class="line"><span style="color:#24292E;">        }</span></span>
<span class="line"><span style="color:#24292E;">  )</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>填写拦截器</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="shiki github-light" style="background-color:#fff;" tabindex="0"><code><span class="line"><span style="color:#6A737D;">// src/utils/http.ts</span></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">httpInterceptor</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// 拦截前触发</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">invoke</span><span style="color:#24292E;">(</span><span style="color:#E36209;">options</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">UniApp</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">RequestOptions</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// 1. 非 http 开头需拼接地址</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (</span><span style="color:#D73A49;">!</span><span style="color:#24292E;">options.url.</span><span style="color:#6F42C1;">startsWith</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;http&#39;</span><span style="color:#24292E;">)) {</span></span>
<span class="line"><span style="color:#24292E;">      options.url </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> baseURL </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> options.url</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// 2. 请求超时</span></span>
<span class="line"><span style="color:#24292E;">    options.timeout </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">10000</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// 3. 添加小程序端请求头标识</span></span>
<span class="line"><span style="color:#24292E;">    options.header </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">...</span><span style="color:#24292E;">options.header,</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#032F62;">&#39;source-client&#39;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&#39;miniapp&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// 4. 添加 token 请求头标识</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">memberStore</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">useMemberStore</span><span style="color:#24292E;">()</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">token</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> memberStore.profile?.token</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (token) {</span></span>
<span class="line"><span style="color:#24292E;">      options.header.Authorization </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> token</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">  },</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// 拦截 request 请求</span></span>
<span class="line"><span style="color:#24292E;">uni.</span><span style="color:#6F42C1;">addInterceptor</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;request&#39;</span><span style="color:#24292E;">, httpInterceptor)</span></span>
<span class="line"><span style="color:#6A737D;">// 拦截 uploadFile 文件上传</span></span>
<span class="line"><span style="color:#24292E;">uni.</span><span style="color:#6F42C1;">addInterceptor</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;uploadFile&#39;</span><span style="color:#24292E;">, httpInterceptor)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="封装-promise-请求函数" tabindex="-1"><a class="header-anchor" href="#封装-promise-请求函数" aria-hidden="true">#</a> 封装 Promise 请求函数</h3><p><strong>实现步骤</strong></p><figure><img src="`+t+`" alt="image-20230904110203015" tabindex="0" loading="lazy"><figcaption>image-20230904110203015</figcaption></figure><p><strong>参考代码</strong></p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="shiki github-light" style="background-color:#fff;" tabindex="0"><code><span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> {http} </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;@/utils/http&#39;</span></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">get_data</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">async</span><span style="color:#24292E;"> ()</span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">res</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">await</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">http</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#032F62;">&#39;method&#39;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&#39;GET&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#032F62;">&#39;url&#39;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&#39;/&#39;</span></span>
<span class="line"><span style="color:#24292E;">        }</span></span>
<span class="line"><span style="color:#24292E;">  )</span></span>
<span class="line"><span style="color:#24292E;">  console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(res)</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><details class="hint-container details"><summary>配置接收器代码</summary><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="shiki github-light" style="background-color:#fff;" tabindex="0"><code><span class="line"><span style="color:#6A737D;">// src/utils/http.ts</span></span>
<span class="line"><span style="color:#6A737D;">/**</span></span>
<span class="line"><span style="color:#6A737D;"> * 请求函数</span></span>
<span class="line"><span style="color:#6A737D;"> * </span><span style="color:#D73A49;">@param</span><span style="color:#6A737D;">  </span><span style="color:#24292E;">UniApp.RequestOptions</span></span>
<span class="line"><span style="color:#6A737D;"> * </span><span style="color:#D73A49;">@returns</span><span style="color:#6A737D;"> Promise</span></span>
<span class="line"><span style="color:#6A737D;"> *  1. 返回 Promise 对象</span></span>
<span class="line"><span style="color:#6A737D;"> *  2. 获取数据成功</span></span>
<span class="line"><span style="color:#6A737D;"> *    2.1 提取核心数据 res.data</span></span>
<span class="line"><span style="color:#6A737D;"> *    2.2 添加类型，支持泛型</span></span>
<span class="line"><span style="color:#6A737D;"> *  3. 获取数据失败</span></span>
<span class="line"><span style="color:#6A737D;"> *    3.1 401 错误  -&gt; 清理用户信息，跳转到登录页</span></span>
<span class="line"><span style="color:#6A737D;"> *    3.2 其他错误 -&gt; 根据后端错误信息轻提示</span></span>
<span class="line"><span style="color:#6A737D;"> *    3.3 网络错误 -&gt; 提示用户换网络</span></span>
<span class="line"><span style="color:#6A737D;"> */</span></span>
<span class="line"><span style="color:#D73A49;">type</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Data</span><span style="color:#24292E;">&lt;</span><span style="color:#6F42C1;">T</span><span style="color:#24292E;">&gt; </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#E36209;">code</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">string</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#E36209;">msg</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">string</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#E36209;">result</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">T</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#6A737D;">// 2.2 添加类型，支持泛型</span></span>
<span class="line"><span style="color:#D73A49;">export</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">http</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> &lt;</span><span style="color:#6F42C1;">T</span><span style="color:#24292E;">&gt;(</span><span style="color:#E36209;">options</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">UniApp</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">RequestOptions</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// 1. 返回 Promise 对象，给 promise 指定类型。</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">Promise</span><span style="color:#24292E;">&lt;</span><span style="color:#6F42C1;">Data</span><span style="color:#24292E;">&lt;</span><span style="color:#6F42C1;">T</span><span style="color:#24292E;">&gt;&gt;((</span><span style="color:#E36209;">resolve</span><span style="color:#24292E;">, </span><span style="color:#E36209;">reject</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    uni.</span><span style="color:#6F42C1;">request</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">...</span><span style="color:#24292E;">options,</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6A737D;">// 响应成功 - 只要服务器链接了，不论返回的是什么 code 都算相应成功</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6F42C1;">success</span><span style="color:#24292E;">(</span><span style="color:#E36209;">res</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// 状态码 2xx， axios 就是这样设计的</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (res.statusCode </span><span style="color:#D73A49;">&gt;=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">200</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&amp;&amp;</span><span style="color:#24292E;"> res.statusCode </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">300</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#6A737D;">// 2.1 提取核心数据 res.data，采用类型断言，指定 res.data 的类型</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#6A737D;">// resolve 标记成功并返回结果</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#6F42C1;">resolve</span><span style="color:#24292E;">(res.data </span><span style="color:#D73A49;">as</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Data</span><span style="color:#24292E;">&lt;</span><span style="color:#6F42C1;">T</span><span style="color:#24292E;">&gt;)</span></span>
<span class="line"><span style="color:#24292E;">        } </span><span style="color:#D73A49;">else</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (res.statusCode </span><span style="color:#D73A49;">===</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">401</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#6A737D;">// 401 错误  -&gt; 清理用户信息，跳转到登录页</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">memberStore</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">useMemberStore</span><span style="color:#24292E;">()</span></span>
<span class="line"><span style="color:#24292E;">          memberStore.</span><span style="color:#6F42C1;">clearProfile</span><span style="color:#24292E;">()</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#6A737D;">// 实现页面跳转（不能跳转到 tabBar 页面）</span></span>
<span class="line"><span style="color:#24292E;">          uni.</span><span style="color:#6F42C1;">navigateTo</span><span style="color:#24292E;">({ url: </span><span style="color:#032F62;">&#39;/pages/login/login&#39;</span><span style="color:#24292E;"> })</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#6A737D;">// return reject 返回错误</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#6F42C1;">reject</span><span style="color:#24292E;">(res)</span></span>
<span class="line"><span style="color:#24292E;">        } </span><span style="color:#D73A49;">else</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#6A737D;">// 其他错误 -&gt; 根据后端错误信息轻提示</span></span>
<span class="line"><span style="color:#24292E;">          uni.</span><span style="color:#6F42C1;">showToast</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">            icon: </span><span style="color:#032F62;">&#39;none&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">            title: (res.data </span><span style="color:#D73A49;">as</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Data</span><span style="color:#24292E;">&lt;</span><span style="color:#6F42C1;">T</span><span style="color:#24292E;">&gt;).msg </span><span style="color:#D73A49;">||</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;请求错误&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">          })</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#6F42C1;">reject</span><span style="color:#24292E;">(res)</span></span>
<span class="line"><span style="color:#24292E;">        }</span></span>
<span class="line"><span style="color:#24292E;">      },</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6A737D;">// 响应失败</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6F42C1;">fail</span><span style="color:#24292E;">(</span><span style="color:#E36209;">err</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">        uni.</span><span style="color:#6F42C1;">showToast</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">          icon: </span><span style="color:#032F62;">&#39;none&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">          title: </span><span style="color:#032F62;">&#39;网络错误，换个网络试试&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">        })</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6F42C1;">reject</span><span style="color:#24292E;">(err)</span></span>
<span class="line"><span style="color:#24292E;">      },</span></span>
<span class="line"><span style="color:#24292E;">    })</span></span>
<span class="line"><span style="color:#24292E;">  })</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><h2 id="【拓展】代码规范" tabindex="-1"><a class="header-anchor" href="#【拓展】代码规范" aria-hidden="true">#</a> 【拓展】代码规范</h2><p><strong>为什么需要代码规范</strong></p><p>如果没有统一代码风格，团队协作不便于查看代码提交时所做的修改。</p><figure><img src="`+d+`" alt="diff" tabindex="0" loading="lazy"><figcaption>diff</figcaption></figure><h3 id="统一代码风格" tabindex="-1"><a class="header-anchor" href="#统一代码风格" aria-hidden="true">#</a> 统一代码风格</h3><ul><li>安装 <code>eslint</code> + <code>prettier</code></li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="shiki github-light" style="background-color:#fff;" tabindex="0"><code><span class="line"><span style="color:#6F42C1;">npm</span><span style="color:#24292E;"> </span><span style="color:#032F62;">i</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-D</span><span style="color:#24292E;"> </span><span style="color:#032F62;">eslint</span><span style="color:#24292E;"> </span><span style="color:#032F62;">prettier</span><span style="color:#24292E;"> </span><span style="color:#032F62;">eslint-plugin-vue</span><span style="color:#24292E;"> </span><span style="color:#032F62;">@vue/eslint-config-prettier</span><span style="color:#24292E;"> </span><span style="color:#032F62;">@vue/eslint-config-typescript</span><span style="color:#24292E;"> </span><span style="color:#032F62;">@rushstack/eslint-patch</span><span style="color:#24292E;"> </span><span style="color:#032F62;">@vue/tsconfig</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>新建 <code>.eslintrc.cjs</code> 文件，添加以下 <code>eslint</code> 配置</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="shiki github-light" style="background-color:#fff;" tabindex="0"><code><span class="line"><span style="color:#6A737D;">/* eslint-env node */</span></span>
<span class="line"><span style="color:#6F42C1;">require</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;@rushstack/eslint-patch/modern-module-resolution&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#005CC5;">module</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">exports</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  root: </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  extends: [</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&#39;plugin:vue/vue3-essential&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&#39;eslint:recommended&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&#39;@vue/eslint-config-typescript&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&#39;@vue/eslint-config-prettier&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  ],</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// 小程序全局变量</span></span>
<span class="line"><span style="color:#24292E;">  globals: {</span></span>
<span class="line"><span style="color:#24292E;">    uni: </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    wx: </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    WechatMiniprogram: </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    getCurrentPages: </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    UniApp: </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    UniHelper: </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  },</span></span>
<span class="line"><span style="color:#24292E;">  parserOptions: {</span></span>
<span class="line"><span style="color:#24292E;">    ecmaVersion: </span><span style="color:#032F62;">&#39;latest&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  },</span></span>
<span class="line"><span style="color:#24292E;">  rules: {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&#39;prettier/prettier&#39;</span><span style="color:#24292E;">: [</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#032F62;">&#39;warn&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      {</span></span>
<span class="line"><span style="color:#24292E;">        singleQuote: </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">        semi: </span><span style="color:#005CC5;">false</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">        printWidth: </span><span style="color:#005CC5;">100</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">        trailingComma: </span><span style="color:#032F62;">&#39;all&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">        endOfLine: </span><span style="color:#032F62;">&#39;auto&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      },</span></span>
<span class="line"><span style="color:#24292E;">    ],</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&#39;vue/multi-word-component-names&#39;</span><span style="color:#24292E;">: [</span><span style="color:#032F62;">&#39;off&#39;</span><span style="color:#24292E;">],</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&#39;vue/no-setup-props-destructure&#39;</span><span style="color:#24292E;">: [</span><span style="color:#032F62;">&#39;off&#39;</span><span style="color:#24292E;">],</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&#39;vue/no-deprecated-html-element-is&#39;</span><span style="color:#24292E;">: [</span><span style="color:#032F62;">&#39;off&#39;</span><span style="color:#24292E;">],</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&#39;@typescript-eslint/no-unused-vars&#39;</span><span style="color:#24292E;">: [</span><span style="color:#032F62;">&#39;off&#39;</span><span style="color:#24292E;">],</span></span>
<span class="line"><span style="color:#24292E;">  },</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>配置 <code>package.json</code></li></ul><div class="language-json line-numbers-mode" data-ext="json"><pre class="shiki github-light" style="background-color:#fff;" tabindex="0"><code><span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">&quot;script&quot;</span><span style="color:#24292E;">: {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// ... 省略 ...</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">&quot;lint&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;eslint . --ext .vue,.js,.ts --fix --ignore-path .gitignore&quot;</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>运行</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="shiki github-light" style="background-color:#fff;" tabindex="0"><code><span class="line"><span style="color:#6F42C1;">pnpm</span><span style="color:#24292E;"> </span><span style="color:#032F62;">lint</span><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#6A737D;"># 或 npm run lint</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>到此，你已完成 <code>eslint</code> + <code>prettier</code> 的配置。</p><h3 id="git-工作流规范" tabindex="-1"><a class="header-anchor" href="#git-工作流规范" aria-hidden="true">#</a> Git 工作流规范</h3><ul><li>安装并初始化 <code>husky</code></li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="shiki github-light" style="background-color:#fff;" tabindex="0"><code><span class="line"><span style="color:#6A737D;"># 或 npx husky-init &amp;&amp; npm install</span></span>
<span class="line"><span style="color:#6F42C1;">pnpm</span><span style="color:#24292E;"> </span><span style="color:#032F62;">dlx</span><span style="color:#24292E;"> </span><span style="color:#032F62;">husky-init</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>安装 <code>lint-staged</code></li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="shiki github-light" style="background-color:#fff;" tabindex="0"><code><span class="line"><span style="color:#6A737D;"># 或 npm install lint-staged -D</span></span>
<span class="line"><span style="color:#6F42C1;">pnpm</span><span style="color:#24292E;"> </span><span style="color:#032F62;">i</span><span style="color:#24292E;"> </span><span style="color:#032F62;">lint-staged</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-D</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>配置 <code>package.json</code></li></ul><div class="language-json line-numbers-mode" data-ext="json"><pre class="shiki github-light" style="background-color:#fff;" tabindex="0"><code><span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">&quot;script&quot;</span><span style="color:#24292E;">: {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// ... 省略 ...</span></span>
<span class="line"><span style="color:#24292E;">  },</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">&quot;lint-staged&quot;</span><span style="color:#24292E;">: {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">&quot;*.{vue,ts,js}&quot;</span><span style="color:#24292E;">: [</span><span style="color:#032F62;">&quot;eslint --fix&quot;</span><span style="color:#24292E;">]</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>修改 <code>.husky/pre-commit</code> 文件</li></ul><div class="language-diff line-numbers-mode" data-ext="diff"><pre class="shiki github-light" style="background-color:#fff;" tabindex="0"><code><span class="line"><span style="color:#24292E;">pnpm lint-staged</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>之后采用 <code>git commit</code> 时候，代码会自动进行格式规范修改</li></ul>`,37);function F(x,k){const a=o("ExternalLinkIcon");return i(),c("div",null,[u,s("p",null,[n("持久化存储插件： "),s("a",v,[n("pinia-plugin-persistedstate"),l(a)])]),s("p",null,[n("安装："),E,n("（要求 "),m,n("）； pinia "),s("a",b,[n("官网文档"),l(a)])]),h,s("p",null,[g,n(" ： "),s("a",f,[n("uni.addInterceptor"),l(a)])]),s("p",null,[C,n(" ："),s("a",A,[n("接口文档"),l(a)])]),D])}const j=p(y,[["render",F],["__file","笔记uniapp2.html.vue"]]);export{j as default};
