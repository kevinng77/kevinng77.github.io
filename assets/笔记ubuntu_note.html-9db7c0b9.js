import{_ as t,E as l,S as o,W as c,a2 as p,$ as n,a3 as s,Z as e,aS as i}from"./framework-d5c0d2cb.js";const d="/assets/img/note/image-20211001102539378.png",r="/assets/img/note/image-20210828115905797.png",u="/assets/img/note/image-20211001100458272.png",v="/assets/img/note/image-20211001101327100.png",m={},b=n("figure",null,[n("img",{src:d,alt:"image-20211001102539378",tabindex:"0",loading:"lazy"}),n("figcaption",null,"image-20211001102539378")],-1),h=n("blockquote",null,[n("p",null,"前段时间突然想体验一下 Ubuntu 操作系统，经过各种采坑，终于通过网上各种文档和教程配置好了系统，目前 Ubuntu + win10 双系统已经使用了快 3 个月（三个月来就用了不到 1 小时 windows，Ubuntu 真香），体验还不错，来谈点心得，并附上一些安装总结与软件推荐")],-1),k=n("h2",{id:"安装总结与一些坑",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#安装总结与一些坑","aria-hidden":"true"},"#"),s(" 安装总结与一些坑")],-1),g={href:"https://blog.csdn.net/zhaolinnpu/article/details/105810765",target:"_blank",rel:"noopener noreferrer"},f=n("h4",{id:"屏幕亮度调节",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#屏幕亮度调节","aria-hidden":"true"},"#"),s(" 屏幕亮度调节")],-1),x=n("p",null,"部分使用 NVIDIA 显卡的机型安装 Ubuntu 系统时候可能出现屏幕亮度无法调节的情况（似乎这是 Ubuntu 与 NVIDIA 兼容不好的问题？）。个人使用的是 R9000P AMD Ryzen 7 5800 + 3070 。",-1),_={href:"https://askubuntu.com/questions/1329928/legion-5-pro-brightness-control-doesnt-work-on-ubuntu-20-04-with-nvidia-driver",target:"_blank",rel:"noopener noreferrer"},y=i(`<ul><li>使用 NVIDIA X SETTING 直接调整，</li><li>使用 <code>xrandr --output DP-4 --brightness 0.5</code> 直接调节亮度</li><li>或用第三方工具直接在屏幕上加一层滤镜</li></ul><p>但这些方法体验都不是很好，有时候进程出错可能需要手动再运行程序去调节，另外部分色彩的显示有肉眼可见的偏差。一个比较完美的（也是我目前使用的）解决方案是在显卡混合模式（Hyber mode）下使用 AMD 显卡调节屏幕亮度。这种解决方案需要 linux 内核 5.10，或 5.11 版本。</p><p>更新 linux 内核可以使用 mainline 软件，它提供了图形化界面，操作方便。</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>sudo add-apt-repository ppa:cappelikan/ppa
sudo apt update
sudo apt install mainline
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>安装好后选择要安装的内核版本，（笔者使用 5.10.30）重新启动系统。因为新发型的 5.10 版本没有安全签名，所以重启后可能会黑屏，这时候进入 BIOS 把 security boot 关掉再重试就行了。</p><p>使用新的内核登录系统，然后更改 <code>/etc/default/grub</code> 中的配置：<code>sudo vim /etc/default/grub</code></p><p>更改这一项： <code>GRUB_CMDLINE_LINUX_DEFAULT=&quot;quiet splash amdgpu.backlight=0&quot;</code></p>`,7),w=n("code",null,"sudo update-grub",-1),z=n("code",null,"reboot",-1),q={href:"https://www.reddit.com/r/linux_gaming/comments/mmptqi/lenovo_legion_5_ubuntu_2004_final_guide_dream/",target:"_blank",rel:"noopener noreferrer"},I=i('<h4 id="nvidia-驱动" tabindex="-1"><a class="header-anchor" href="#nvidia-驱动" aria-hidden="true">#</a> NVIDIA 驱动</h4><p>网上有不少 NVIDIA 驱动安装教程，尝试了 3-4 种驱动安装方案绿屏或黑屏之后，个人推荐使用系统自带的驱动安装软件进行安装，省掉不少麻烦：</p><p>首先禁用 nouveue，修改 <code>/etc/modprobe.d/blacklist.conf</code> 文件：</p><p><code>sudo vim /etc/modprobe.d/blacklist.conf</code></p><p>在最后一行插入<code>blacklist nouveau</code></p><p>之后安装驱动：打开 软件与更新 software&gt; 附加驱动 additional driver 选择驱动版本，跟随系统提示安装即可。</p><figure><img src="'+r+`" alt="相关图片" height="300" tabindex="0" loading="lazy"><figcaption>相关图片</figcaption></figure><h3 id="配置工作与学习环境" tabindex="-1"><a class="header-anchor" href="#配置工作与学习环境" aria-hidden="true">#</a> 配置工作与学习环境</h3><p>安装好系统与驱动后开始搭建我们的工作环境：</p><h4 id="基础依赖" tabindex="-1"><a class="header-anchor" href="#基础依赖" aria-hidden="true">#</a> 基础依赖</h4><p>首先安装一些我们可能用到的依赖与工具，个人喜欢先把各种可能用到的依赖更新一遍：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">apt-get</span> update <span class="token parameter variable">-y</span> <span class="token operator">&amp;&amp;</span> <span class="token function">apt-get</span> <span class="token function">install</span> <span class="token parameter variable">-y</span> <span class="token punctuation">\\</span>
    <span class="token function">git</span> <span class="token punctuation">\\</span>
    cmake <span class="token punctuation">\\</span>
    libsm6 <span class="token punctuation">\\</span>
    libxext6 <span class="token punctuation">\\</span>
    libxrender-dev <span class="token punctuation">\\</span>
    python3 <span class="token punctuation">\\</span>
    python3-pip <span class="token punctuation">\\</span>
    python3-venv <span class="token punctuation">\\</span>
    python3-dev <span class="token punctuation">\\</span>
    python3-numpy <span class="token punctuation">\\</span>
    gcc <span class="token punctuation">\\</span>
    build-essential <span class="token punctuation">\\</span>
    gfortran <span class="token punctuation">\\</span>
    <span class="token function">wget</span> <span class="token punctuation">\\</span>
    <span class="token function">curl</span> <span class="token punctuation">\\</span>
    cmake<span class="token punctuation">\\</span>
    automake <span class="token punctuation">\\</span>
    python-dev <span class="token punctuation">\\</span>
    python-numpy <span class="token punctuation">\\</span>
    graphicsmagick <span class="token punctuation">\\</span>
    libgraphicsmagick1-dev <span class="token punctuation">\\</span>
    libatlas-base-dev <span class="token punctuation">\\</span>
    libavcodec-dev <span class="token punctuation">\\</span>
    libavformat-dev <span class="token punctuation">\\</span>
    libgtk2.0-dev <span class="token punctuation">\\</span>
    libjpeg-dev <span class="token punctuation">\\</span>
    liblapack-dev <span class="token punctuation">\\</span>
    libswscale-dev <span class="token punctuation">\\</span>
    pkg-config <span class="token punctuation">\\</span>
    software-properties-common <span class="token punctuation">\\</span>
    libgstreamer-plugins-base1.0-dev<span class="token punctuation">\\</span>
    libgstreamer1.0-dev<span class="token punctuation">\\</span>
    libgtk-3-dev<span class="token punctuation">\\</span>
    <span class="token function">zip</span> <span class="token punctuation">\\</span>
    g++ <span class="token punctuation">\\</span>
    net-tools <span class="token punctuation">\\</span>
    openssh-server <span class="token punctuation">\\</span>
    openssl <span class="token punctuation">\\</span>
    openssl-dev* <span class="token punctuation">\\</span>
    <span class="token function">npm</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="深度学习" tabindex="-1"><a class="header-anchor" href="#深度学习" aria-hidden="true">#</a> 深度学习</h4><p>根据 NVIDIA 显卡型号与驱动进行安装，安装后就可以配置 docker 来进行深度学习的模型训练。</p>`,14),S={href:"https://baijiahao.baidu.com/s?id=1699040821993659062&wfr=spider&for=pc",target:"_blank",rel:"noopener noreferrer"},L={href:"https://blog.csdn.net/wm9028/article/details/110082553",target:"_blank",rel:"noopener noreferrer"},N=i(`<p><strong>typora</strong></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>应用商店下载
<span class="token comment"># or run:</span>
<span class="token comment"># sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys BA300B7755AFCFAE</span>
<span class="token function">wget</span> <span class="token parameter variable">-qO</span> - https://typora.io/linux/public-key.asc <span class="token operator">|</span> <span class="token function">sudo</span> apt-key <span class="token function">add</span> -
<span class="token comment"># add Typora&#39;s repository</span>
<span class="token function">sudo</span> add-apt-repository <span class="token string">&#39;deb https://typora.io/linux ./&#39;</span>
<span class="token function">sudo</span> <span class="token function">apt-get</span> update
<span class="token comment"># install typora</span>
<span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> typora
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="git" tabindex="-1"><a class="header-anchor" href="#git" aria-hidden="true">#</a> git</h4><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>sudo apt install git
config --global user.name &quot;kevinng77&quot;
config --global user.email &quot;417333277@qq.com&quot;
cd ~
ssh-keygen -t rsa -C &quot;417333277@qq.com&quot;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="资源监视器" tabindex="-1"><a class="header-anchor" href="#资源监视器" aria-hidden="true">#</a> 资源监视器</h4><p>可以在状态栏实时显示计算机资源使用情况，很方便。</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>sudo apt install indicator-multiload
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="zsh" tabindex="-1"><a class="header-anchor" href="#zsh" aria-hidden="true">#</a> ZSH</h4><div class="language-SHELL line-numbers-mode" data-ext="SHELL"><pre class="language-SHELL"><code>sudo apt install zsh
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>oh-my-zsh 安装</p>`,10),D={href:"https://ohmyz.sh/",target:"_blank",rel:"noopener noreferrer"},E=i(`<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sh</span> <span class="token parameter variable">-c</span> <span class="token string">&quot;<span class="token variable"><span class="token variable">$(</span><span class="token function">curl</span> <span class="token parameter variable">-fsSL</span> https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh<span class="token variable">)</span></span>&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>若失败可尝试通过 git 仓库直接安装，然后复制里面的配置文件</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> clone https://github.com/ohmyzsh/ohmyzsh.git
./ohmyzsh/tools/install.sh
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div>`,3),A={href:"https://zhuanlan.zhihu.com/p/139305626",target:"_blank",rel:"noopener noreferrer"},V=i(`<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 部分插件安装</span>
<span class="token function">apt</span> <span class="token function">install</span> autojump
<span class="token function">git</span> clone https://github.com/zsh-users/zsh-autosuggestions <span class="token variable">\${ZSH_CUSTOM<span class="token operator">:-</span>~<span class="token operator">/</span>.oh-my-zsh<span class="token operator">/</span>custom}</span>/plugins/zsh-autosuggestions
<span class="token function">git</span> clone https://github.com/zsh-users/zsh-syntax-highlighting.git <span class="token variable">\${ZSH_CUSTOM<span class="token operator">:-</span>~<span class="token operator">/</span>.oh-my-zsh<span class="token operator">/</span>custom}</span>/plugins/zsh-syntax-highlighting

<span class="token comment"># 修改 code .zshrc 来配置插件</span>
<span class="token assign-left variable">plugins</span><span class="token operator">=</span><span class="token punctuation">(</span>git autojump zsh-autosuggestions zsh-syntax-highlighting<span class="token punctuation">)</span> 
<span class="token builtin class-name">source</span> .zshrc
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>个人使用:</p><ul><li><p>主题：<code>ZSH_THEME=&quot;simple&quot;</code></p></li><li><p>插件：<code>plugins=(git autojump zsh-autosuggestions zsh-syntax-highlighting) </code></p></li></ul><h4 id="deepin-wine" tabindex="-1"><a class="header-anchor" href="#deepin-wine" aria-hidden="true">#</a> deepin wine</h4>`,4),C={href:"https://github.com/wszqkzqk/deepin-wine-ubuntu",target:"_blank",rel:"noopener noreferrer"},M=i(`<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 安装 deepin wine</span>
<span class="token function">git</span> clone https://github.com/wszqkzqk/deepin-wine-ubuntu.git
<span class="token builtin class-name">cd</span> deepin-wine-ubuntu/
<span class="token function">chmod</span> <span class="token number">777</span> install.sh
<span class="token function">sudo</span> ./install.sh
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="微信" tabindex="-1"><a class="header-anchor" href="#微信" aria-hidden="true">#</a> 微信</h5>`,2),U={href:"https://github.com/wszqkzqk/deepin-wine-ubuntu",target:"_blank",rel:"noopener noreferrer"},$=i(`<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 安装微信</span>
<span class="token function">sudo</span> dpkg <span class="token parameter variable">-i</span> deepin.com.wechat_2.6.2.31deepin0_i386.deb  <span class="token comment"># 这个要改</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>deepin wine 微信容易出现问题，如中文乱乱码，分辨率，更新等。针对对应问题百度一下就可以解决了。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 解决分辨率</span>
<span class="token assign-left variable">WINEPREFIX</span><span class="token operator">=~</span>/.deepinwine/Deepin-WeChat  /usr/bin/deepin-wine  winecfg
<span class="token comment"># 解决微信更新问题</span>
<span class="token function">wget</span> -qO- https://deepin-wine.i-m.dev/setup.sh <span class="token operator">|</span> <span class="token function">sudo</span> <span class="token function">sh</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="坚果云" tabindex="-1"><a class="header-anchor" href="#坚果云" aria-hidden="true">#</a> 坚果云</h4><p>直接从坚果云官网下载 linux 版本，下载后可能出现登录界面空白的问题，尝试：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">vim</span> /.nutstore/dist/conf/nutstore.properties
<span class="token comment"># 改 webui.enable=false</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="vs-code" tabindex="-1"><a class="header-anchor" href="#vs-code" aria-hidden="true">#</a> vs code</h4><p>轻量化的码农神器</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 下载 https://code.visualstudio.com/download</span>
<span class="token function">sudo</span> dpkg <span class="token parameter variable">-i</span> <span class="token function">install</span> <span class="token function">sudo</span> dpkg <span class="token parameter variable">-i</span> code_1.56.2-1620838498_amd64.deb
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="桌面美化" tabindex="-1"><a class="header-anchor" href="#桌面美化" aria-hidden="true">#</a> 桌面美化</h4><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 桌面美化</span>
<span class="token function">sudo</span> <span class="token function">apt</span> <span class="token function">install</span> gnome-tweak-tool
<span class="token comment"># 添加拓展插件</span>
<span class="token function">sudo</span> <span class="token function">apt</span> <span class="token function">install</span> gnome-shell-extensions 
<span class="token function">sudo</span> <span class="token function">apt</span> <span class="token function">install</span> chrome-gnome-shell
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在 gnome tweak tool 中可以设置更换其他桌面主题，推荐个人最喜欢的 arc</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">apt</span> <span class="token function">install</span> arc-theme
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>arc-icon 有配套的图标可以安装</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># arc-icon</span>
<span class="token function">git</span> clone https://github.com/horst3180/arc-icon-theme <span class="token parameter variable">--depth</span> <span class="token number">1</span> <span class="token operator">&amp;&amp;</span> <span class="token builtin class-name">cd</span> arc-icon-theme
./autogen.sh <span class="token parameter variable">--prefix</span><span class="token operator">=</span>/usr
<span class="token function">sudo</span> <span class="token function">make</span> <span class="token function">install</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="`+u+`" alt="image-20211001100458272" tabindex="0" loading="lazy"><figcaption>image-20211001100458272</figcaption></figure><h4 id="wps" tabindex="-1"><a class="header-anchor" href="#wps" aria-hidden="true">#</a> WPS</h4><p>个人觉得比 ubuntu 自带的 libreofice 好用。从 wps 官网下载安装</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> dpkg <span class="token parameter variable">-i</span> wps-office_11.1.0.10161_amd64.deb
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="彩蛋安装" tabindex="-1"><a class="header-anchor" href="#彩蛋安装" aria-hidden="true">#</a> 彩蛋安装</h4><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 彩蛋安装</span>
<span class="token function">sudo</span> <span class="token function">apt</span> <span class="token function">install</span> sl
<span class="token function">sudo</span> <span class="token function">apt</span> <span class="token function">install</span> cmatrix
<span class="token function">sudo</span> <span class="token function">apt</span> <span class="token function">install</span> fortunes-zh
<span class="token function">sudo</span> <span class="token function">apt</span> <span class="token function">install</span> lolcat
<span class="token function">sudo</span> <span class="token function">apt</span> <span class="token function">install</span> <span class="token function">npm</span>
<span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> cowsay
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>可以组合彩蛋，然后在 oh-my-zsh 中配置一下快捷命令：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">alias</span> <span class="token assign-left variable">boring</span><span class="token operator">=</span><span class="token string">&quot;fortune | cowsay -r | lolcat&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>于是在终端敲 boring 就有了：</p><figure><img src="`+v+`" alt="image-20211001101327100" tabindex="0" loading="lazy"><figcaption>image-20211001101327100</figcaption></figure><h4 id="百度网盘" tabindex="-1"><a class="header-anchor" href="#百度网盘" aria-hidden="true">#</a> 百度网盘</h4><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> dpkg <span class="token parameter variable">-i</span> baidunetdisk_3.5.0_amd64.deb
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="conda" tabindex="-1"><a class="header-anchor" href="#conda" aria-hidden="true">#</a> conda</h4><p>自动换了 ubuntu 之后就很少使用 conda 了，直接用 docker 更方便。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">curl</span> <span class="token parameter variable">-O</span> https://repo.anaconda.com/mini/Miniconda3-latest-Linux-x86_64.sh
<span class="token function">zsh</span> Miniconda3-latest-Linux-x86_64.sh
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 如果以上失败的话可以尝试下面这个</span>
<span class="token function">wget</span> https://mirrors.tuna.tsinghua.edu.cn/anaconda/miniconda/Miniconda3-latest-Linux-x86_64.sh
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>conda 激活 zsh</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>~/miniconda3/bin/conda init <span class="token function">zsh</span>
conda config <span class="token parameter variable">--set</span> auto_activate_base <span class="token boolean">false</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="docker" tabindex="-1"><a class="header-anchor" href="#docker" aria-hidden="true">#</a> docker</h4>`,34),H={href:"https://docs.docker.com/get-docker/",target:"_blank",rel:"noopener noreferrer"},B=i(`<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code> <span class="token function">sudo</span> <span class="token function">apt-get</span> update
 <span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> <span class="token punctuation">\\</span>
    ca-certificates <span class="token punctuation">\\</span>
    <span class="token function">curl</span> <span class="token punctuation">\\</span>
    gnupg <span class="token punctuation">\\</span>
    lsb-release
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code> <span class="token function">curl</span> <span class="token parameter variable">-fsSL</span> https://download.docker.com/linux/ubuntu/gpg <span class="token operator">|</span> <span class="token function">sudo</span> gpg <span class="token parameter variable">--dearmor</span> <span class="token parameter variable">-o</span> /usr/share/keyrings/docker-archive-keyring.gpg
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">echo</span> <span class="token punctuation">\\</span>
  <span class="token string">&quot;deb [arch=<span class="token variable"><span class="token variable">$(</span>dpkg --print-architecture<span class="token variable">)</span></span> signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu \\
  <span class="token variable"><span class="token variable">$(</span>lsb_release <span class="token parameter variable">-cs</span><span class="token variable">)</span></span> stable&quot;</span> <span class="token operator">|</span> <span class="token function">sudo</span> <span class="token function">tee</span> /etc/apt/sources.list.d/docker.list <span class="token operator">&gt;</span> /dev/null
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code> <span class="token function">sudo</span> <span class="token function">apt-get</span> update
 <span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> docker-ce docker-ce-cli containerd.io docker-compose-plugin
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div>`,4),O={href:"https://docs.nvidia.com/datacenter/cloud-native/container-toolkit/install-guide.html#docker",target:"_blank",rel:"noopener noreferrer"},P=i(`<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">curl</span> https://get.docker.com <span class="token operator">|</span> <span class="token function">sh</span> <span class="token punctuation">\\</span>
  <span class="token operator">&amp;&amp;</span> <span class="token function">sudo</span> systemctl <span class="token parameter variable">--now</span> <span class="token builtin class-name">enable</span> <span class="token function">docker</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token assign-left variable">distribution</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token builtin class-name">.</span> /etc/os-release<span class="token punctuation">;</span><span class="token builtin class-name">echo</span> $ID$VERSION_ID<span class="token variable">)</span></span> <span class="token punctuation">\\</span>
      <span class="token operator">&amp;&amp;</span> <span class="token function">curl</span> <span class="token parameter variable">-fsSL</span> https://nvidia.github.io/libnvidia-container/gpgkey <span class="token operator">|</span> <span class="token function">sudo</span> gpg <span class="token parameter variable">--dearmor</span> <span class="token parameter variable">-o</span> /usr/share/keyrings/nvidia-container-toolkit-keyring.gpg <span class="token punctuation">\\</span>
      <span class="token operator">&amp;&amp;</span> <span class="token function">curl</span> <span class="token parameter variable">-s</span> <span class="token parameter variable">-L</span> https://nvidia.github.io/libnvidia-container/<span class="token variable">$distribution</span>/libnvidia-container.list <span class="token operator">|</span> <span class="token punctuation">\\</span>
            <span class="token function">sed</span> <span class="token string">&#39;s#deb https://#deb [signed-by=/usr/share/keyrings/nvidia-container-toolkit-keyring.gpg] https://#g&#39;</span> <span class="token operator">|</span> <span class="token punctuation">\\</span>
            <span class="token function">sudo</span> <span class="token function">tee</span> /etc/apt/sources.list.d/nvidia-container-toolkit.list
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">apt-get</span> update
<span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> <span class="token parameter variable">-y</span> nvidia-docker2
<span class="token function">sudo</span> systemctl restart <span class="token function">docker</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>添加 docker 用户</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">usermod</span> <span class="token parameter variable">-aG</span> <span class="token function">docker</span> username
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="pycharm" tabindex="-1"><a class="header-anchor" href="#pycharm" aria-hidden="true">#</a> pycharm</h4><p>python 神器，个人建议直接从 ubuntu 应用商店里面进行安装，当然你也可以命令行安装</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> snap <span class="token function">install</span> pycharm-professional <span class="token parameter variable">--classic</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>修复中文无法输入 pycharm</p><ul><li><p>https://confluence.jetbrains.com/pages/viewpage.action?pageId=173178989 下载 JBRSDK</p><ul><li>解压 tar zxvf</li></ul></li><li><p>打开 PyCharm，File–&gt;&gt;Settings–&gt;&gt;搜索框搜索 Plugins、并双击进入–&gt;&gt;在 Plugins 中搜索 choose runtime 点击 install，完成后点击 OK，重启 pycharm</p></li><li><p>crtl + shift + A 输入 runtime 选择 choose runtime.</p><ul><li>选择解压后的 jbr 路径</li></ul></li></ul><h4 id="截图工具" tabindex="-1"><a class="header-anchor" href="#截图工具" aria-hidden="true">#</a> 截图工具</h4><p>按 <code>alt</code> + <code>ctrl</code> + <code>p</code> 开始截图，之后 <code>ctrl+c</code> 复制选中区域，就可以粘贴了。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">apt</span> <span class="token function">install</span> flameshot
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="其他工具" tabindex="-1"><a class="header-anchor" href="#其他工具" aria-hidden="true">#</a> 其他工具</h4><p>其他大部分工具都可以直接在对应软件官网上下载到安装包，如 zoom, webex, subline text, teams, chrome 等。腾讯会议的 linux 客户端叫做 wemeetapp 比较特别。视频播放器推荐 SMPlayer</p><h4 id="个人-hexo-博客恢复" tabindex="-1"><a class="header-anchor" href="#个人-hexo-博客恢复" aria-hidden="true">#</a> 个人 hexo 博客恢复</h4><p>先前已经在另外的服务器上安装好了 hexo 博客，将 hexo 博客备份到 git 之后，再把博客环境更新同步到本机上。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 个人博客</span>
<span class="token function">sudo</span> <span class="token function">npm</span> <span class="token function">install</span> <span class="token parameter variable">-g</span> hexo-cli
<span class="token function">mkdir</span> blog
<span class="token builtin class-name">cd</span> blog
hexo init
<span class="token function">git</span> init
<span class="token function">git</span> remote <span class="token function">add</span> origin git@github.com:kevinng77/kevinng77.github.io.git
<span class="token function">git</span> <span class="token function">add</span> .gitignore
<span class="token function">git</span> commit <span class="token parameter variable">-m</span> <span class="token string">&quot;init&quot;</span>
<span class="token function">git</span> branch --set-upstream-to<span class="token operator">=</span>origin/master master
<span class="token function">git</span> pull --allow-unrelated-histories 

<span class="token function">npm</span> <span class="token function">install</span> hexo-deployer-git <span class="token parameter variable">--save</span>
<span class="token function">npm</span> <span class="token function">install</span> hexo-server

<span class="token comment"># 先配置好坚果云路径</span>
<span class="token function">sudo</span> <span class="token function">rm</span> <span class="token parameter variable">-r</span> <span class="token builtin class-name">source</span>
<span class="token function">cp</span> <span class="token parameter variable">-r</span> ~/nut/source/ <span class="token builtin class-name">.</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="系统备份" tabindex="-1"><a class="header-anchor" href="#系统备份" aria-hidden="true">#</a> 系统备份</h4><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 系统备份</span>
<span class="token function">sudo</span> <span class="token function">su</span>
<span class="token builtin class-name">cd</span> /
<span class="token function">tar</span> cvpzf backup.tgz <span class="token parameter variable">--exclude</span><span class="token operator">=</span>/proc <span class="token parameter variable">--exclude</span><span class="token operator">=</span>/media <span class="token parameter variable">--exclude</span><span class="token operator">=</span>/lost+found <span class="token parameter variable">--exclude</span><span class="token operator">=</span>/backup.tgz <span class="token parameter variable">--exclude</span><span class="token operator">=</span>/mnt <span class="token parameter variable">--exclude</span><span class="token operator">=</span>/sys <span class="token parameter variable">--exclude</span><span class="token operator">=</span>/home/kevin/miniconda3 <span class="token parameter variable">--exclude</span><span class="token operator">=</span>/home/kevin/下载 <span class="token parameter variable">--exclude</span><span class="token operator">=</span>/home/kevin/nut /
<span class="token comment"># 恢复备份</span>
<span class="token function">sudo</span> <span class="token function">su</span>
<span class="token function">tar</span> xvpfz backup.tgz <span class="token parameter variable">-C</span> /
<span class="token function">mkdir</span> proc
<span class="token function">mkdir</span> lost+found
<span class="token function">mkdir</span> mnt
<span class="token function">mkdir</span> sys
<span class="token function">mkdir</span> media
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>或使用 dump 备份</p><h2 id="其他参考" tabindex="-1"><a class="header-anchor" href="#其他参考" aria-hidden="true">#</a> 其他参考</h2>`,22),T={href:"https://zhuanlan.zhihu.com/p/56253982?from_voters_page=true",target:"_blank",rel:"noopener noreferrer"};function j(R,F){const a=l("ExternalLinkIcon");return o(),c("div",null,[b,h,p("more"),k,n("p",null,[s("首先安装 ubuntu 20.04 系统，网上有很多教程，这里不再赘述，如："),n("a",g,[s("这个"),e(a)])]),f,x,n("p",null,[s("一开始尝试独显直连（NVIDIA 驱动 460），但安装时候遇到了不少坑，大部分问题与 "),n("a",_,[s("这里的描述"),e(a)]),s(" 一致。尝试后发现以下几种方案可调节亮度：")]),y,n("p",null,[s("然后 "),w,s(" , 重启"),z,s(" 后就可以调节屏幕亮度了。"),n("a",q,[s("参考链接"),e(a)])]),I,n("p",null,[n("a",S,[s("深度学习安装教程"),e(a)]),s("，"),n("a",L,[s("cuda 安装"),e(a)])]),N,n("p",null,[s("为终端注入灵魂，除了支持终端皮肤设置，还支持各种终端个性化操作，如自定义命令等。建议根据"),n("a",D,[s("官方"),e(a)]),s(" 指南安装。")]),E,n("p",null,[s("安装好后可以自行添加主题或对应插件，添加插件指南："),n("a",A,[s("on-my-zsh 相关插件"),e(a)])]),V,n("p",null,[s("deepin wine 用于运行微信，QQ 等国内软件。支持的软件请参考 "),n("a",C,[s("网友贡献"),e(a)])]),M,n("p",null,[s("从 deepin wine 支持的软件 "),n("a",U,[s("网友贡献"),e(a)]),s(" 仓库下载微信。")]),$,n("p",null,[n("a",H,[s("docker 安装"),e(a)])]),B,n("p",null,[n("a",O,[s("nvidia-docker"),e(a)])]),P,n("p",null,[n("a",T,[s("知乎 ubuntu 完全配置指南"),e(a)])])])}const W=t(m,[["render",j],["__file","笔记ubuntu_note.html.vue"]]);export{W as default};
