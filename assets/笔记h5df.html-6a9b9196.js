import{_ as p}from"./plugin-vue_export-helper-c27b6911.js";import{r as o,o as t,c as r,a as s,b as a,d as l,f as e}from"./app-82c5f5e3.js";const c={},i=s("h3",{id:"h5df-简介",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#h5df-简介","aria-hidden":"true"},"#"),a(" H5DF 简介")],-1),d={href:"https://docs.h5py.org/en/stable/high/dataset.html#creating-datasets",target:"_blank",rel:"noopener noreferrer"},y=e(`<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="shiki github-light" style="background-color:#fff;" tabindex="0"><code><span class="line"><span style="color:#6F42C1;">conda</span><span style="color:#24292E;"> </span><span style="color:#032F62;">install</span><span style="color:#24292E;"> </span><span style="color:#032F62;">h5py</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="file" tabindex="-1"><a class="header-anchor" href="#file" aria-hidden="true">#</a> File</h4><div class="language-python line-numbers-mode" data-ext="py"><pre class="shiki github-light" style="background-color:#fff;" tabindex="0"><code><span class="line"><span style="color:#24292E;">f </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> h5py.File(</span><span style="color:#032F62;">&#39;myfile.hdf5&#39;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&#39;w&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>文件模式 <code>w/a/r</code>等于 python io 类似。同时 H5PY 还提供了 SWMR 接口，可以实现但进程写入的同时多进程读取。此外，文件还提供不同的 driver 形式，已针对不同的数据场景：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="shiki github-light" style="background-color:#fff;" tabindex="0"><code><span class="line"><span style="color:#24292E;">f </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> h5py.File(</span><span style="color:#032F62;">&#39;myfile.hdf5&#39;</span><span style="color:#24292E;">, </span><span style="color:#E36209;">driver</span><span style="color:#D73A49;">=&lt;</span><span style="color:#24292E;">driver name</span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;">driver_kwds</span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>使用结束后需要关闭：<code>f.close()</code>。对于一次性读取的可以使用 <code>with h5py.File() as fp:</code></p><h4 id="group" tabindex="-1"><a class="header-anchor" href="#group" aria-hidden="true">#</a> Group</h4><p>group 的功能类似于菜单，Group 下面可以储存 Group 和 dataset 类型数据。</p><p>创建组对象：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="shiki github-light" style="background-color:#fff;" tabindex="0"><code><span class="line"><span style="color:#24292E;">grp </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> f.create_group(</span><span style="color:#032F62;">&quot;bar&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">grp.name  </span><span style="color:#6A737D;"># &#39;/bar&#39;</span></span>
<span class="line"><span style="color:#24292E;">subgrp </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> grp.create_group(</span><span style="color:#032F62;">&quot;baz&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">subgrp.name  </span><span style="color:#6A737D;"># &#39;/bar/baz&#39;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>引用组对象：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="shiki github-light" style="background-color:#fff;" tabindex="0"><code><span class="line"><span style="color:#24292E;">grp3 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> f[</span><span style="color:#032F62;">&#39;/some/long&#39;</span><span style="color:#24292E;">]</span></span>
<span class="line"><span style="color:#24292E;">grp3.name  </span><span style="color:#6A737D;"># &#39;/some/long&#39;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>可以采用 <code>keys()</code>, <code>values()</code> 遍历对象。但是更推荐使用 <code>group.visit()</code> 或 <code>group.visititems()</code>。</p><p><code>group.get()</code> 类似于字典的 <code>get</code>。判断某个 group 是否存在可以尝试使用：<code>if f[&#39;group_name&#39;]</code>，但部分 H5PY 版本不支持。</p><h4 id="datasets" tabindex="-1"><a class="header-anchor" href="#datasets" aria-hidden="true">#</a> Datasets</h4><p>h5py dataset 中的数据 API 与 numpy 类似。</p><p>创建 DATASET，必须指定 dataset 的 <code>name</code>, <code>shape</code>, <code>dtype</code>。默认的<code>dtype</code> 是 <code>f</code>。（除非创建 Empty dataset）</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="shiki github-light" style="background-color:#fff;" tabindex="0"><code><span class="line"><span style="color:#24292E;">dset </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> f.create_dataset(</span><span style="color:#032F62;">&quot;ints&quot;</span><span style="color:#24292E;">, (</span><span style="color:#005CC5;">100</span><span style="color:#24292E;">,), </span><span style="color:#E36209;">dtype</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&#39;i8&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h5 id="dataset-导入数据" tabindex="-1"><a class="header-anchor" href="#dataset-导入数据" aria-hidden="true">#</a> dataset 导入数据</h5><p>创建时候导入</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="shiki github-light" style="background-color:#fff;" tabindex="0"><code><span class="line"><span style="color:#24292E;">arr </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> np.arange(</span><span style="color:#005CC5;">100</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">dset </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> f.create_dataset(</span><span style="color:#032F62;">&quot;init&quot;</span><span style="color:#24292E;">, </span><span style="color:#E36209;">data</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">arr)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>对以有 dataset 导入：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="shiki github-light" style="background-color:#fff;" tabindex="0"><code><span class="line"><span style="color:#24292E;">dset[</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">] </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">3.0</span><span style="color:#24292E;">  </span><span style="color:#6A737D;"># print(dset[0, 1])</span></span>
<span class="line"><span style="color:#24292E;">dset[</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">,:] </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> other_data</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="dataset-引用数据" tabindex="-1"><a class="header-anchor" href="#dataset-引用数据" aria-hidden="true">#</a> dataset 引用数据</h5><p>注意：不能使用 numpy 中的双层索引，如<code>dset[0][3]</code></p><div class="language-python line-numbers-mode" data-ext="py"><pre class="shiki github-light" style="background-color:#fff;" tabindex="0"><code><span class="line"><span style="color:#24292E;">dset </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> f.create_dataset(</span><span style="color:#032F62;">&quot;MyDataset&quot;</span><span style="color:#24292E;">, (</span><span style="color:#005CC5;">10</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">10</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">10</span><span style="color:#24292E;">), </span><span style="color:#032F62;">&#39;f&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">dset[</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">]</span></span>
<span class="line"><span style="color:#24292E;">dset[</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">:</span><span style="color:#005CC5;">10</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">:</span><span style="color:#005CC5;">9</span><span style="color:#24292E;">:</span><span style="color:#005CC5;">3</span><span style="color:#24292E;">]</span></span>
<span class="line"><span style="color:#24292E;">dset[:,::</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">5</span><span style="color:#24292E;">]</span></span>
<span class="line"><span style="color:#24292E;">dset[</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">]</span></span>
<span class="line"><span style="color:#24292E;">dset[</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">5</span><span style="color:#24292E;">]</span></span>
<span class="line"><span style="color:#24292E;">dset[</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">...</span><span style="color:#24292E;">]</span></span>
<span class="line"><span style="color:#24292E;">dset[</span><span style="color:#005CC5;">...</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">6</span><span style="color:#24292E;">]</span></span>
<span class="line"><span style="color:#24292E;">dset[()]</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果要遍历 dataset 的话，采用 <code>dataset.len()</code> 代替 <code>len(dataset)</code></p><h4 id="chunked" tabindex="-1"><a class="header-anchor" href="#chunked" aria-hidden="true">#</a> chunked</h4><p>默认 h5df dataset 采用连续空间存储。但可以采用 chunks 来指定数据存储的连续性。如下：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="shiki github-light" style="background-color:#fff;" tabindex="0"><code><span class="line"><span style="color:#24292E;">dset </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> f.create_dataset(</span><span style="color:#032F62;">&quot;chunked&quot;</span><span style="color:#24292E;">, (</span><span style="color:#005CC5;">1000</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">1000</span><span style="color:#24292E;">), </span><span style="color:#E36209;">chunks</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">100</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">100</span><span style="color:#24292E;">))</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>案例中表示 <code>dset[0:100,0:100]</code>, <code>dset[200:300, 400:500]</code> 将被储存再连续空间。官方建议设置 chunk 块大小为 10kb - 1MB。chunked 的特点就是，当 chunked 中的一个数据被读取的时候，整个 chunked 的数据都会被读取。可以让 h5df 自动设置 chunk 的大小。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="shiki github-light" style="background-color:#fff;" tabindex="0"><code><span class="line"><span style="color:#24292E;">dset </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> f.create_dataset(</span><span style="color:#032F62;">&quot;autochunk&quot;</span><span style="color:#24292E;">, (</span><span style="color:#005CC5;">1000</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">1000</span><span style="color:#24292E;">), </span><span style="color:#E36209;">chunks</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">True</span><span style="color:#24292E;">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>如对于深度学习，你可能希望将 chunks 手动设置为每个 samples 的大小，这样会比让系统自动设置快很多。（个人测试最快时候可以差 10 倍读取速度）</p><h4 id="resizable-dataset" tabindex="-1"><a class="header-anchor" href="#resizable-dataset" aria-hidden="true">#</a> resizable dataset</h4><div class="language-python line-numbers-mode" data-ext="py"><pre class="shiki github-light" style="background-color:#fff;" tabindex="0"><code><span class="line"><span style="color:#24292E;">dset </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> f.create_dataset(</span><span style="color:#032F62;">&quot;unlimited&quot;</span><span style="color:#24292E;">, (</span><span style="color:#005CC5;">10</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">10</span><span style="color:#24292E;">), </span><span style="color:#E36209;">maxshape</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">None</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">10</span><span style="color:#24292E;">))</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>需要注意的是 resize 不是像 numpy 的 reshape，缩小维度上的数据会被直接丢弃掉</p><h4 id="compression" tabindex="-1"><a class="header-anchor" href="#compression" aria-hidden="true">#</a> compression</h4><p>compression 压缩有时候甚至可以提高读取的速度！压缩可以选择不同的方式，以及不同的等级。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="shiki github-light" style="background-color:#fff;" tabindex="0"><code><span class="line"><span style="color:#24292E;">df.create_dataset(dset_name, </span><span style="color:#E36209;">data</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">data, </span><span style="color:#E36209;">maxshape</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">tuple</span><span style="color:#24292E;">(shape_list), </span><span style="color:#E36209;">dtype</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&#39;int64&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">                          </span><span style="color:#E36209;">chunks</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">tuple</span><span style="color:#24292E;">(data_shapes[dset_name]), </span><span style="color:#E36209;">compression</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;gzip&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="attibute" tabindex="-1"><a class="header-anchor" href="#attibute" aria-hidden="true">#</a> Attibute</h4><p>向 group 或者 dataset 添加 attibute。通常为 64kb 以下的小数据</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="shiki github-light" style="background-color:#fff;" tabindex="0"><code><span class="line"><span style="color:#24292E;">dset.attrs[</span><span style="color:#032F62;">&quot;myAttr1&quot;</span><span style="color:#24292E;">] </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> [</span><span style="color:#005CC5;">100</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">200</span><span style="color:#24292E;">]</span></span>
<span class="line"><span style="color:#24292E;">dset.attrs.get(</span><span style="color:#032F62;">&quot;myAttr1&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="其他" tabindex="-1"><a class="header-anchor" href="#其他" aria-hidden="true">#</a> 其他</h4><p>对于字符串内容，需要定义特殊类型</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="shiki github-light" style="background-color:#fff;" tabindex="0"><code><span class="line"><span style="color:#24292E;">f </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> h5py.File(</span><span style="color:#032F62;">&#39;foo.hdf5&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#D73A49;">&gt;&gt;&gt;</span><span style="color:#24292E;"> dt </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> h5py.string_dtype(</span><span style="color:#E36209;">encoding</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&#39;utf-8&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#D73A49;">&gt;&gt;&gt;</span><span style="color:#24292E;"> ds </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> f.create_dataset(</span><span style="color:#032F62;">&#39;VLDS&#39;</span><span style="color:#24292E;">, (</span><span style="color:#005CC5;">100</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">100</span><span style="color:#24292E;">), </span><span style="color:#E36209;">dtype</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">dt)</span></span>
<span class="line"><span style="color:#D73A49;">&gt;&gt;&gt;</span><span style="color:#24292E;"> ds.dtype.kind</span></span>
<span class="line"><span style="color:#032F62;">&#39;O&#39;</span></span>
<span class="line"><span style="color:#D73A49;">&gt;&gt;&gt;</span><span style="color:#24292E;"> h5py.check_string_dtype(ds.dtype)</span></span>
<span class="line"><span style="color:#24292E;">string_info(</span><span style="color:#E36209;">encoding</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&#39;utf-8&#39;</span><span style="color:#24292E;">, </span><span style="color:#E36209;">length</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">None</span><span style="color:#24292E;">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,45),u=s("li",null,[s("p",null,"顺序读取 h5df 数据库的速度会比随机读取快很多！快将近 40%")],-1),h=s("li",null,[s("p",null,[a("使用 H5DF 配合 dataloader 的时候，建议添加 dataloader "),s("code",null,"num_workers > 0"),a("，个人测试可以提升最高 5%的训练速度。")])],-1),E=s("li",null,[s("p",null,"如果需要 shuffle 的话，建议同时使用 batchsampler，因为 h5df 的随机访问效率能够被提高。")],-1),v={href:"https://discuss.pytorch.org/t/dataloader-when-num-worker-0-there-is-bug/25643/14",target:"_blank",rel:"noopener noreferrer"},b=e(`<li><p>group 的访问也是需要时间的（命名空间上的搜索需要花费大量时间），因此如果要遍历 dataset 的话，最好直接采用变量引用到 dataset，而非在 group 基础上使用 group[&#39;dset&#39;] 来遍历。如：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="shiki github-light" style="background-color:#fff;" tabindex="0"><code><span class="line"><span style="color:#6A737D;"># 建议这样写，节省命名空间搜索</span></span>
<span class="line"><span style="color:#005CC5;">self</span><span style="color:#24292E;">.feature_dataset </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> h5py.File(</span><span style="color:#005CC5;">self</span><span style="color:#24292E;">.h5df_path, </span><span style="color:#032F62;">&#39;r&#39;</span><span style="color:#24292E;">, </span><span style="color:#E36209;">swmr</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">True</span><span style="color:#24292E;">)[feature_group_name]</span></span>
<span class="line"><span style="color:#24292E;">features </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">self</span><span style="color:#24292E;">.feature_dataset[</span><span style="color:#005CC5;">self</span><span style="color:#24292E;">.sample_ids[index]]</span></span>
<span class="line"><span style="color:#24292E;">data </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&#39;input_ids&#39;</span><span style="color:#24292E;">: features[</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">],</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&#39;input_mask&#39;</span><span style="color:#24292E;">: features[</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">],</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&#39;segment_ids&#39;</span><span style="color:#24292E;">: features[</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">],</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>上面方式会比下面方式速度快很多：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="shiki github-light" style="background-color:#fff;" tabindex="0"><code><span class="line"><span style="color:#005CC5;">self</span><span style="color:#24292E;">.dataset </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> h5py.File(</span><span style="color:#005CC5;">self</span><span style="color:#24292E;">.h5df_path, </span><span style="color:#032F62;">&#39;r&#39;</span><span style="color:#24292E;">, </span><span style="color:#E36209;">swmr</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">True</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">features </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">self</span><span style="color:#24292E;">.dataset[feature_group_name][</span><span style="color:#005CC5;">self</span><span style="color:#24292E;">.sample_ids[index]]</span></span>
<span class="line"><span style="color:#24292E;">data </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&#39;input_ids&#39;</span><span style="color:#24292E;">: features[</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">],</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&#39;input_mask&#39;</span><span style="color:#24292E;">: features[</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">],</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&#39;segment_ids&#39;</span><span style="color:#24292E;">: features[</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">],</span></span>
<span class="line"><span style="color:#24292E;">} </span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li>`,1);function m(g,f){const n=o("ExternalLinkIcon");return t(),r("div",null,[i,s("p",null,[s("a",d,[a("HDF5 官方文档链接"),l(n)]),a("，以下对 H5PY 基础操作进行总结。安装：")]),y,s("ul",null,[u,h,E,s("li",null,[s("p",null,[a("似乎 h5df 1.10 的多线程处理效率更好？"),s("a",v,[a("h5df dataloader 相关"),l(n)])])]),b])])}const k=p(c,[["render",m],["__file","笔记h5df.html.vue"]]);export{k as default};
