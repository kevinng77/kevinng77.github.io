import{_ as e}from"./plugin-vue_export-helper-c27b6911.js";import{r as o,o as c,c as t,a as s,b as n,d as l,f as p}from"./app-c5365da1.js";const r={},i=s("h1",{id:"fastapi",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#fastapi","aria-hidden":"true"},"#"),n(" FastAPI")],-1),y={href:"https://fastapi.tiangolo.com/",target:"_blank",rel:"noopener noreferrer"},d=p(`<blockquote><p>FastAPI 是一个用于构建 API 的现代、快速（高性能）的 web 框架，使用 Python 3.6+ 并基于标准的 Python 类型提示。</p><p>个人感受到的 FastAPI 使用特点：</p><ol><li>使用模型统一对接受以及输出数据进行格式管理。</li><li>自动类型检验，以及完善的检验流程和错误信息处理方式。</li></ol></blockquote><h2 id="快速开始" tabindex="-1"><a class="header-anchor" href="#快速开始" aria-hidden="true">#</a> 快速开始</h2><h3 id="环境安装" tabindex="-1"><a class="header-anchor" href="#环境安装" aria-hidden="true">#</a> 环境安装</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="shiki github-light" style="background-color:#fff;" tabindex="0"><code><span class="line"><span style="color:#6F42C1;">pip</span><span style="color:#24292E;"> </span><span style="color:#032F62;">install</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;fastapi[all]&quot;</span></span>
<span class="line"><span style="color:#6F42C1;">pip</span><span style="color:#24292E;"> </span><span style="color:#032F62;">install</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;uvicorn[standard]&quot;</span><span style="color:#24292E;">  </span><span style="color:#6A737D;"># 安装 ASGI 服务器</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="快速案例" tabindex="-1"><a class="header-anchor" href="#快速案例" aria-hidden="true">#</a> 快速案例</h3><div class="language-python line-numbers-mode" data-ext="py"><pre class="shiki github-light" style="background-color:#fff;" tabindex="0"><code><span class="line"><span style="color:#6A737D;"># main.py</span></span>
<span class="line"><span style="color:#D73A49;">from</span><span style="color:#24292E;"> typing </span><span style="color:#D73A49;">import</span><span style="color:#24292E;"> Union</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">from</span><span style="color:#24292E;"> fastapi </span><span style="color:#D73A49;">import</span><span style="color:#24292E;"> FastAPI</span></span>
<span class="line"><span style="color:#D73A49;">from</span><span style="color:#24292E;"> pydantic </span><span style="color:#D73A49;">import</span><span style="color:#24292E;"> BaseModel</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">app </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> FastAPI()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Item</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">BaseModel</span><span style="color:#24292E;">):</span></span>
<span class="line"><span style="color:#24292E;">    name: </span><span style="color:#005CC5;">str</span></span>
<span class="line"><span style="color:#24292E;">    price: </span><span style="color:#005CC5;">float</span></span>
<span class="line"><span style="color:#24292E;">    is_offer: Union[</span><span style="color:#005CC5;">bool</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">None</span><span style="color:#24292E;">] </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">None</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6F42C1;">@app.get</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;/&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#D73A49;">async</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">def</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">read_root</span><span style="color:#24292E;">():</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> {</span><span style="color:#032F62;">&quot;Hello&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;World&quot;</span><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># 路径参数 item_id 的值将作为参数 item_id 传递给你的函数。</span></span>
<span class="line"><span style="color:#6F42C1;">@app.get</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;/items/</span><span style="color:#005CC5;">{item_id}</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#D73A49;">async</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">def</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">read_item</span><span style="color:#24292E;">(item_id: </span><span style="color:#005CC5;">int</span><span style="color:#24292E;">, q: Union[</span><span style="color:#005CC5;">str</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">None</span><span style="color:#24292E;">] </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">None</span><span style="color:#24292E;">):</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;"># 提供参数类型后 item_id 会被自动解析成 int 类型</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> {</span><span style="color:#032F62;">&quot;item_id&quot;</span><span style="color:#24292E;">: item_id, </span><span style="color:#032F62;">&quot;q&quot;</span><span style="color:#24292E;">: q}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6F42C1;">@app.put</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;/items/</span><span style="color:#005CC5;">{item_id}</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#D73A49;">def</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">update_item</span><span style="color:#24292E;">(item_id: </span><span style="color:#005CC5;">int</span><span style="color:#24292E;">, item: Item):</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> {</span><span style="color:#032F62;">&quot;item_name&quot;</span><span style="color:#24292E;">: item.name, </span><span style="color:#032F62;">&quot;item_id&quot;</span><span style="color:#24292E;">: item_id}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container info"><p class="hint-container-title">相关信息</p><p>注意点：</p><ul><li>如果你的代码里会出现 <code>async</code> / <code>await</code>，请使用 <code>async def</code></li><li>提供参数类型后 <code>item_id</code> 会被自动解析成 <code>int</code> 类型，如果路径传参错误，那么会返回一个报错结果。</li><li>路径参数 <code>item_id</code> 的值将作为参数 <code>item_id</code> 传递给你的函数。</li></ul></div><p>开始服务，以下替换 main 为你的 python 文件名称。修改 app 为 FastAPI 实例名称。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="shiki github-light" style="background-color:#fff;" tabindex="0"><code><span class="line"><span style="color:#6F42C1;">uvicorn</span><span style="color:#24292E;"> </span><span style="color:#032F62;">main:app</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--reload</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>对于设置好的 get 服务，可以通过直接访问 url 来测试： http://127.0.0.1:8000/items/5?q=somequery</p><h3 id="fastapi-特性" tabindex="-1"><a class="header-anchor" href="#fastapi-特性" aria-hidden="true">#</a> FastAPI 特性</h3><h4 id="交互式文档界面" tabindex="-1"><a class="header-anchor" href="#交互式文档界面" aria-hidden="true">#</a> 交互式文档界面</h4><p>访问 http://127.0.0.1:8000/docs 或 http://127.0.0.1:8000/redoc，能够看到 fastapi 自动整理好的 api 信息，包括结构数据结构，回复内容格式等信息。</p><p>在界面中，可以对你写好的 API 进行在线测试。</p><h4 id="编辑器支持" tabindex="-1"><a class="header-anchor" href="#编辑器支持" aria-hidden="true">#</a> 编辑器支持</h4><p>FastAPI 基于 Pydanic 和 Starlette，因此当你在文档中定义了结构体后，在 FastAPI 的任意地方都能支持 <strong>数据类型校验</strong> 以及 <strong>自动补全</strong> ：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="shiki github-light" style="background-color:#fff;" tabindex="0"><code><span class="line"><span style="color:#D73A49;">from</span><span style="color:#24292E;"> pydantic </span><span style="color:#D73A49;">import</span><span style="color:#24292E;"> BaseModel</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Item</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">BaseModel</span><span style="color:#24292E;">):</span></span>
<span class="line"><span style="color:#24292E;">    name: </span><span style="color:#005CC5;">str</span></span>
<span class="line"><span style="color:#24292E;">    price: </span><span style="color:#005CC5;">float</span></span>
<span class="line"><span style="color:#24292E;">    is_offer: Union[</span><span style="color:#005CC5;">bool</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">None</span><span style="color:#24292E;">] </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">None</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>基于 <strong>Starlette</strong> ，可以使用一些内容：</p><ul><li><strong>支持 WebSocket</strong> 。</li><li><strong>支持 GraphQL</strong> 。</li><li>后台任务处理。</li><li>Startup 和 shutdown 事件。</li><li>测试客户端基于 HTTPX。</li><li><strong>CORS</strong> , GZip, 静态文件, 流响应。</li><li>支持 <strong>Session 和 Cookie</strong> 。</li><li>100% 测试覆盖率。</li><li>代码库 100% 类型注释。</li></ul><h2 id="教程梳理" tabindex="-1"><a class="header-anchor" href="#教程梳理" aria-hidden="true">#</a> 教程梳理</h2><h3 id="通用-api" tabindex="-1"><a class="header-anchor" href="#通用-api" aria-hidden="true">#</a> 通用 API</h3><div class="language-python line-numbers-mode" data-ext="py"><pre class="shiki github-light" style="background-color:#fff;" tabindex="0"><code><span class="line"><span style="color:#D73A49;">from</span><span style="color:#24292E;"> typing </span><span style="color:#D73A49;">import</span><span style="color:#24292E;"> Union</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">from</span><span style="color:#24292E;"> fastapi </span><span style="color:#D73A49;">import</span><span style="color:#24292E;"> FastAPI</span></span>
<span class="line"><span style="color:#D73A49;">from</span><span style="color:#24292E;"> pydantic </span><span style="color:#D73A49;">import</span><span style="color:#24292E;"> BaseModel</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6F42C1;">@app.get</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;/items/10086&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#D73A49;">async</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">def</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">read_item</span><span style="color:#24292E;">():</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> {</span><span style="color:#032F62;">&quot;item_id&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;hello&quot;</span><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># 路径参数 item_id 的值将作为参数 item_id 传递给你的函数。</span></span>
<span class="line"><span style="color:#6F42C1;">@app.get</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;/items/</span><span style="color:#005CC5;">{item_id}</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#D73A49;">async</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">def</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">read_item</span><span style="color:#24292E;">(item_id: </span><span style="color:#005CC5;">int</span><span style="color:#24292E;">, q: Union[</span><span style="color:#005CC5;">str</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">None</span><span style="color:#24292E;">] </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">None</span><span style="color:#24292E;">):</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;"># 提供参数类型后 item_id 会被自动解析成 int 类型</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> {</span><span style="color:#032F62;">&quot;item_id&quot;</span><span style="color:#24292E;">: item_id, </span><span style="color:#032F62;">&quot;q&quot;</span><span style="color:#24292E;">: q}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6F42C1;">@app.post</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;/items/&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#E36209;">response_model</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">Item,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#E36209;">summary</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;Create an item&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#E36209;">description</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;Create an item with all the information, name, description, price, tax and a set of unique tags&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#E36209;">response_description</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;The created item&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#032F62;">    This is a doc string.</span></span>
<span class="line"><span style="color:#032F62;">    Create an item with all the information:</span></span>
<span class="line"></span>
<span class="line"><span style="color:#032F62;">    -  **name** : each item must have a name</span></span>
<span class="line"><span style="color:#032F62;">    -  **description** : a long description</span></span>
<span class="line"><span style="color:#032F62;">    -  **price** : required</span></span>
<span class="line"><span style="color:#032F62;">    -  **tax** : if the item doesn&#39;t have tax, you can omit this</span></span>
<span class="line"><span style="color:#032F62;">    -  **tags** : a set of unique tag strings for this item</span></span>
<span class="line"><span style="color:#032F62;">    &quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#D73A49;">async</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">def</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">create_item</span><span style="color:#24292E;">(item: Item):</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> item</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>API 元数据：</strong> 可以通过 <code>summary</code> 和 <code>description</code> 来添加 API 相关信息。当然也可以通过函数常用的 <code>docstring</code> 来为函数写注释信息。</p><p><strong>数据类型校验：</strong> 对于上面的例子，如果发送请求到 <code>http://127.0.0.1:8000/items/6.1?q=somequery</code></p><p><strong>自动类型转换：</strong> 函数参数部分声明了 <code>item_id: int</code>，提供参数类型后 <code>item_id</code> 会被自动解析成 <code>int</code> 类型；如果是 <code>item_id: str</code>，那么 <code>item_id</code> 就会被解析成字符串</p><p><strong>API 定义顺序很重要：</strong> 如上例子， <code>/items/10086</code> 必须在 <code>items/{item_id}</code> 之前提供。</p><p><strong>查询参数：</strong> 声明不属于路径参数的其他函数参数时，它们将被自动解释为&quot;查询字符串&quot;参数，需要通过 <code>http://127.0.0.1:8000/items/?skip=0&amp;limit=10</code> 方式来访问额外参数</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="shiki github-light" style="background-color:#fff;" tabindex="0"><code><span class="line"><span style="color:#6F42C1;">@app.get</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;/items/&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#D73A49;">async</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">def</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">read_item</span><span style="color:#24292E;">(skip: </span><span style="color:#005CC5;">int</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">, limit: </span><span style="color:#005CC5;">int</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">10</span><span style="color:#24292E;">):</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> fake_items_db[skip : skip </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> limit]</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>针对可选参数，请使用 <code>q: Union[str, None] = None</code> 来统一进行数据格式声明。</p><h3 id="api-额外功能" tabindex="-1"><a class="header-anchor" href="#api-额外功能" aria-hidden="true">#</a> API 额外功能</h3><p>参数选项</p><p>如下，当我们希望用户请求的参数在一个可选的范围内，可以用 Enum 的方式来定义选项。当发送请求 <code>/models/{model_name}</code> 中的 <code>model_name</code> 不在枚举的 <code>ModelName</code> 中时，fastAPI 会进行参数检验，并返回 <code>value is not a valid enumeration member; permitted: &#39;alexnet&#39;, &#39;resnet&#39;, &#39;lenet&#39;</code>。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="shiki github-light" style="background-color:#fff;" tabindex="0"><code><span class="line"><span style="color:#D73A49;">from</span><span style="color:#24292E;"> enum </span><span style="color:#D73A49;">import</span><span style="color:#24292E;"> Enum</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">from</span><span style="color:#24292E;"> fastapi </span><span style="color:#D73A49;">import</span><span style="color:#24292E;"> FastAPI</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">ModelName</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">str</span><span style="color:#24292E;">, </span><span style="color:#6F42C1;">Enum</span><span style="color:#24292E;">):</span></span>
<span class="line"><span style="color:#24292E;">    alexnet </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;alexnet&quot;</span></span>
<span class="line"><span style="color:#24292E;">    resnet </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;resnet&quot;</span></span>
<span class="line"><span style="color:#24292E;">    lenet </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;lenet&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">app </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> FastAPI()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6F42C1;">@app.get</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;/models/</span><span style="color:#005CC5;">{model_name}</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#D73A49;">async</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">def</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">get_model</span><span style="color:#24292E;">(model_name: ModelName):</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;"># 路径参数的值将是一个枚举成员</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> model_name </span><span style="color:#D73A49;">is</span><span style="color:#24292E;"> ModelName.alexnet:</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> {</span><span style="color:#032F62;">&quot;model_name&quot;</span><span style="color:#24292E;">: model_name, </span><span style="color:#032F62;">&quot;message&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;Deep Learning FTW!&quot;</span><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;"># 用 .value 获取值</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> model_name.value </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;lenet&quot;</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> {</span><span style="color:#032F62;">&quot;model_name&quot;</span><span style="color:#24292E;">: model_name, </span><span style="color:#032F62;">&quot;message&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;LeCNN all the images&quot;</span><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> {</span><span style="color:#032F62;">&quot;model_name&quot;</span><span style="color:#24292E;">: model_name, </span><span style="color:#032F62;">&quot;message&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;Have some residuals&quot;</span><span style="color:#24292E;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="请求体-接收-json-数据" tabindex="-1"><a class="header-anchor" href="#请求体-接收-json-数据" aria-hidden="true">#</a> 请求体 接收 JSON 数据</h3><p>通过 <code>BaseModel</code> 来定义接受的请求体格式。如下定义方式，请求体必须包括 <code>name</code> 和 <code>price</code> 字段</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="shiki github-light" style="background-color:#fff;" tabindex="0"><code><span class="line"><span style="color:#D73A49;">from</span><span style="color:#24292E;"> pydantic </span><span style="color:#D73A49;">import</span><span style="color:#24292E;"> BaseModel</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Item</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">BaseModel</span><span style="color:#24292E;">):</span></span>
<span class="line"><span style="color:#24292E;">    name: </span><span style="color:#005CC5;">str</span></span>
<span class="line"><span style="color:#24292E;">    price: </span><span style="color:#005CC5;">float</span></span>
<span class="line"><span style="color:#24292E;">    is_offer: Union[</span><span style="color:#005CC5;">bool</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">None</span><span style="color:#24292E;">] </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">None</span></span>
<span class="line"><span style="color:#24292E;">    </span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Config</span><span style="color:#24292E;">:  </span><span style="color:#6A737D;"># 可以选择添加元数据</span></span>
<span class="line"><span style="color:#24292E;">        schema_extra </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#032F62;">&quot;example&quot;</span><span style="color:#24292E;">: {</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#032F62;">&quot;name&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;Foo&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#032F62;">&quot;description&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;A very nice Item&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#032F62;">&quot;price&quot;</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">35.4</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#032F62;">&quot;tax&quot;</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">3.2</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">            }</span></span>
<span class="line"><span style="color:#24292E;">        }</span></span>
<span class="line"><span style="color:#6F42C1;">@app.post</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;/post/test&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#D73A49;">def</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">update_item</span><span style="color:#24292E;">(item: Item):</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> {</span><span style="color:#032F62;">&quot;item_name&quot;</span><span style="color:#24292E;">: item.name}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="类型转换" tabindex="-1"><a class="header-anchor" href="#类型转换" aria-hidden="true">#</a> 类型转换</h4><p>如果你的数据中包含一些如 <code>datetime</code> 的与 JSON 不兼容的数据类型，那么可以使用 <code>jsonable_encoder</code> 来进行处理。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="shiki github-light" style="background-color:#fff;" tabindex="0"><code><span class="line"><span style="color:#D73A49;">from</span><span style="color:#24292E;"> fastapi.encoders </span><span style="color:#D73A49;">import</span><span style="color:#24292E;"> jsonable_encoder</span></span>
<span class="line"><span style="color:#24292E;">fake_db </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {}</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Item</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">BaseModel</span><span style="color:#24292E;">):</span></span>
<span class="line"><span style="color:#24292E;">    title: </span><span style="color:#005CC5;">str</span></span>
<span class="line"><span style="color:#24292E;">    timestamp: datetime</span></span>
<span class="line"><span style="color:#24292E;">    description: </span><span style="color:#005CC5;">str</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">|</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">None</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">None</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">app </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> FastAPI()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6F42C1;">@app.put</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;/items/</span><span style="color:#005CC5;">{id}</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#D73A49;">def</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">update_item</span><span style="color:#24292E;">(id: </span><span style="color:#005CC5;">str</span><span style="color:#24292E;">, item: Item):</span></span>
<span class="line"><span style="color:#24292E;">    json_compatible_item_data </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> jsonable_encoder(item)</span></span>
<span class="line"><span style="color:#24292E;">    fake_db[</span><span style="color:#005CC5;">id</span><span style="color:#24292E;">] </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> json_compatible_item_data</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="参数校验" tabindex="-1"><a class="header-anchor" href="#参数校验" aria-hidden="true">#</a> 参数校验</h4><p>使用 query 对输入的字符串进行长度校验，或者要求他满足正则表达式。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="shiki github-light" style="background-color:#fff;" tabindex="0"><code><span class="line"><span style="color:#D73A49;">from</span><span style="color:#24292E;"> typing </span><span style="color:#D73A49;">import</span><span style="color:#24292E;"> Union</span></span>
<span class="line"><span style="color:#D73A49;">from</span><span style="color:#24292E;"> fastapi </span><span style="color:#D73A49;">import</span><span style="color:#24292E;"> FastAPI, Query</span></span>
<span class="line"><span style="color:#24292E;">app </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> FastAPI()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6F42C1;">@app.get</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;/items/&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#D73A49;">async</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">def</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">read_items</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    q: Union[</span><span style="color:#005CC5;">str</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">None</span><span style="color:#24292E;">] </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> Query(</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#E36209;">default</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">None</span><span style="color:#24292E;">, </span><span style="color:#E36209;">min_length</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">3</span><span style="color:#24292E;">, </span><span style="color:#E36209;">max_length</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">50</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#E36209;">title</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;Query string&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#E36209;">description</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;Query string for the items to search in the database that have a good match&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#E36209;">regex</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;^fixedquery$&quot;</span></span>
<span class="line"><span style="color:#24292E;">    )</span></span>
<span class="line"><span style="color:#24292E;">):</span></span>
<span class="line"><span style="color:#24292E;">    results </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span><span style="color:#032F62;">&quot;items&quot;</span><span style="color:#24292E;">: [{</span><span style="color:#032F62;">&quot;item_id&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;Foo&quot;</span><span style="color:#24292E;">}, {</span><span style="color:#032F62;">&quot;item_id&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;Bar&quot;</span><span style="color:#24292E;">}]}</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> q:</span></span>
<span class="line"><span style="color:#24292E;">        results.update({</span><span style="color:#032F62;">&quot;q&quot;</span><span style="color:#24292E;">: q})</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> results</span></span>
<span class="line"></span></code></pre><div class="highlight-lines"><br><br><br><br><br><br><br><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><br><br><br><br><br></div><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>同样的 query 也支持对数值参数进行大小校验，可以使用 <code>size: float = Query(gt=0, lt=10.5),</code></p><p>你可能会更喜欢统一在请求体中对参数进行管理，可以使用 <code>Field</code>：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="shiki github-light" style="background-color:#fff;" tabindex="0"><code><span class="line"><span style="color:#D73A49;">from</span><span style="color:#24292E;"> typing </span><span style="color:#D73A49;">import</span><span style="color:#24292E;"> Union</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">from</span><span style="color:#24292E;"> fastapi </span><span style="color:#D73A49;">import</span><span style="color:#24292E;"> Body, FastAPI</span></span>
<span class="line"><span style="color:#D73A49;">from</span><span style="color:#24292E;"> pydantic </span><span style="color:#D73A49;">import</span><span style="color:#24292E;"> BaseModel, Field</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">app </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> FastAPI()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Item</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">BaseModel</span><span style="color:#24292E;">):</span></span>
<span class="line"><span style="color:#24292E;">    name: </span><span style="color:#005CC5;">str</span></span>
<span class="line"><span style="color:#24292E;">    description: Union[</span><span style="color:#005CC5;">str</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">None</span><span style="color:#24292E;">] </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> Field(</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#E36209;">default</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">None</span><span style="color:#24292E;">, </span><span style="color:#E36209;">title</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;The description of the item&quot;</span><span style="color:#24292E;">, </span><span style="color:#E36209;">max_length</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">300</span></span>
<span class="line"><span style="color:#24292E;">    )</span></span>
<span class="line"><span style="color:#24292E;">    price: </span><span style="color:#005CC5;">float</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> Field(</span><span style="color:#E36209;">gt</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">, </span><span style="color:#E36209;">description</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;The price must be greater than zero&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">    tax: Union[</span><span style="color:#005CC5;">float</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">None</span><span style="color:#24292E;">] </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">None</span></span>
<span class="line"></span></code></pre><div class="highlight-lines"><br><br><br><br><br><br><br><br><br><br><div class="highlight-line"> </div><br><br><br></div><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>针对 JSON 嵌套情况，可以使用嵌套的 Model 来统一定义：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="shiki github-light" style="background-color:#fff;" tabindex="0"><code><span class="line"><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Image</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">BaseModel</span><span style="color:#24292E;">):</span></span>
<span class="line"><span style="color:#24292E;">    url: </span><span style="color:#005CC5;">str</span></span>
<span class="line"><span style="color:#24292E;">    name: </span><span style="color:#005CC5;">str</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Item</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">BaseModel</span><span style="color:#24292E;">):</span></span>
<span class="line"><span style="color:#24292E;">    name: </span><span style="color:#005CC5;">str</span></span>
<span class="line"><span style="color:#24292E;">    description: Union[</span><span style="color:#005CC5;">str</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">None</span><span style="color:#24292E;">] </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">None</span></span>
<span class="line"><span style="color:#24292E;">    price: </span><span style="color:#005CC5;">float</span></span>
<span class="line"><span style="color:#24292E;">    tax: Union[</span><span style="color:#005CC5;">float</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">None</span><span style="color:#24292E;">] </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">None</span></span>
<span class="line"><span style="color:#24292E;">    tags: Set[</span><span style="color:#005CC5;">str</span><span style="color:#24292E;">] </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">set</span><span style="color:#24292E;">()</span></span>
<span class="line"><span style="color:#24292E;">    image: Union[Image, </span><span style="color:#005CC5;">None</span><span style="color:#24292E;">] </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">None</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>除此外，<code>pydantic</code> 还提供其他参数类型来方便我们进行校验，如 <code>HttpUrl</code>。同时也可以使用 python 的 <code>datetime</code>， <code>UUID</code> 等数据类型。</p><h4 id="返回结果" tabindex="-1"><a class="header-anchor" href="#返回结果" aria-hidden="true">#</a> 返回结果</h4><p>同样可以对返回结果进行定义</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="shiki github-light" style="background-color:#fff;" tabindex="0"><code><span class="line"><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Item</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">BaseModel</span><span style="color:#24292E;">):</span></span>
<span class="line"><span style="color:#24292E;">    name: </span><span style="color:#005CC5;">str</span></span>
<span class="line"><span style="color:#24292E;">    description: Union[</span><span style="color:#005CC5;">str</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">None</span><span style="color:#24292E;">] </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">None</span></span>
<span class="line"><span style="color:#24292E;">    price: </span><span style="color:#005CC5;">float</span></span>
<span class="line"><span style="color:#24292E;">    tax: Union[</span><span style="color:#005CC5;">float</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">None</span><span style="color:#24292E;">] </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">None</span></span>
<span class="line"><span style="color:#24292E;">    tags: List[</span><span style="color:#005CC5;">str</span><span style="color:#24292E;">] </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> []</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6F42C1;">@app.post</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;/items/&quot;</span><span style="color:#24292E;">, </span><span style="color:#E36209;">response_model</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">Item)</span></span>
<span class="line"><span style="color:#D73A49;">async</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">def</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">create_item</span><span style="color:#24292E;">(item: Item) -&gt; Any:</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> item</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6F42C1;">@app.get</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;/items/&quot;</span><span style="color:#24292E;">, </span><span style="color:#E36209;">response_model</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">List[Item])</span></span>
<span class="line"><span style="color:#D73A49;">async</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">def</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">read_items</span><span style="color:#24292E;">() -&gt; Any:</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> [</span></span>
<span class="line"><span style="color:#24292E;">        {</span><span style="color:#032F62;">&quot;name&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;Portal Gun&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;price&quot;</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">42.0</span><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;">        {</span><span style="color:#032F62;">&quot;name&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;Plumbus&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;price&quot;</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">32.0</span><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;">    ]</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="接收表单数据" tabindex="-1"><a class="header-anchor" href="#接收表单数据" aria-hidden="true">#</a> 接收表单数据</h3><div class="language-python line-numbers-mode" data-ext="py"><pre class="shiki github-light" style="background-color:#fff;" tabindex="0"><code><span class="line"><span style="color:#D73A49;">from</span><span style="color:#24292E;"> fastapi </span><span style="color:#D73A49;">import</span><span style="color:#24292E;"> FastAPI, Form</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">app </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> FastAPI()</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#6F42C1;">@app.post</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;/login/&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#D73A49;">async</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">def</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">login</span><span style="color:#24292E;">(username: </span><span style="color:#005CC5;">str</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> Form(), password: </span><span style="color:#005CC5;">str</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> Form()):</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> {</span><span style="color:#032F62;">&quot;username&quot;</span><span style="color:#24292E;">: username}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="接收请求文件" tabindex="-1"><a class="header-anchor" href="#接收请求文件" aria-hidden="true">#</a> 接收请求文件</h3><div class="language-python line-numbers-mode" data-ext="py"><pre class="shiki github-light" style="background-color:#fff;" tabindex="0"><code><span class="line"><span style="color:#D73A49;">from</span><span style="color:#24292E;"> fastapi </span><span style="color:#D73A49;">import</span><span style="color:#24292E;"> FastAPI, File, UploadFile</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">app </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> FastAPI()</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#6F42C1;">@app.post</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;/files/&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#D73A49;">async</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">def</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">create_file</span><span style="color:#24292E;">(file: </span><span style="color:#005CC5;">bytes</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> File()):</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> {</span><span style="color:#032F62;">&quot;file_size&quot;</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">len</span><span style="color:#24292E;">(</span><span style="color:#E36209;">file</span><span style="color:#24292E;">)}</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#6F42C1;">@app.post</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;/uploadfile/&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#D73A49;">async</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">def</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">create_upload_file</span><span style="color:#24292E;">(file: UploadFile):</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;"># 异步状态下，使用以下方式获取文件内容</span></span>
<span class="line"><span style="color:#24292E;">    contents </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">await</span><span style="color:#24292E;"> </span><span style="color:#E36209;">file</span><span style="color:#24292E;">.read()</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;"># 同步状态下用 contents = file.file.read()</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> {</span><span style="color:#032F62;">&quot;filename&quot;</span><span style="color:#24292E;">: </span><span style="color:#E36209;">file</span><span style="color:#24292E;">.filename}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>多文件操作</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="shiki github-light" style="background-color:#fff;" tabindex="0"><code><span class="line"><span style="color:#6F42C1;">@app.post</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;/files/&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#D73A49;">async</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">def</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">create_files</span><span style="color:#24292E;">(files: list[</span><span style="color:#005CC5;">bytes</span><span style="color:#24292E;">] </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> File()):</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> {</span><span style="color:#032F62;">&quot;file_sizes&quot;</span><span style="color:#24292E;">: [</span><span style="color:#005CC5;">len</span><span style="color:#24292E;">(</span><span style="color:#E36209;">file</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">for</span><span style="color:#24292E;"> </span><span style="color:#E36209;">file</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">in</span><span style="color:#24292E;"> files]}</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#6F42C1;">@app.post</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;/uploadfiles/&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#D73A49;">async</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">def</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">create_upload_files</span><span style="color:#24292E;">(files: list[UploadFile]):</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> {</span><span style="color:#032F62;">&quot;filenames&quot;</span><span style="color:#24292E;">: [</span><span style="color:#E36209;">file</span><span style="color:#24292E;">.filename </span><span style="color:#D73A49;">for</span><span style="color:#24292E;"> </span><span style="color:#E36209;">file</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">in</span><span style="color:#24292E;"> files]}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container info"><p class="hint-container-title">相关信息</p><p>在同一个请求中接收数据和文件时，应同时使用 <code>File</code> 和 <code>Form</code>。</p></div><h3 id="依赖项" tabindex="-1"><a class="header-anchor" href="#依赖项" aria-hidden="true">#</a> 依赖项</h3><p>依赖项类似于类型注释，能够在过个接口需要使用同样结构数据时使用功能。依赖项能够套娃使用。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="shiki github-light" style="background-color:#fff;" tabindex="0"><code><span class="line"><span style="color:#D73A49;">from</span><span style="color:#24292E;"> typing </span><span style="color:#D73A49;">import</span><span style="color:#24292E;"> Union</span></span>
<span class="line"><span style="color:#D73A49;">from</span><span style="color:#24292E;"> fastapi </span><span style="color:#D73A49;">import</span><span style="color:#24292E;"> Cookie, Depends, FastAPI</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">app </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> FastAPI()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">def</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">query_extractor</span><span style="color:#24292E;">(q: Union[</span><span style="color:#005CC5;">str</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">None</span><span style="color:#24292E;">] </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">None</span><span style="color:#24292E;">):</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> q</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">def</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">query_or_cookie_extractor</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    q: </span><span style="color:#005CC5;">str</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> Depends(query_extractor),</span></span>
<span class="line"><span style="color:#24292E;">    last_query: Union[</span><span style="color:#005CC5;">str</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">None</span><span style="color:#24292E;">] </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> Cookie(</span><span style="color:#E36209;">default</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">None</span><span style="color:#24292E;">),</span></span>
<span class="line"><span style="color:#24292E;">):</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">not</span><span style="color:#24292E;"> q:</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> last_query</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> q</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#6F42C1;">@app.get</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;/items/&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#D73A49;">async</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">def</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">read_query</span><span style="color:#24292E;">(query_or_default: </span><span style="color:#005CC5;">str</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> Depends(query_or_cookie_extractor)):</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> {</span><span style="color:#032F62;">&quot;q_or_cookie&quot;</span><span style="color:#24292E;">: query_or_default}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>当然除了函数外，也可以使用类作为依赖项：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="shiki github-light" style="background-color:#fff;" tabindex="0"><code><span class="line"><span style="color:#D73A49;">from</span><span style="color:#24292E;"> fastapi </span><span style="color:#D73A49;">import</span><span style="color:#24292E;"> Depends, FastAPI</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">app </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> FastAPI()</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">fake_items_db </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> [{</span><span style="color:#032F62;">&quot;item_name&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;Foo&quot;</span><span style="color:#24292E;">}, {</span><span style="color:#032F62;">&quot;item_name&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;Bar&quot;</span><span style="color:#24292E;">}, {</span><span style="color:#032F62;">&quot;item_name&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;Baz&quot;</span><span style="color:#24292E;">}]</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">CommonQueryParams</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">def</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">__init__</span><span style="color:#24292E;">(self, q: </span><span style="color:#005CC5;">str</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">|</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">None</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">None</span><span style="color:#24292E;">, skip: </span><span style="color:#005CC5;">int</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">, limit: </span><span style="color:#005CC5;">int</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">100</span><span style="color:#24292E;">):</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#005CC5;">self</span><span style="color:#24292E;">.q </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> q</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#005CC5;">self</span><span style="color:#24292E;">.skip </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> skip</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#005CC5;">self</span><span style="color:#24292E;">.limit </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> limit</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#6F42C1;">@app.get</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;/items/&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#D73A49;">async</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">def</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">read_items</span><span style="color:#24292E;">(commons: CommonQueryParams </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> Depends(CommonQueryParams)):</span></span>
<span class="line"><span style="color:#24292E;">    response </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {}</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> commons.q:</span></span>
<span class="line"><span style="color:#24292E;">        response.update({</span><span style="color:#032F62;">&quot;q&quot;</span><span style="color:#24292E;">: commons.q})</span></span>
<span class="line"><span style="color:#24292E;">    items </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> fake_items_db[commons.skip : commons.skip </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> commons.limit]</span></span>
<span class="line"><span style="color:#24292E;">    response.update({</span><span style="color:#032F62;">&quot;items&quot;</span><span style="color:#24292E;">: items})</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> response</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>依赖项不一定需要进行参数传递，可以用在装饰器中，进行依赖管理。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="shiki github-light" style="background-color:#fff;" tabindex="0"><code><span class="line"><span style="color:#D73A49;">from</span><span style="color:#24292E;"> fastapi </span><span style="color:#D73A49;">import</span><span style="color:#24292E;"> Depends, FastAPI, Header, HTTPException</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">app </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> FastAPI()</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">async</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">def</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">verify_token</span><span style="color:#24292E;">(x_token: </span><span style="color:#005CC5;">str</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> Header()):</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> x_token </span><span style="color:#D73A49;">!=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;fake-super-secret-token&quot;</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">raise</span><span style="color:#24292E;"> HTTPException(</span><span style="color:#E36209;">status_code</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">400</span><span style="color:#24292E;">, </span><span style="color:#E36209;">detail</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;X-Token header invalid&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">async</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">def</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">verify_key</span><span style="color:#24292E;">(x_key: </span><span style="color:#005CC5;">str</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> Header()):</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> x_key </span><span style="color:#D73A49;">!=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;fake-super-secret-key&quot;</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">raise</span><span style="color:#24292E;"> HTTPException(</span><span style="color:#E36209;">status_code</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">400</span><span style="color:#24292E;">, </span><span style="color:#E36209;">detail</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;X-Key header invalid&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> x_key</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#6F42C1;">@app.get</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;/items/&quot;</span><span style="color:#24292E;">, </span><span style="color:#E36209;">dependencies</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">[Depends(verify_token), Depends(verify_key)])</span></span>
<span class="line"><span style="color:#D73A49;">async</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">def</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">read_items</span><span style="color:#24292E;">():</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> [{</span><span style="color:#032F62;">&quot;item&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;Foo&quot;</span><span style="color:#24292E;">}, {</span><span style="color:#032F62;">&quot;item&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;Bar&quot;</span><span style="color:#24292E;">}]</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="安全操作" tabindex="-1"><a class="header-anchor" href="#安全操作" aria-hidden="true">#</a> 安全操作</h3>`,66),u={href:"https://fastapi.tiangolo.com/zh/tutorial/security/first-steps/",target:"_blank",rel:"noopener noreferrer"},v=p(`<h4 id="cors" tabindex="-1"><a class="header-anchor" href="#cors" aria-hidden="true">#</a> CORS</h4><div class="language-python line-numbers-mode" data-ext="py"><pre class="shiki github-light" style="background-color:#fff;" tabindex="0"><code><span class="line"><span style="color:#D73A49;">from</span><span style="color:#24292E;"> fastapi </span><span style="color:#D73A49;">import</span><span style="color:#24292E;"> FastAPI</span></span>
<span class="line"><span style="color:#D73A49;">from</span><span style="color:#24292E;"> fastapi.middleware.cors </span><span style="color:#D73A49;">import</span><span style="color:#24292E;"> CORSMiddleware</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">app </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> FastAPI()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">origins </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> [</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;http://localhost.tiangolo.com&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;https://localhost.tiangolo.com&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;http://localhost&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;http://localhost:8080&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">app.add_middleware(</span></span>
<span class="line"><span style="color:#24292E;">    CORSMiddleware,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#E36209;">allow_origins</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">origins,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#E36209;">allow_credentials</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">True</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#E36209;">allow_methods</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">[</span><span style="color:#032F62;">&quot;*&quot;</span><span style="color:#24292E;">],</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#E36209;">allow_headers</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">[</span><span style="color:#032F62;">&quot;*&quot;</span><span style="color:#24292E;">],</span></span>
<span class="line"><span style="color:#24292E;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6F42C1;">@app.get</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;/&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#D73A49;">async</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">def</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">main</span><span style="color:#24292E;">():</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> {</span><span style="color:#032F62;">&quot;message&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;Hello World&quot;</span><span style="color:#24292E;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="staticfiles" tabindex="-1"><a class="header-anchor" href="#staticfiles" aria-hidden="true">#</a> StaticFiles</h3><div class="language-python line-numbers-mode" data-ext="py"><pre class="shiki github-light" style="background-color:#fff;" tabindex="0"><code><span class="line"><span style="color:#D73A49;">from</span><span style="color:#24292E;"> fastapi </span><span style="color:#D73A49;">import</span><span style="color:#24292E;"> FastAPI</span></span>
<span class="line"><span style="color:#D73A49;">from</span><span style="color:#24292E;"> fastapi.staticfiles </span><span style="color:#D73A49;">import</span><span style="color:#24292E;"> StaticFiles</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">app </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> FastAPI()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">app.mount(</span><span style="color:#032F62;">&quot;/static&quot;</span><span style="color:#24292E;">, StaticFiles(</span><span style="color:#E36209;">directory</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;static&quot;</span><span style="color:#24292E;">), </span><span style="color:#E36209;">name</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;static&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="部署" tabindex="-1"><a class="header-anchor" href="#部署" aria-hidden="true">#</a> 部署</h2><p>可以使用</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="shiki github-light" style="background-color:#fff;" tabindex="0"><code><span class="line"><span style="color:#6F42C1;">uvicorn</span><span style="color:#24292E;"> </span><span style="color:#032F62;">main:app</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--host</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0.0</span><span style="color:#032F62;">.0.0</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--port</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">80</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>来发布你的应用</p><h2 id="其他更多" tabindex="-1"><a class="header-anchor" href="#其他更多" aria-hidden="true">#</a> 其他更多</h2>`,9),m={href:"https://fastapi.tiangolo.com/zh/advanced/",target:"_blank",rel:"noopener noreferrer"};function E(b,h){const a=o("ExternalLinkIcon");return c(),t("div",null,[i,s("p",null,[s("a",y,[n("官方指南 link"),l(a)])]),d,s("p",null,[s("a",u,[n("参考官方"),l(a)])]),v,s("p",null,[n("参考 fastapi "),s("a",m,[n("高级指南"),l(a)])])])}const f=e(r,[["render",E],["__file","笔记fastapi.html.vue"]]);export{f as default};
