const a=JSON.parse('{"key":"v-1ec33f0e","path":"/posts/notes/articles/%E7%AC%94%E8%AE%B0ahocorasick.html","title":"Aho-Corasick 多字符串匹配算法","lang":"zh-CN","frontmatter":{"title":"Aho-Corasick 多字符串匹配算法","date":"2021-12-19T00:00:00.000Z","author":"Kevin 吴嘉文","category":["知识笔记"],"tag":["algorithm|算法"],"mathjax":true,"toc":true,"comments":"笔记","description":"Aho-Corasick 多字符串匹配加速算法。文章包括 Tire, KMP, Aho-Corasick 需要匹配的单词有 n 个，要在一篇具有 m 个单词的文章中找出他们的位置。 AC 自动机可以理解为 Tire 与 KMP 算法的结合。使用 fail 指针加速了字符串匹配的速度。 Trie 前缀树/字典树 的插入、查询时间复杂度均为 为 O(∣S∣)O(|S|)O(∣S∣)，其中 ∣S∣|S|∣S∣ 是每次插入或查询的字符串的长度。空间复杂度为 O(∣T∣⋅∑)O(|T|·\\\\sum)O(∣T∣⋅∑) 其中 ∣T∣|T|∣T∣ 为插入字符串长度之和，∑\\\\sum∑ 为字符集大小。","head":[["meta",{"property":"og:url","content":"http://antarina.tech/posts/notes/articles/%E7%AC%94%E8%AE%B0ahocorasick.html"}],["meta",{"property":"og:site_name","content":"记忆笔书"}],["meta",{"property":"og:title","content":"Aho-Corasick 多字符串匹配算法"}],["meta",{"property":"og:description","content":"Aho-Corasick 多字符串匹配加速算法。文章包括 Tire, KMP, Aho-Corasick 需要匹配的单词有 n 个，要在一篇具有 m 个单词的文章中找出他们的位置。 AC 自动机可以理解为 Tire 与 KMP 算法的结合。使用 fail 指针加速了字符串匹配的速度。 Trie 前缀树/字典树 的插入、查询时间复杂度均为 为 O(∣S∣)O(|S|)O(∣S∣)，其中 ∣S∣|S|∣S∣ 是每次插入或查询的字符串的长度。空间复杂度为 O(∣T∣⋅∑)O(|T|·\\\\sum)O(∣T∣⋅∑) 其中 ∣T∣|T|∣T∣ 为插入字符串长度之和，∑\\\\sum∑ 为字符集大小。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-03-26T07:48:04.000Z"}],["meta",{"property":"article:author","content":"Kevin 吴嘉文"}],["meta",{"property":"article:tag","content":"algorithm|算法"}],["meta",{"property":"article:published_time","content":"2021-12-19T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-03-26T07:48:04.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Aho-Corasick 多字符串匹配算法\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2021-12-19T00:00:00.000Z\\",\\"dateModified\\":\\"2023-03-26T07:48:04.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Kevin 吴嘉文\\"}]}"]]},"headers":[{"level":2,"title":"Trie","slug":"trie","link":"#trie","children":[]},{"level":2,"title":"KMP","slug":"kmp","link":"#kmp","children":[]},{"level":2,"title":"AC 自动机","slug":"ac-自动机","link":"#ac-自动机","children":[{"level":3,"title":"代码","slug":"代码","link":"#代码","children":[]},{"level":3,"title":"pyahocorasick","slug":"pyahocorasick","link":"#pyahocorasick","children":[]}]}],"git":{"createdTime":1679816884000,"updatedTime":1679816884000,"contributors":[{"name":"kevinng77","email":"417333277@qq.com","commits":1}]},"readingTime":{"minutes":4.66,"words":1397},"filePathRelative":"posts/notes/articles/笔记ahocorasick.md","localizedDate":"2021年12月19日","excerpt":"<blockquote>\\n<p>Aho-Corasick 多字符串匹配加速算法。文章包括 Tire, KMP, Aho-Corasick</p>\\n</blockquote>\\n<!--more-->\\n<p>需要匹配的单词有 n 个，要在一篇具有 m 个单词的文章中找出他们的位置。</p>\\n<p>AC 自动机可以理解为 Tire 与 KMP 算法的结合。使用 fail 指针加速了字符串匹配的速度。</p>\\n<h2> Trie</h2>\\n<p>前缀树/字典树 的插入、查询时间复杂度均为 为 <span class=\\"katex\\"><span class=\\"katex-mathml\\"><math xmlns=\\"http://www.w3.org/1998/Math/MathML\\"><semantics><mrow><mi>O</mi><mo stretchy=\\"false\\">(</mo><mi mathvariant=\\"normal\\">∣</mi><mi>S</mi><mi mathvariant=\\"normal\\">∣</mi><mo stretchy=\\"false\\">)</mo></mrow><annotation encoding=\\"application/x-tex\\">O(|S|)</annotation></semantics></math></span><span class=\\"katex-html\\" aria-hidden=\\"true\\"><span class=\\"base\\"><span class=\\"strut\\" style=\\"height:1em;vertical-align:-0.25em;\\"></span><span class=\\"mord mathnormal\\" style=\\"margin-right:0.02778em;\\">O</span><span class=\\"mopen\\">(</span><span class=\\"mord\\">∣</span><span class=\\"mord mathnormal\\" style=\\"margin-right:0.05764em;\\">S</span><span class=\\"mord\\">∣</span><span class=\\"mclose\\">)</span></span></span></span>，其中 <span class=\\"katex\\"><span class=\\"katex-mathml\\"><math xmlns=\\"http://www.w3.org/1998/Math/MathML\\"><semantics><mrow><mi mathvariant=\\"normal\\">∣</mi><mi>S</mi><mi mathvariant=\\"normal\\">∣</mi></mrow><annotation encoding=\\"application/x-tex\\">|S|</annotation></semantics></math></span><span class=\\"katex-html\\" aria-hidden=\\"true\\"><span class=\\"base\\"><span class=\\"strut\\" style=\\"height:1em;vertical-align:-0.25em;\\"></span><span class=\\"mord\\">∣</span><span class=\\"mord mathnormal\\" style=\\"margin-right:0.05764em;\\">S</span><span class=\\"mord\\">∣</span></span></span></span> 是每次插入或查询的字符串的长度。空间复杂度为 <span class=\\"katex\\"><span class=\\"katex-mathml\\"><math xmlns=\\"http://www.w3.org/1998/Math/MathML\\"><semantics><mrow><mi>O</mi><mo stretchy=\\"false\\">(</mo><mi mathvariant=\\"normal\\">∣</mi><mi>T</mi><mi mathvariant=\\"normal\\">∣</mi><mo separator=\\"true\\">⋅</mo><mo>∑</mo><mo stretchy=\\"false\\">)</mo></mrow><annotation encoding=\\"application/x-tex\\">O(|T|·\\\\sum)</annotation></semantics></math></span><span class=\\"katex-html\\" aria-hidden=\\"true\\"><span class=\\"base\\"><span class=\\"strut\\" style=\\"height:1em;vertical-align:-0.25em;\\"></span><span class=\\"mord mathnormal\\" style=\\"margin-right:0.02778em;\\">O</span><span class=\\"mopen\\">(</span><span class=\\"mord\\">∣</span><span class=\\"mord mathnormal\\" style=\\"margin-right:0.13889em;\\">T</span><span class=\\"mord\\">∣</span><span class=\\"mpunct\\">⋅</span><span class=\\"mspace\\" style=\\"margin-right:0.1667em;\\"></span><span class=\\"mop op-symbol small-op\\" style=\\"position:relative;top:0em;\\">∑</span><span class=\\"mclose\\">)</span></span></span></span> 其中 <span class=\\"katex\\"><span class=\\"katex-mathml\\"><math xmlns=\\"http://www.w3.org/1998/Math/MathML\\"><semantics><mrow><mi mathvariant=\\"normal\\">∣</mi><mi>T</mi><mi mathvariant=\\"normal\\">∣</mi></mrow><annotation encoding=\\"application/x-tex\\">|T|</annotation></semantics></math></span><span class=\\"katex-html\\" aria-hidden=\\"true\\"><span class=\\"base\\"><span class=\\"strut\\" style=\\"height:1em;vertical-align:-0.25em;\\"></span><span class=\\"mord\\">∣</span><span class=\\"mord mathnormal\\" style=\\"margin-right:0.13889em;\\">T</span><span class=\\"mord\\">∣</span></span></span></span> 为插入字符串长度之和，<span class=\\"katex\\"><span class=\\"katex-mathml\\"><math xmlns=\\"http://www.w3.org/1998/Math/MathML\\"><semantics><mrow><mo>∑</mo></mrow><annotation encoding=\\"application/x-tex\\">\\\\sum</annotation></semantics></math></span><span class=\\"katex-html\\" aria-hidden=\\"true\\"><span class=\\"base\\"><span class=\\"strut\\" style=\\"height:1em;vertical-align:-0.25em;\\"></span><span class=\\"mop op-symbol small-op\\" style=\\"position:relative;top:0em;\\">∑</span></span></span></span> 为字符集大小。</p>","autoDesc":true}');export{a as data};
