import{_ as p,P as o,U as i,Y as n,a1 as s,X as t,aQ as e,E as c}from"./framework-6cee4965.js";const l={},u=n("h1",{id:"fastapi",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#fastapi","aria-hidden":"true"},"#"),s(" FastAPI")],-1),r={href:"https://fastapi.tiangolo.com/",target:"_blank",rel:"noopener noreferrer"},d=e(`<blockquote><p>FastAPI 是一个用于构建 API 的现代、快速（高性能）的 web 框架，使用 Python 3.6+ 并基于标准的 Python 类型提示。</p><p>个人感受到的 FastAPI 使用特点：</p><ol><li>使用模型统一对接受以及输出数据进行格式管理。</li><li>自动类型检验，以及完善的检验流程和错误信息处理方式。</li></ol></blockquote><h2 id="快速开始" tabindex="-1"><a class="header-anchor" href="#快速开始" aria-hidden="true">#</a> 快速开始</h2><h3 id="环境安装" tabindex="-1"><a class="header-anchor" href="#环境安装" aria-hidden="true">#</a> 环境安装</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>pip <span class="token function">install</span> <span class="token string">&quot;fastapi[all]&quot;</span>
pip <span class="token function">install</span> <span class="token string">&quot;uvicorn[standard]&quot;</span>  <span class="token comment"># 安装 ASGI 服务器</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="快速案例" tabindex="-1"><a class="header-anchor" href="#快速案例" aria-hidden="true">#</a> 快速案例</h3><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># main.py</span>
<span class="token keyword">from</span> typing <span class="token keyword">import</span> Union

<span class="token keyword">from</span> fastapi <span class="token keyword">import</span> FastAPI
<span class="token keyword">from</span> pydantic <span class="token keyword">import</span> BaseModel

app <span class="token operator">=</span> FastAPI<span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token keyword">class</span> <span class="token class-name">Item</span><span class="token punctuation">(</span>BaseModel<span class="token punctuation">)</span><span class="token punctuation">:</span>
    name<span class="token punctuation">:</span> <span class="token builtin">str</span>
    price<span class="token punctuation">:</span> <span class="token builtin">float</span>
    is_offer<span class="token punctuation">:</span> Union<span class="token punctuation">[</span><span class="token builtin">bool</span><span class="token punctuation">,</span> <span class="token boolean">None</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">None</span>

<span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>get</span><span class="token punctuation">(</span><span class="token string">&quot;/&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">read_root</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span><span class="token string">&quot;Hello&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;World&quot;</span><span class="token punctuation">}</span>

<span class="token comment"># 路径参数 item_id 的值将作为参数 item_id 传递给你的函数。</span>
<span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>get</span><span class="token punctuation">(</span><span class="token string">&quot;/items/{item_id}&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">read_item</span><span class="token punctuation">(</span>item_id<span class="token punctuation">:</span> <span class="token builtin">int</span><span class="token punctuation">,</span> q<span class="token punctuation">:</span> Union<span class="token punctuation">[</span><span class="token builtin">str</span><span class="token punctuation">,</span> <span class="token boolean">None</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">None</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token comment"># 提供参数类型后 item_id 会被自动解析成 int 类型</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span><span class="token string">&quot;item_id&quot;</span><span class="token punctuation">:</span> item_id<span class="token punctuation">,</span> <span class="token string">&quot;q&quot;</span><span class="token punctuation">:</span> q<span class="token punctuation">}</span>

<span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>put</span><span class="token punctuation">(</span><span class="token string">&quot;/items/{item_id}&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">def</span> <span class="token function">update_item</span><span class="token punctuation">(</span>item_id<span class="token punctuation">:</span> <span class="token builtin">int</span><span class="token punctuation">,</span> item<span class="token punctuation">:</span> Item<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span><span class="token string">&quot;item_name&quot;</span><span class="token punctuation">:</span> item<span class="token punctuation">.</span>name<span class="token punctuation">,</span> <span class="token string">&quot;item_id&quot;</span><span class="token punctuation">:</span> item_id<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container info"><p class="hint-container-title">相关信息</p><p>注意点：</p><ul><li>如果你的代码里会出现 <code>async</code> / <code>await</code>，请使用 <code>async def</code></li><li>提供参数类型后 <code>item_id</code> 会被自动解析成 <code>int</code> 类型，如果路径传参错误，那么会返回一个报错结果。</li><li>路径参数 <code>item_id</code> 的值将作为参数 <code>item_id</code> 传递给你的函数。</li></ul></div><p>开始服务，以下替换 main 为你的 python 文件名称。修改 app 为 FastAPI 实例名称。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>uvicorn main:app <span class="token parameter variable">--reload</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>对于设置好的 get 服务，可以通过直接访问 url 来测试： http://127.0.0.1:8000/items/5?q=somequery</p><h3 id="fastapi-特性" tabindex="-1"><a class="header-anchor" href="#fastapi-特性" aria-hidden="true">#</a> FastAPI 特性</h3><h4 id="交互式文档界面" tabindex="-1"><a class="header-anchor" href="#交互式文档界面" aria-hidden="true">#</a> 交互式文档界面</h4><p>访问 http://127.0.0.1:8000/docs 或 http://127.0.0.1:8000/redoc，能够看到 fastapi 自动整理好的 api 信息，包括结构数据结构，回复内容格式等信息。</p><p>在界面中，可以对你写好的 API 进行在线测试。</p><h4 id="编辑器支持" tabindex="-1"><a class="header-anchor" href="#编辑器支持" aria-hidden="true">#</a> 编辑器支持</h4><p>FastAPI 基于 Pydanic 和 Starlette，因此当你在文档中定义了结构体后，在 FastAPI 的任意地方都能支持 <strong>数据类型校验</strong> 以及 <strong>自动补全</strong> ：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> pydantic <span class="token keyword">import</span> BaseModel

<span class="token keyword">class</span> <span class="token class-name">Item</span><span class="token punctuation">(</span>BaseModel<span class="token punctuation">)</span><span class="token punctuation">:</span>
    name<span class="token punctuation">:</span> <span class="token builtin">str</span>
    price<span class="token punctuation">:</span> <span class="token builtin">float</span>
    is_offer<span class="token punctuation">:</span> Union<span class="token punctuation">[</span><span class="token builtin">bool</span><span class="token punctuation">,</span> <span class="token boolean">None</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">None</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>基于 <strong>Starlette</strong> ，可以使用一些内容：</p><ul><li><strong>支持 WebSocket</strong> 。</li><li><strong>支持 GraphQL</strong> 。</li><li>后台任务处理。</li><li>Startup 和 shutdown 事件。</li><li>测试客户端基于 HTTPX。</li><li><strong>CORS</strong> , GZip, 静态文件, 流响应。</li><li>支持 <strong>Session 和 Cookie</strong> 。</li><li>100% 测试覆盖率。</li><li>代码库 100% 类型注释。</li></ul><h2 id="教程梳理" tabindex="-1"><a class="header-anchor" href="#教程梳理" aria-hidden="true">#</a> 教程梳理</h2><h3 id="通用-api" tabindex="-1"><a class="header-anchor" href="#通用-api" aria-hidden="true">#</a> 通用 API</h3><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> typing <span class="token keyword">import</span> Union

<span class="token keyword">from</span> fastapi <span class="token keyword">import</span> FastAPI
<span class="token keyword">from</span> pydantic <span class="token keyword">import</span> BaseModel

<span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>get</span><span class="token punctuation">(</span><span class="token string">&quot;/items/10086&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">read_item</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span><span class="token string">&quot;item_id&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;hello&quot;</span><span class="token punctuation">}</span>

<span class="token comment"># 路径参数 item_id 的值将作为参数 item_id 传递给你的函数。</span>
<span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>get</span><span class="token punctuation">(</span><span class="token string">&quot;/items/{item_id}&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">read_item</span><span class="token punctuation">(</span>item_id<span class="token punctuation">:</span> <span class="token builtin">int</span><span class="token punctuation">,</span> q<span class="token punctuation">:</span> Union<span class="token punctuation">[</span><span class="token builtin">str</span><span class="token punctuation">,</span> <span class="token boolean">None</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">None</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token comment"># 提供参数类型后 item_id 会被自动解析成 int 类型</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span><span class="token string">&quot;item_id&quot;</span><span class="token punctuation">:</span> item_id<span class="token punctuation">,</span> <span class="token string">&quot;q&quot;</span><span class="token punctuation">:</span> q<span class="token punctuation">}</span>

<span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>post</span><span class="token punctuation">(</span>
    <span class="token string">&quot;/items/&quot;</span><span class="token punctuation">,</span>
    response_model<span class="token operator">=</span>Item<span class="token punctuation">,</span>
    summary<span class="token operator">=</span><span class="token string">&quot;Create an item&quot;</span><span class="token punctuation">,</span>
    description<span class="token operator">=</span><span class="token string">&quot;Create an item with all the information, name, description, price, tax and a set of unique tags&quot;</span><span class="token punctuation">,</span>
    response_description<span class="token operator">=</span><span class="token string">&quot;The created item&quot;</span><span class="token punctuation">,</span>
<span class="token punctuation">)</span>
    <span class="token triple-quoted-string string">&quot;&quot;&quot;
    This is a doc string.
    Create an item with all the information:

    -  **name** : each item must have a name
    -  **description** : a long description
    -  **price** : required
    -  **tax** : if the item doesn&#39;t have tax, you can omit this
    -  **tags** : a set of unique tag strings for this item
    &quot;&quot;&quot;</span>
<span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">create_item</span><span class="token punctuation">(</span>item<span class="token punctuation">:</span> Item<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">return</span> item
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>API 元数据：</strong> 可以通过 <code>summary</code> 和 <code>description</code> 来添加 API 相关信息。当然也可以通过函数常用的 <code>docstring</code> 来为函数写注释信息。</p><p><strong>数据类型校验：</strong> 对于上面的例子，如果发送请求到 <code>http://127.0.0.1:8000/items/6.1?q=somequery</code></p><p><strong>自动类型转换：</strong> 函数参数部分声明了 <code>item_id: int</code>，提供参数类型后 <code>item_id</code> 会被自动解析成 <code>int</code> 类型；如果是 <code>item_id: str</code>，那么 <code>item_id</code> 就会被解析成字符串</p><p><strong>API 定义顺序很重要：</strong> 如上例子， <code>/items/10086</code> 必须在 <code>items/{item_id}</code> 之前提供。</p><p><strong>查询参数：</strong> 声明不属于路径参数的其他函数参数时，它们将被自动解释为&quot;查询字符串&quot;参数，需要通过 <code>http://127.0.0.1:8000/items/?skip=0&amp;limit=10</code> 方式来访问额外参数</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>get</span><span class="token punctuation">(</span><span class="token string">&quot;/items/&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">read_item</span><span class="token punctuation">(</span>skip<span class="token punctuation">:</span> <span class="token builtin">int</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> limit<span class="token punctuation">:</span> <span class="token builtin">int</span> <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">return</span> fake_items_db<span class="token punctuation">[</span>skip <span class="token punctuation">:</span> skip <span class="token operator">+</span> limit<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>针对可选参数，请使用 <code>q: Union[str, None] = None</code> 来统一进行数据格式声明。</p><h3 id="api-额外功能" tabindex="-1"><a class="header-anchor" href="#api-额外功能" aria-hidden="true">#</a> API 额外功能</h3><p>参数选项</p><p>如下，当我们希望用户请求的参数在一个可选的范围内，可以用 Enum 的方式来定义选项。当发送请求 <code>/models/{model_name}</code> 中的 <code>model_name</code> 不在枚举的 <code>ModelName</code> 中时，fastAPI 会进行参数检验，并返回 <code>value is not a valid enumeration member; permitted: &#39;alexnet&#39;, &#39;resnet&#39;, &#39;lenet&#39;</code>。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> enum <span class="token keyword">import</span> Enum

<span class="token keyword">from</span> fastapi <span class="token keyword">import</span> FastAPI

<span class="token keyword">class</span> <span class="token class-name">ModelName</span><span class="token punctuation">(</span><span class="token builtin">str</span><span class="token punctuation">,</span> Enum<span class="token punctuation">)</span><span class="token punctuation">:</span>
    alexnet <span class="token operator">=</span> <span class="token string">&quot;alexnet&quot;</span>
    resnet <span class="token operator">=</span> <span class="token string">&quot;resnet&quot;</span>
    lenet <span class="token operator">=</span> <span class="token string">&quot;lenet&quot;</span>

app <span class="token operator">=</span> FastAPI<span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>get</span><span class="token punctuation">(</span><span class="token string">&quot;/models/{model_name}&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">get_model</span><span class="token punctuation">(</span>model_name<span class="token punctuation">:</span> ModelName<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token comment"># 路径参数的值将是一个枚举成员</span>
    <span class="token keyword">if</span> model_name <span class="token keyword">is</span> ModelName<span class="token punctuation">.</span>alexnet<span class="token punctuation">:</span>
        <span class="token keyword">return</span> <span class="token punctuation">{</span><span class="token string">&quot;model_name&quot;</span><span class="token punctuation">:</span> model_name<span class="token punctuation">,</span> <span class="token string">&quot;message&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;Deep Learning FTW!&quot;</span><span class="token punctuation">}</span>
    <span class="token comment"># 用 .value 获取值</span>
    <span class="token keyword">if</span> model_name<span class="token punctuation">.</span>value <span class="token operator">==</span> <span class="token string">&quot;lenet&quot;</span><span class="token punctuation">:</span>
        <span class="token keyword">return</span> <span class="token punctuation">{</span><span class="token string">&quot;model_name&quot;</span><span class="token punctuation">:</span> model_name<span class="token punctuation">,</span> <span class="token string">&quot;message&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;LeCNN all the images&quot;</span><span class="token punctuation">}</span>

    <span class="token keyword">return</span> <span class="token punctuation">{</span><span class="token string">&quot;model_name&quot;</span><span class="token punctuation">:</span> model_name<span class="token punctuation">,</span> <span class="token string">&quot;message&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;Have some residuals&quot;</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="请求体-接收-json-数据" tabindex="-1"><a class="header-anchor" href="#请求体-接收-json-数据" aria-hidden="true">#</a> 请求体 接收 JSON 数据</h3><p>通过 <code>BaseModel</code> 来定义接受的请求体格式。如下定义方式，请求体必须包括 <code>name</code> 和 <code>price</code> 字段</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> pydantic <span class="token keyword">import</span> BaseModel

<span class="token keyword">class</span> <span class="token class-name">Item</span><span class="token punctuation">(</span>BaseModel<span class="token punctuation">)</span><span class="token punctuation">:</span>
    name<span class="token punctuation">:</span> <span class="token builtin">str</span>
    price<span class="token punctuation">:</span> <span class="token builtin">float</span>
    is_offer<span class="token punctuation">:</span> Union<span class="token punctuation">[</span><span class="token builtin">bool</span><span class="token punctuation">,</span> <span class="token boolean">None</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">None</span>
    
    <span class="token keyword">class</span> <span class="token class-name">Config</span><span class="token punctuation">:</span>  <span class="token comment"># 可以选择添加元数据</span>
        schema_extra <span class="token operator">=</span> <span class="token punctuation">{</span>
            <span class="token string">&quot;example&quot;</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>
                <span class="token string">&quot;name&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;Foo&quot;</span><span class="token punctuation">,</span>
                <span class="token string">&quot;description&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;A very nice Item&quot;</span><span class="token punctuation">,</span>
                <span class="token string">&quot;price&quot;</span><span class="token punctuation">:</span> <span class="token number">35.4</span><span class="token punctuation">,</span>
                <span class="token string">&quot;tax&quot;</span><span class="token punctuation">:</span> <span class="token number">3.2</span><span class="token punctuation">,</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
<span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>post</span><span class="token punctuation">(</span><span class="token string">&quot;/post/test&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">def</span> <span class="token function">update_item</span><span class="token punctuation">(</span>item<span class="token punctuation">:</span> Item<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span><span class="token string">&quot;item_name&quot;</span><span class="token punctuation">:</span> item<span class="token punctuation">.</span>name<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="类型转换" tabindex="-1"><a class="header-anchor" href="#类型转换" aria-hidden="true">#</a> 类型转换</h4><p>如果你的数据中包含一些如 <code>datetime</code> 的与 JSON 不兼容的数据类型，那么可以使用 <code>jsonable_encoder</code> 来进行处理。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> fastapi<span class="token punctuation">.</span>encoders <span class="token keyword">import</span> jsonable_encoder
fake_db <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>


<span class="token keyword">class</span> <span class="token class-name">Item</span><span class="token punctuation">(</span>BaseModel<span class="token punctuation">)</span><span class="token punctuation">:</span>
    title<span class="token punctuation">:</span> <span class="token builtin">str</span>
    timestamp<span class="token punctuation">:</span> datetime
    description<span class="token punctuation">:</span> <span class="token builtin">str</span> <span class="token operator">|</span> <span class="token boolean">None</span> <span class="token operator">=</span> <span class="token boolean">None</span>

app <span class="token operator">=</span> FastAPI<span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>put</span><span class="token punctuation">(</span><span class="token string">&quot;/items/{id}&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">def</span> <span class="token function">update_item</span><span class="token punctuation">(</span><span class="token builtin">id</span><span class="token punctuation">:</span> <span class="token builtin">str</span><span class="token punctuation">,</span> item<span class="token punctuation">:</span> Item<span class="token punctuation">)</span><span class="token punctuation">:</span>
    json_compatible_item_data <span class="token operator">=</span> jsonable_encoder<span class="token punctuation">(</span>item<span class="token punctuation">)</span>
    fake_db<span class="token punctuation">[</span><span class="token builtin">id</span><span class="token punctuation">]</span> <span class="token operator">=</span> json_compatible_item_data
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="参数校验" tabindex="-1"><a class="header-anchor" href="#参数校验" aria-hidden="true">#</a> 参数校验</h4><p>使用 query 对输入的字符串进行长度校验，或者要求他满足正则表达式。</p>`,41),k=n("div",{class:"language-python line-numbers-mode","data-ext":"py"},[n("pre",{python:"",class:"language-python"},[n("code",null,[n("span",{class:"token keyword"},"from"),s(" typing "),n("span",{class:"token keyword"},"import"),s(` Union
`),n("span",{class:"token keyword"},"from"),s(" fastapi "),n("span",{class:"token keyword"},"import"),s(" FastAPI"),n("span",{class:"token punctuation"},","),s(` Query
app `),n("span",{class:"token operator"},"="),s(" FastAPI"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(`

`),n("span",{class:"token decorator annotation punctuation"},[s("@app"),n("span",{class:"token punctuation"},"."),s("get")]),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"/items/"'),n("span",{class:"token punctuation"},")"),s(`
`),n("span",{class:"token keyword"},"async"),s(),n("span",{class:"token keyword"},"def"),s(),n("span",{class:"token function"},"read_items"),n("span",{class:"token punctuation"},"("),s(`
    q`),n("span",{class:"token punctuation"},":"),s(" Union"),n("span",{class:"token punctuation"},"["),n("span",{class:"token builtin"},"str"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token boolean"},"None"),n("span",{class:"token punctuation"},"]"),s(),n("span",{class:"token operator"},"="),s(" Query"),n("span",{class:"token punctuation"},"("),s(`
        default`),n("span",{class:"token operator"},"="),n("span",{class:"token boolean"},"None"),n("span",{class:"token punctuation"},","),s(" min_length"),n("span",{class:"token operator"},"="),n("span",{class:"token number"},"3"),n("span",{class:"token punctuation"},","),s(" max_length"),n("span",{class:"token operator"},"="),n("span",{class:"token number"},"50"),n("span",{class:"token punctuation"},","),s(`
        title`),n("span",{class:"token operator"},"="),n("span",{class:"token string"},'"Query string"'),n("span",{class:"token punctuation"},","),s(`
        description`),n("span",{class:"token operator"},"="),n("span",{class:"token string"},'"Query string for the items to search in the database that have a good match"'),n("span",{class:"token punctuation"},","),s(`
		regex`),n("span",{class:"token operator"},"="),n("span",{class:"token string"},'"^fixedquery$"'),s(`
    `),n("span",{class:"token punctuation"},")"),s(`
`),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},":"),s(`
    results `),n("span",{class:"token operator"},"="),s(),n("span",{class:"token punctuation"},"{"),n("span",{class:"token string"},'"items"'),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token punctuation"},"["),n("span",{class:"token punctuation"},"{"),n("span",{class:"token string"},'"item_id"'),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token string"},'"Foo"'),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token punctuation"},"{"),n("span",{class:"token string"},'"item_id"'),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token string"},'"Bar"'),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},"}"),s(`
    `),n("span",{class:"token keyword"},"if"),s(" q"),n("span",{class:"token punctuation"},":"),s(`
        results`),n("span",{class:"token punctuation"},"."),s("update"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"{"),n("span",{class:"token string"},'"q"'),n("span",{class:"token punctuation"},":"),s(" q"),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),s(`
    `),n("span",{class:"token keyword"},"return"),s(` results
`)])]),n("div",{class:"highlight-lines"},[n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("div",{class:"highlight-line"}," "),n("div",{class:"highlight-line"}," "),n("div",{class:"highlight-line"}," "),n("div",{class:"highlight-line"}," "),n("div",{class:"highlight-line"}," "),n("br"),n("br"),n("br"),n("br"),n("br")]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),m=n("p",null,[s("同样的 query 也支持对数值参数进行大小校验，可以使用 "),n("code",null,"size: float = Query(gt=0, lt=10.5),")],-1),v=n("p",null,[s("你可能会更喜欢统一在请求体中对参数进行管理，可以使用 "),n("code",null,"Field"),s("：")],-1),b=n("div",{class:"language-python line-numbers-mode","data-ext":"py"},[n("pre",{python:"",class:"language-python"},[n("code",null,[n("span",{class:"token keyword"},"from"),s(" typing "),n("span",{class:"token keyword"},"import"),s(` Union

`),n("span",{class:"token keyword"},"from"),s(" fastapi "),n("span",{class:"token keyword"},"import"),s(" Body"),n("span",{class:"token punctuation"},","),s(` FastAPI
`),n("span",{class:"token keyword"},"from"),s(" pydantic "),n("span",{class:"token keyword"},"import"),s(" BaseModel"),n("span",{class:"token punctuation"},","),s(` Field

app `),n("span",{class:"token operator"},"="),s(" FastAPI"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(`

`),n("span",{class:"token keyword"},"class"),s(),n("span",{class:"token class-name"},"Item"),n("span",{class:"token punctuation"},"("),s("BaseModel"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},":"),s(`
    name`),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token builtin"},"str"),s(`
    description`),n("span",{class:"token punctuation"},":"),s(" Union"),n("span",{class:"token punctuation"},"["),n("span",{class:"token builtin"},"str"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token boolean"},"None"),n("span",{class:"token punctuation"},"]"),s(),n("span",{class:"token operator"},"="),s(" Field"),n("span",{class:"token punctuation"},"("),s(`
        default`),n("span",{class:"token operator"},"="),n("span",{class:"token boolean"},"None"),n("span",{class:"token punctuation"},","),s(" title"),n("span",{class:"token operator"},"="),n("span",{class:"token string"},'"The description of the item"'),n("span",{class:"token punctuation"},","),s(" max_length"),n("span",{class:"token operator"},"="),n("span",{class:"token number"},"300"),s(`
    `),n("span",{class:"token punctuation"},")"),s(`
    price`),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token builtin"},"float"),s(),n("span",{class:"token operator"},"="),s(" Field"),n("span",{class:"token punctuation"},"("),s("gt"),n("span",{class:"token operator"},"="),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},","),s(" description"),n("span",{class:"token operator"},"="),n("span",{class:"token string"},'"The price must be greater than zero"'),n("span",{class:"token punctuation"},")"),s(`
    tax`),n("span",{class:"token punctuation"},":"),s(" Union"),n("span",{class:"token punctuation"},"["),n("span",{class:"token builtin"},"float"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token boolean"},"None"),n("span",{class:"token punctuation"},"]"),s(),n("span",{class:"token operator"},"="),s(),n("span",{class:"token boolean"},"None"),s(`
`)])]),n("div",{class:"highlight-lines"},[n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("div",{class:"highlight-line"}," "),n("br"),n("br"),n("br")]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),h=e(`<p>针对 JSON 嵌套情况，可以使用嵌套的 Model 来统一定义：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">class</span> <span class="token class-name">Image</span><span class="token punctuation">(</span>BaseModel<span class="token punctuation">)</span><span class="token punctuation">:</span>
    url<span class="token punctuation">:</span> <span class="token builtin">str</span>
    name<span class="token punctuation">:</span> <span class="token builtin">str</span>

<span class="token keyword">class</span> <span class="token class-name">Item</span><span class="token punctuation">(</span>BaseModel<span class="token punctuation">)</span><span class="token punctuation">:</span>
    name<span class="token punctuation">:</span> <span class="token builtin">str</span>
    description<span class="token punctuation">:</span> Union<span class="token punctuation">[</span><span class="token builtin">str</span><span class="token punctuation">,</span> <span class="token boolean">None</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">None</span>
    price<span class="token punctuation">:</span> <span class="token builtin">float</span>
    tax<span class="token punctuation">:</span> Union<span class="token punctuation">[</span><span class="token builtin">float</span><span class="token punctuation">,</span> <span class="token boolean">None</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">None</span>
    tags<span class="token punctuation">:</span> Set<span class="token punctuation">[</span><span class="token builtin">str</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token builtin">set</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    image<span class="token punctuation">:</span> Union<span class="token punctuation">[</span>Image<span class="token punctuation">,</span> <span class="token boolean">None</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">None</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>除此外，<code>pydantic</code> 还提供其他参数类型来方便我们进行校验，如 <code>HttpUrl</code>。同时也可以使用 python 的 <code>datetime</code>， <code>UUID</code> 等数据类型。</p><h4 id="返回结果" tabindex="-1"><a class="header-anchor" href="#返回结果" aria-hidden="true">#</a> 返回结果</h4><p>同样可以对返回结果进行定义</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">class</span> <span class="token class-name">Item</span><span class="token punctuation">(</span>BaseModel<span class="token punctuation">)</span><span class="token punctuation">:</span>
    name<span class="token punctuation">:</span> <span class="token builtin">str</span>
    description<span class="token punctuation">:</span> Union<span class="token punctuation">[</span><span class="token builtin">str</span><span class="token punctuation">,</span> <span class="token boolean">None</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">None</span>
    price<span class="token punctuation">:</span> <span class="token builtin">float</span>
    tax<span class="token punctuation">:</span> Union<span class="token punctuation">[</span><span class="token builtin">float</span><span class="token punctuation">,</span> <span class="token boolean">None</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">None</span>
    tags<span class="token punctuation">:</span> List<span class="token punctuation">[</span><span class="token builtin">str</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>

<span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>post</span><span class="token punctuation">(</span><span class="token string">&quot;/items/&quot;</span><span class="token punctuation">,</span> response_model<span class="token operator">=</span>Item<span class="token punctuation">)</span>
<span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">create_item</span><span class="token punctuation">(</span>item<span class="token punctuation">:</span> Item<span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> Any<span class="token punctuation">:</span>
    <span class="token keyword">return</span> item

<span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>get</span><span class="token punctuation">(</span><span class="token string">&quot;/items/&quot;</span><span class="token punctuation">,</span> response_model<span class="token operator">=</span>List<span class="token punctuation">[</span>Item<span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">read_items</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> Any<span class="token punctuation">:</span>
    <span class="token keyword">return</span> <span class="token punctuation">[</span>
        <span class="token punctuation">{</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;Portal Gun&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;price&quot;</span><span class="token punctuation">:</span> <span class="token number">42.0</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token punctuation">{</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;Plumbus&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;price&quot;</span><span class="token punctuation">:</span> <span class="token number">32.0</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="接收表单数据" tabindex="-1"><a class="header-anchor" href="#接收表单数据" aria-hidden="true">#</a> 接收表单数据</h3><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> fastapi <span class="token keyword">import</span> FastAPI<span class="token punctuation">,</span> Form

app <span class="token operator">=</span> FastAPI<span class="token punctuation">(</span><span class="token punctuation">)</span>


<span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>post</span><span class="token punctuation">(</span><span class="token string">&quot;/login/&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">login</span><span class="token punctuation">(</span>username<span class="token punctuation">:</span> <span class="token builtin">str</span> <span class="token operator">=</span> Form<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> password<span class="token punctuation">:</span> <span class="token builtin">str</span> <span class="token operator">=</span> Form<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span><span class="token string">&quot;username&quot;</span><span class="token punctuation">:</span> username<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="接收请求文件" tabindex="-1"><a class="header-anchor" href="#接收请求文件" aria-hidden="true">#</a> 接收请求文件</h3><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> fastapi <span class="token keyword">import</span> FastAPI<span class="token punctuation">,</span> File<span class="token punctuation">,</span> UploadFile

app <span class="token operator">=</span> FastAPI<span class="token punctuation">(</span><span class="token punctuation">)</span>


<span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>post</span><span class="token punctuation">(</span><span class="token string">&quot;/files/&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">create_file</span><span class="token punctuation">(</span><span class="token builtin">file</span><span class="token punctuation">:</span> <span class="token builtin">bytes</span> <span class="token operator">=</span> File<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span><span class="token string">&quot;file_size&quot;</span><span class="token punctuation">:</span> <span class="token builtin">len</span><span class="token punctuation">(</span><span class="token builtin">file</span><span class="token punctuation">)</span><span class="token punctuation">}</span>


<span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>post</span><span class="token punctuation">(</span><span class="token string">&quot;/uploadfile/&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">create_upload_file</span><span class="token punctuation">(</span><span class="token builtin">file</span><span class="token punctuation">:</span> UploadFile<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token comment"># 异步状态下，使用以下方式获取文件内容</span>
    contents <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token builtin">file</span><span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token comment"># 同步状态下用 contents = file.file.read()</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span><span class="token string">&quot;filename&quot;</span><span class="token punctuation">:</span> <span class="token builtin">file</span><span class="token punctuation">.</span>filename<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>多文件操作</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>post</span><span class="token punctuation">(</span><span class="token string">&quot;/files/&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">create_files</span><span class="token punctuation">(</span>files<span class="token punctuation">:</span> <span class="token builtin">list</span><span class="token punctuation">[</span><span class="token builtin">bytes</span><span class="token punctuation">]</span> <span class="token operator">=</span> File<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span><span class="token string">&quot;file_sizes&quot;</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token builtin">len</span><span class="token punctuation">(</span><span class="token builtin">file</span><span class="token punctuation">)</span> <span class="token keyword">for</span> <span class="token builtin">file</span> <span class="token keyword">in</span> files<span class="token punctuation">]</span><span class="token punctuation">}</span>


<span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>post</span><span class="token punctuation">(</span><span class="token string">&quot;/uploadfiles/&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">create_upload_files</span><span class="token punctuation">(</span>files<span class="token punctuation">:</span> <span class="token builtin">list</span><span class="token punctuation">[</span>UploadFile<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span><span class="token string">&quot;filenames&quot;</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token builtin">file</span><span class="token punctuation">.</span>filename <span class="token keyword">for</span> <span class="token builtin">file</span> <span class="token keyword">in</span> files<span class="token punctuation">]</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container info"><p class="hint-container-title">相关信息</p><p>在同一个请求中接收数据和文件时，应同时使用 <code>File</code> 和 <code>Form</code>。</p></div><h3 id="依赖项" tabindex="-1"><a class="header-anchor" href="#依赖项" aria-hidden="true">#</a> 依赖项</h3><p>依赖项类似于类型注释，能够在过个接口需要使用同样结构数据时使用功能。依赖项能够套娃使用。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> typing <span class="token keyword">import</span> Union
<span class="token keyword">from</span> fastapi <span class="token keyword">import</span> Cookie<span class="token punctuation">,</span> Depends<span class="token punctuation">,</span> FastAPI

app <span class="token operator">=</span> FastAPI<span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token keyword">def</span> <span class="token function">query_extractor</span><span class="token punctuation">(</span>q<span class="token punctuation">:</span> Union<span class="token punctuation">[</span><span class="token builtin">str</span><span class="token punctuation">,</span> <span class="token boolean">None</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">None</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">return</span> q

<span class="token keyword">def</span> <span class="token function">query_or_cookie_extractor</span><span class="token punctuation">(</span>
    q<span class="token punctuation">:</span> <span class="token builtin">str</span> <span class="token operator">=</span> Depends<span class="token punctuation">(</span>query_extractor<span class="token punctuation">)</span><span class="token punctuation">,</span>
    last_query<span class="token punctuation">:</span> Union<span class="token punctuation">[</span><span class="token builtin">str</span><span class="token punctuation">,</span> <span class="token boolean">None</span><span class="token punctuation">]</span> <span class="token operator">=</span> Cookie<span class="token punctuation">(</span>default<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">if</span> <span class="token keyword">not</span> q<span class="token punctuation">:</span>
        <span class="token keyword">return</span> last_query
    <span class="token keyword">return</span> q


<span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>get</span><span class="token punctuation">(</span><span class="token string">&quot;/items/&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">read_query</span><span class="token punctuation">(</span>query_or_default<span class="token punctuation">:</span> <span class="token builtin">str</span> <span class="token operator">=</span> Depends<span class="token punctuation">(</span>query_or_cookie_extractor<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span><span class="token string">&quot;q_or_cookie&quot;</span><span class="token punctuation">:</span> query_or_default<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>当然除了函数外，也可以使用类作为依赖项：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> fastapi <span class="token keyword">import</span> Depends<span class="token punctuation">,</span> FastAPI

app <span class="token operator">=</span> FastAPI<span class="token punctuation">(</span><span class="token punctuation">)</span>


fake_items_db <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">{</span><span class="token string">&quot;item_name&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;Foo&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token string">&quot;item_name&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;Bar&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token string">&quot;item_name&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;Baz&quot;</span><span class="token punctuation">}</span><span class="token punctuation">]</span>


<span class="token keyword">class</span> <span class="token class-name">CommonQueryParams</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> q<span class="token punctuation">:</span> <span class="token builtin">str</span> <span class="token operator">|</span> <span class="token boolean">None</span> <span class="token operator">=</span> <span class="token boolean">None</span><span class="token punctuation">,</span> skip<span class="token punctuation">:</span> <span class="token builtin">int</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> limit<span class="token punctuation">:</span> <span class="token builtin">int</span> <span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        self<span class="token punctuation">.</span>q <span class="token operator">=</span> q
        self<span class="token punctuation">.</span>skip <span class="token operator">=</span> skip
        self<span class="token punctuation">.</span>limit <span class="token operator">=</span> limit


<span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>get</span><span class="token punctuation">(</span><span class="token string">&quot;/items/&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">read_items</span><span class="token punctuation">(</span>commons<span class="token punctuation">:</span> CommonQueryParams <span class="token operator">=</span> Depends<span class="token punctuation">(</span>CommonQueryParams<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    response <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
    <span class="token keyword">if</span> commons<span class="token punctuation">.</span>q<span class="token punctuation">:</span>
        response<span class="token punctuation">.</span>update<span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token string">&quot;q&quot;</span><span class="token punctuation">:</span> commons<span class="token punctuation">.</span>q<span class="token punctuation">}</span><span class="token punctuation">)</span>
    items <span class="token operator">=</span> fake_items_db<span class="token punctuation">[</span>commons<span class="token punctuation">.</span>skip <span class="token punctuation">:</span> commons<span class="token punctuation">.</span>skip <span class="token operator">+</span> commons<span class="token punctuation">.</span>limit<span class="token punctuation">]</span>
    response<span class="token punctuation">.</span>update<span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token string">&quot;items&quot;</span><span class="token punctuation">:</span> items<span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> response
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>依赖项不一定需要进行参数传递，可以用在装饰器中，进行依赖管理。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> fastapi <span class="token keyword">import</span> Depends<span class="token punctuation">,</span> FastAPI<span class="token punctuation">,</span> Header<span class="token punctuation">,</span> HTTPException

app <span class="token operator">=</span> FastAPI<span class="token punctuation">(</span><span class="token punctuation">)</span>


<span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">verify_token</span><span class="token punctuation">(</span>x_token<span class="token punctuation">:</span> <span class="token builtin">str</span> <span class="token operator">=</span> Header<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">if</span> x_token <span class="token operator">!=</span> <span class="token string">&quot;fake-super-secret-token&quot;</span><span class="token punctuation">:</span>
        <span class="token keyword">raise</span> HTTPException<span class="token punctuation">(</span>status_code<span class="token operator">=</span><span class="token number">400</span><span class="token punctuation">,</span> detail<span class="token operator">=</span><span class="token string">&quot;X-Token header invalid&quot;</span><span class="token punctuation">)</span>


<span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">verify_key</span><span class="token punctuation">(</span>x_key<span class="token punctuation">:</span> <span class="token builtin">str</span> <span class="token operator">=</span> Header<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">if</span> x_key <span class="token operator">!=</span> <span class="token string">&quot;fake-super-secret-key&quot;</span><span class="token punctuation">:</span>
        <span class="token keyword">raise</span> HTTPException<span class="token punctuation">(</span>status_code<span class="token operator">=</span><span class="token number">400</span><span class="token punctuation">,</span> detail<span class="token operator">=</span><span class="token string">&quot;X-Key header invalid&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> x_key


<span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>get</span><span class="token punctuation">(</span><span class="token string">&quot;/items/&quot;</span><span class="token punctuation">,</span> dependencies<span class="token operator">=</span><span class="token punctuation">[</span>Depends<span class="token punctuation">(</span>verify_token<span class="token punctuation">)</span><span class="token punctuation">,</span> Depends<span class="token punctuation">(</span>verify_key<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">read_items</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token punctuation">{</span><span class="token string">&quot;item&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;Foo&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token string">&quot;item&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;Bar&quot;</span><span class="token punctuation">}</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="安全操作" tabindex="-1"><a class="header-anchor" href="#安全操作" aria-hidden="true">#</a> 安全操作</h3>`,21),g={href:"https://fastapi.tiangolo.com/zh/tutorial/security/first-steps/",target:"_blank",rel:"noopener noreferrer"},y=e(`<h4 id="cors" tabindex="-1"><a class="header-anchor" href="#cors" aria-hidden="true">#</a> CORS</h4><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> fastapi <span class="token keyword">import</span> FastAPI
<span class="token keyword">from</span> fastapi<span class="token punctuation">.</span>middleware<span class="token punctuation">.</span>cors <span class="token keyword">import</span> CORSMiddleware

app <span class="token operator">=</span> FastAPI<span class="token punctuation">(</span><span class="token punctuation">)</span>

origins <span class="token operator">=</span> <span class="token punctuation">[</span>
    <span class="token string">&quot;http://localhost.tiangolo.com&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;https://localhost.tiangolo.com&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;http://localhost&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;http://localhost:8080&quot;</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span>

app<span class="token punctuation">.</span>add_middleware<span class="token punctuation">(</span>
    CORSMiddleware<span class="token punctuation">,</span>
    allow_origins<span class="token operator">=</span>origins<span class="token punctuation">,</span>
    allow_credentials<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span>
    allow_methods<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">&quot;*&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    allow_headers<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">&quot;*&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">)</span>

<span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>get</span><span class="token punctuation">(</span><span class="token string">&quot;/&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span><span class="token string">&quot;message&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;Hello World&quot;</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="staticfiles" tabindex="-1"><a class="header-anchor" href="#staticfiles" aria-hidden="true">#</a> StaticFiles</h3><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> fastapi <span class="token keyword">import</span> FastAPI
<span class="token keyword">from</span> fastapi<span class="token punctuation">.</span>staticfiles <span class="token keyword">import</span> StaticFiles

app <span class="token operator">=</span> FastAPI<span class="token punctuation">(</span><span class="token punctuation">)</span>

app<span class="token punctuation">.</span>mount<span class="token punctuation">(</span><span class="token string">&quot;/static&quot;</span><span class="token punctuation">,</span> StaticFiles<span class="token punctuation">(</span>directory<span class="token operator">=</span><span class="token string">&quot;static&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> name<span class="token operator">=</span><span class="token string">&quot;static&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="部署" tabindex="-1"><a class="header-anchor" href="#部署" aria-hidden="true">#</a> 部署</h2><p>可以使用</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>uvicorn main:app <span class="token parameter variable">--host</span> <span class="token number">0.0</span>.0.0 <span class="token parameter variable">--port</span> <span class="token number">80</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>来发布你的应用</p><h2 id="其他更多" tabindex="-1"><a class="header-anchor" href="#其他更多" aria-hidden="true">#</a> 其他更多</h2>`,9),q={href:"https://fastapi.tiangolo.com/zh/advanced/",target:"_blank",rel:"noopener noreferrer"};function f(_,w){const a=c("ExternalLinkIcon");return o(),i("div",null,[u,n("p",null,[n("a",r,[s("官方指南 link"),t(a)])]),d,k,m,v,b,h,n("p",null,[n("a",g,[s("参考官方"),t(a)])]),y,n("p",null,[s("参考 fastapi "),n("a",q,[s("高级指南"),t(a)])])])}const I=p(l,[["render",f],["__file","笔记fastapi.html.vue"]]);export{I as default};
