const l=JSON.parse('{"key":"v-755aea10","path":"/posts/notes/articles/%E7%AC%94%E8%AE%B0Cplusplusprimer.html","title":"嵌入式学习之（四）|C++ primer","lang":"zh-CN","frontmatter":{"title":"嵌入式学习之（四）|C++ primer","date":"2020-10-13T00:00:00.000Z","author":"Kevin 吴嘉文","keywords":null,"language":"cn","category":["知识笔记"],"tag":["计算机语言","嵌入式学习"],"mathjax":true,"toc":true,"comments":null,"description":"C++ primer 笔记 嵌入式自学开始啦~ 为了自己的贾维斯 笔记总结于 《c++ primer》 第二章 用 double 通常比 float 好 无符号的变量应注意：循环中的问题，负值取模（如 unsigned int 模 2^32，即 8 字节） 八进制 int month = 09 报错 初始化列表时丢失数据会报错：int i = {3.14} //错 double salary = wage = 999.99 只对 salary 定义，如果 wage 已定义就不会报错 使用未初始化的变量难调试，建议初始化每一个内置类型变量 变量小写字母开头，类大写开头，单词间有区分（如 one_two 或 oneTwo） 一个变量的周期从声明开始到作用域末端结束","head":[["meta",{"property":"og:url","content":"http://wujiawen.xyz/posts/notes/articles/%E7%AC%94%E8%AE%B0Cplusplusprimer.html"}],["meta",{"property":"og:site_name","content":"记忆笔书"}],["meta",{"property":"og:title","content":"嵌入式学习之（四）|C++ primer"}],["meta",{"property":"og:description","content":"C++ primer 笔记 嵌入式自学开始啦~ 为了自己的贾维斯 笔记总结于 《c++ primer》 第二章 用 double 通常比 float 好 无符号的变量应注意：循环中的问题，负值取模（如 unsigned int 模 2^32，即 8 字节） 八进制 int month = 09 报错 初始化列表时丢失数据会报错：int i = {3.14} //错 double salary = wage = 999.99 只对 salary 定义，如果 wage 已定义就不会报错 使用未初始化的变量难调试，建议初始化每一个内置类型变量 变量小写字母开头，类大写开头，单词间有区分（如 one_two 或 oneTwo） 一个变量的周期从声明开始到作用域末端结束"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"Kevin 吴嘉文"}],["meta",{"property":"article:tag","content":"计算机语言"}],["meta",{"property":"article:tag","content":"嵌入式学习"}],["meta",{"property":"article:published_time","content":"2020-10-13T00:00:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"嵌入式学习之（四）|C++ primer\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2020-10-13T00:00:00.000Z\\",\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Kevin 吴嘉文\\"}]}"]]},"headers":[{"level":2,"title":"第二章","slug":"第二章","link":"#第二章","children":[{"level":3,"title":"引用，指针","slug":"引用-指针","link":"#引用-指针","children":[]},{"level":3,"title":"const","slug":"const","link":"#const","children":[]},{"level":3,"title":"constexpr","slug":"constexpr","link":"#constexpr","children":[]},{"level":3,"title":"auto 类型","slug":"auto-类型","link":"#auto-类型","children":[]},{"level":3,"title":"decltype","slug":"decltype","link":"#decltype","children":[]},{"level":3,"title":"struct","slug":"struct","link":"#struct","children":[]},{"level":3,"title":"头文件","slug":"头文件","link":"#头文件","children":[]}]},{"level":2,"title":"第三章","slug":"第三章","link":"#第三章","children":[{"level":3,"title":"字符串","slug":"字符串","link":"#字符串","children":[]},{"level":3,"title":"容器","slug":"容器","link":"#容器","children":[]},{"level":3,"title":"vector","slug":"vector","link":"#vector","children":[]},{"level":3,"title":"迭代器","slug":"迭代器","link":"#迭代器","children":[]},{"level":3,"title":"数组","slug":"数组","link":"#数组","children":[]},{"level":3,"title":"指针和数组","slug":"指针和数组","link":"#指针和数组","children":[]},{"level":3,"title":"其他","slug":"其他","link":"#其他","children":[]}]},{"level":2,"title":"第四章","slug":"第四章","link":"#第四章","children":[{"level":3,"title":"","slug":"","link":"#","children":[]}]},{"level":2,"title":"第五章","slug":"第五章","link":"#第五章","children":[]},{"level":2,"title":"第六章","slug":"第六章","link":"#第六章","children":[{"level":3,"title":"传递数组","slug":"传递数组","link":"#传递数组","children":[]},{"level":3,"title":"返回数组指针","slug":"返回数组指针","link":"#返回数组指针","children":[]},{"level":3,"title":"函数重载","slug":"函数重载","link":"#函数重载","children":[]},{"level":3,"title":"函数默认实参","slug":"函数默认实参","link":"#函数默认实参","children":[]},{"level":3,"title":"内联函数和 constexpr","slug":"内联函数和-constexpr","link":"#内联函数和-constexpr","children":[]},{"level":3,"title":"调试帮助","slug":"调试帮助","link":"#调试帮助","children":[]},{"level":3,"title":"函数匹配","slug":"函数匹配","link":"#函数匹配","children":[]},{"level":3,"title":"函数指针","slug":"函数指针","link":"#函数指针","children":[]}]},{"level":2,"title":"第七章 类","slug":"第七章-类","link":"#第七章-类","children":[]},{"level":2,"title":"第八章","slug":"第八章","link":"#第八章","children":[{"level":3,"title":"IO 类","slug":"io-类","link":"#io-类","children":[]}]},{"level":2,"title":"第九章 容器","slug":"第九章-容器","link":"#第九章-容器","children":[{"level":3,"title":"顺序容器操作","slug":"顺序容器操作","link":"#顺序容器操作","children":[]}]},{"level":2,"title":"第十章 泛型算法","slug":"第十章-泛型算法","link":"#第十章-泛型算法","children":[{"level":3,"title":"lambda","slug":"lambda","link":"#lambda","children":[]},{"level":3,"title":"迭代器","slug":"迭代器-1","link":"#迭代器-1","children":[]},{"level":3,"title":"特定容器算法","slug":"特定容器算法","link":"#特定容器算法","children":[]}]},{"level":2,"title":"第 十一 章 关联容器","slug":"第-十一-章-关联容器","link":"#第-十一-章-关联容器","children":[]},{"level":2,"title":"第 十二 章 动态内存","slug":"第-十二-章-动态内存","link":"#第-十二-章-动态内存","children":[{"level":3,"title":"动态数组","slug":"动态数组","link":"#动态数组","children":[]}]},{"level":2,"title":"第 十三 章 拷贝控制","slug":"第-十三-章-拷贝控制","link":"#第-十三-章-拷贝控制","children":[]},{"level":2,"title":"第 十四 章 重载运算与类型转换","slug":"第-十四-章-重载运算与类型转换","link":"#第-十四-章-重载运算与类型转换","children":[]},{"level":2,"title":"第 十五 章 面向对象程序设计","slug":"第-十五-章-面向对象程序设计","link":"#第-十五-章-面向对象程序设计","children":[]},{"level":2,"title":"第 十六 章 模板与泛型编程","slug":"第-十六-章-模板与泛型编程","link":"#第-十六-章-模板与泛型编程","children":[]},{"level":2,"title":"其他","slug":"其他-1","link":"#其他-1","children":[]}],"git":{},"readingTime":{"minutes":22.22,"words":6666},"filePathRelative":"posts/notes/articles/笔记Cplusplusprimer.md","localizedDate":"2020年10月13日","excerpt":"<h1> C++ primer 笔记</h1>\\n<blockquote>\\n<p>嵌入式自学开始啦~ 为了自己的贾维斯</p>\\n<p>笔记总结于 《c++ primer》</p>\\n</blockquote>\\n<!-- more-->\\n<h2> 第二章</h2>\\n<ul>\\n<li>\\n<p>用 double 通常比 float 好</p>\\n</li>\\n<li>\\n<p>无符号的变量应注意：循环中的问题，负值取模（如 unsigned int 模 2^32，即 8 字节）</p>\\n</li>\\n<li>\\n<p>八进制  <code>int month = 09</code> 报错</p>\\n</li>\\n<li>\\n<p>初始化列表时丢失数据会报错：<code>int i = {3.14} //错</code></p>\\n</li>\\n<li>\\n<p><code>double salary = wage = 999.99</code> 只对 salary 定义，如果 wage 已定义就不会报错</p>\\n</li>\\n<li>\\n<p>使用未初始化的变量难调试，建议初始化每一个内置类型变量</p>\\n</li>\\n<li>\\n<p>变量小写字母开头，类大写开头，单词间有区分（如 one_two 或 oneTwo）</p>\\n</li>\\n<li>\\n<p>一个变量的周期从声明开始到作用域末端结束</p>\\n</li>\\n</ul>","autoDesc":true}');export{l as data};
