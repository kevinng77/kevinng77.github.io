const t=JSON.parse('{"key":"v-39a315de","path":"/posts/notes/articles/%E7%AC%94%E8%AE%B0semantic_similarity.html","title":"论文笔记|句向量生成于匹配","lang":"zh-CN","frontmatter":{"title":"论文笔记|句向量生成于匹配","date":"2022-03-24T00:00:00.000Z","author":"Kevin 吴嘉文","category":["知识笔记"],"tag":["NLP","论文笔记"],"mathjax":true,"toc":true,"comments":"笔记","description":"概述 语义相似度匹配大致分为孪生网络模型和交互式模型。孪生网络模型主要思路在于先分别获得两个句子的表征，而后通过其他距离指标判断句子的语义相似度。部分学者也将 孪生网络 称为 双塔模型 、 “暹罗”架构 等等。而交互式模型则是将两个不同的句子的中间编码进行交互，直接通过深度学习模型计算出相似度，而非采用距离指标进行判断。 该任务下，常见的数据集有 STS、SICK 等。 paper with code - 文本语义相似度 benchmark","head":[["meta",{"property":"og:url","content":"http://wujiawen.xyz/posts/notes/articles/%E7%AC%94%E8%AE%B0semantic_similarity.html"}],["meta",{"property":"og:site_name","content":"记忆笔书"}],["meta",{"property":"og:title","content":"论文笔记|句向量生成于匹配"}],["meta",{"property":"og:description","content":"概述 语义相似度匹配大致分为孪生网络模型和交互式模型。孪生网络模型主要思路在于先分别获得两个句子的表征，而后通过其他距离指标判断句子的语义相似度。部分学者也将 孪生网络 称为 双塔模型 、 “暹罗”架构 等等。而交互式模型则是将两个不同的句子的中间编码进行交互，直接通过深度学习模型计算出相似度，而非采用距离指标进行判断。 该任务下，常见的数据集有 STS、SICK 等。 paper with code - 文本语义相似度 benchmark"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-02-22T13:54:51.000Z"}],["meta",{"property":"article:author","content":"Kevin 吴嘉文"}],["meta",{"property":"article:tag","content":"NLP"}],["meta",{"property":"article:tag","content":"论文笔记"}],["meta",{"property":"article:published_time","content":"2022-03-24T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-02-22T13:54:51.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"论文笔记|句向量生成于匹配\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-03-24T00:00:00.000Z\\",\\"dateModified\\":\\"2023-02-22T13:54:51.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Kevin 吴嘉文\\"}]}"]]},"headers":[{"level":2,"title":"概述","slug":"概述","link":"#概述","children":[{"level":3,"title":"孪生网络模型","slug":"孪生网络模型","link":"#孪生网络模型","children":[]}]},{"level":2,"title":"参考","slug":"参考","link":"#参考","children":[{"level":3,"title":"相关论文","slug":"相关论文","link":"#相关论文","children":[]},{"level":3,"title":"其他链接","slug":"其他链接","link":"#其他链接","children":[]}]}],"git":{"createdTime":1676542179000,"updatedTime":1677074091000,"contributors":[{"name":"kevinng77","email":"417333277@qq.com","commits":2}]},"readingTime":{"minutes":10.33,"words":3098},"filePathRelative":"posts/notes/articles/笔记semantic_similarity.md","localizedDate":"2022年3月24日","excerpt":"<h2> 概述</h2>\\n<p>语义相似度匹配大致分为孪生网络模型和交互式模型。孪生网络模型主要思路在于先分别获得两个句子的表征，而后通过其他距离指标判断句子的语义相似度。部分学者也将 <strong>孪生网络</strong> 称为 <strong>双塔模型</strong> 、 <strong>“暹罗”架构</strong>  等等。而交互式模型则是将两个不同的句子的中间编码进行交互，直接通过深度学习模型计算出相似度，而非采用距离指标进行判断。</p>\\n<p>该任务下，常见的数据集有 STS、SICK 等。</p>\\n<p><a href=\\"https://paperswithcode.com/task/semantic-textual-similarity\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">paper with code - 文本语义相似度 benchmark</a></p>","autoDesc":true}');export{t as data};
