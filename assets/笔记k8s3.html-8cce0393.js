import{_ as l,E as i,S as t,W as c,$ as a,a3 as s,Z as n,aS as p}from"./framework-d5c0d2cb.js";const d={},u=a("p",null,"https://blog.csdn.net/weixin_53072519/article/details/126693667",-1),r=a("p",null,"helm",-1),o={href:"https://helm.sh/",target:"_blank",rel:"noopener noreferrer"},m=a("p",null,"Helm 为 K8S 提供了包管理工具，如 Linux 下的 yum，apt 等。",-1),h=a("p",null,"Helm 的三个概念：",-1),v=a("ul",null,[a("li",null,"Chart：一系列用于创建 K8S 应用的信息。相当于 helm 的安装包。类似于 apt 的 dpkg 或者 Yum 的 RPM。"),a("li",null,"config：配置文件"),a("li",null,"release：运行 chart 之后生成的实例，与对应的 config 绑定在一起。release 与 chart 类似于 docker 中的容器实例与镜像的关系。")],-1),b=a("h3",{id:"快速开始",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#快速开始","aria-hidden":"true"},"#"),s(" 快速开始")],-1),k=a("p",null,"安装",-1),g={href:"https://github.com/helm/helm/releases",target:"_blank",rel:"noopener noreferrer"},y=p(`<p>移动到系统的 <code>/usr/local/bin/</code> 即可：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">tar</span> <span class="token parameter variable">-zxvf</span> helm-v3.10.0-linux-amd64.tar.gz
<span class="token function">mv</span> linux-amd64/helm /usr/local/bin/helm
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>其他安装方式参考官网。</p><p>测试安装成功：<code>helm help</code></p><h4 id="配置仓库" tabindex="-1"><a class="header-anchor" href="#配置仓库" aria-hidden="true">#</a> 配置仓库</h4><p>一般国内的话，配置微软或者阿里云仓库。添加仓库时，通常会因为网络连接问题出现添加不上的情况，可以切换下 VPN 多次尝试添加。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>helm repo <span class="token function">add</span> stable http://mirror.azure.cn/kubernetes/charts
helm repo update
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>查看已经配置的仓库：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>helm repo list
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>删除仓库</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>helm repo remove stable
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="安装应用" tabindex="-1"><a class="header-anchor" href="#安装应用" aria-hidden="true">#</a> 安装应用</h4><ol><li>搜索应用</li></ol><p>在已添加的仓库里搜索你的应用：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>helm search repo mysql
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>在 Artifact Hub 中搜索你的应用（包括你未添加的仓库）</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>helm search hub mysql
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="2"><li>查看 chart 的配置属性，如依赖镜像，资源限制，端口服务等。</li></ol><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>helm show values stable/mysql
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>我们可以将 show values 得到的文件进行修改，以配置我们自己的 chart：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>helm show values stable/mysql <span class="token operator">&gt;</span> my_chart_values.yaml
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="3"><li>安装应用</li></ol><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>helm upgrade --cleanup-on-fail <span class="token punctuation">\\</span>
  <span class="token parameter variable">--install</span> myhub jupyterhub/jupyterhub <span class="token punctuation">\\</span>
  <span class="token parameter variable">--namespace</span> dev <span class="token punctuation">\\</span>
  --create-namespace <span class="token punctuation">\\</span>
  <span class="token parameter variable">--values</span> my_config.yaml
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>除了用 --values 传递配置函数，还可以直接传递 <code>--set </code> 参数。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>查看安装进度：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code></code></pre><div class="line-numbers" aria-hidden="true"></div></div><h3 id="自定义-chart" tabindex="-1"><a class="header-anchor" href="#自定义-chart" aria-hidden="true">#</a> 自定义 Chart</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>helm create mychart
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>生成一个 mychart 文件夹，里面包括 Chart 模板目录，目录下包括：</p><ul><li>charts 文件夹</li><li>Chart.yaml</li><li>templates 文件夹</li><li>values.yaml（上一节中我们 show value 得到的就是这个文件的内容）</li></ul><p>在 templates 中创建服务所需要的各种 <code>yaml</code> 文件。如</p><ul><li>deployment.yaml</li><li>service.yaml</li></ul><h4 id="安装-chart" tabindex="-1"><a class="header-anchor" href="#安装-chart" aria-hidden="true">#</a> 安装 Chart</h4><p>可以直接使用刚刚的 mychart 文件夹安装：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>helm <span class="token function">install</span> myapp mychart/
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>修改 yaml 文件后，同样可以直接使用 helm 升级 app：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>helm upgrade myapp mychart/
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="高效复用-yaml-文件" tabindex="-1"><a class="header-anchor" href="#高效复用-yaml-文件" aria-hidden="true">#</a> 高效复用 yaml 文件</h4><p>可以在 <code>values.yaml</code> 中配置参数，而后 helm 会将全局参数引用到 templates 中的文件，从而实现仅通过修改 <code>values.yaml</code>，就可以部署不同配置的同类型 k8s 服务。</p><p>values.yaml 中定义：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>replicas: <span class="token number">1</span>
image: myimage
tag: <span class="token number">1.0</span>
label: mylabel
port: <span class="token number">80</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在 <code>deployment.yaml</code> 中引用：</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> apps/v1
<span class="token key atrule">kind</span><span class="token punctuation">:</span> Deployment
<span class="token key atrule">metadata</span><span class="token punctuation">:</span>
  <span class="token key atrule">creationTimestamp</span><span class="token punctuation">:</span> <span class="token null important">null</span>
  <span class="token key atrule">labels</span><span class="token punctuation">:</span>
    <span class="token key atrule">app</span><span class="token punctuation">:</span> myweb1
  <span class="token key atrule">name</span><span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token punctuation">{</span> .Release.Name<span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">-</span>deploy
<span class="token key atrule">spec</span><span class="token punctuation">:</span>
  <span class="token key atrule">replicas</span><span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token punctuation">{</span> .Values.replicas<span class="token punctuation">}</span><span class="token punctuation">}</span>
  <span class="token key atrule">selector</span><span class="token punctuation">:</span>
    <span class="token key atrule">matchLabels</span><span class="token punctuation">:</span>
      <span class="token key atrule">app</span><span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token punctuation">{</span> .Values.label<span class="token punctuation">}</span><span class="token punctuation">}</span>
  <span class="token key atrule">strategy</span><span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
  <span class="token key atrule">template</span><span class="token punctuation">:</span>
    <span class="token key atrule">metadata</span><span class="token punctuation">:</span>
      <span class="token key atrule">labels</span><span class="token punctuation">:</span>
        <span class="token key atrule">app</span><span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token punctuation">{</span> .Values.label<span class="token punctuation">}</span><span class="token punctuation">}</span>
    <span class="token key atrule">spec</span><span class="token punctuation">:</span>
      <span class="token key atrule">containers</span><span class="token punctuation">:</span>
      <span class="token punctuation">-</span> <span class="token key atrule">image</span><span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token punctuation">{</span> .Values.image<span class="token punctuation">}</span><span class="token punctuation">}</span>
<span class="token punctuation">...</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="储存方案" tabindex="-1"><a class="header-anchor" href="#储存方案" aria-hidden="true">#</a> 储存方案</h2>`,45);function _(x,f){const e=i("ExternalLinkIcon");return t(),c("div",null,[u,r,a("p",null,[a("a",o,[s("官网"),n(e)])]),m,h,v,b,k,a("p",null,[s("下载 helm 包 "),a("a",g,[s("desired version"),n(e)]),s(" ，而后解压。")]),y])}const w=l(d,[["render",_],["__file","笔记k8s3.html.vue"]]);export{w as default};
