import{_ as o}from"./plugin-vue_export-helper-c27b6911.js";import{r as p,o as t,c,a as s,b as n,d as l,f as e}from"./app-80a5df51.js";const r="/assets/img/autogen/image-20240525181456648.png",i={},u=s("p",null,"AUTOGEN 是一个开源平台，主要用于创建和管理自动化对话代理（agents）。这些代理可以完成多种任务，比如回答问题、执行函数，甚至与其他代理进行交互。",-1),y=s("p",null,"本文旨在介绍 Autogen 中的关键组件 Conversation Agent，并对其中的 Multi-Agent 功能实现做简单的源码分析。",-1),d={href:"https://microsoft.github.io/autogen/docs/tutorial/introduction/",target:"_blank",rel:"noopener noreferrer"},v={href:"https://github.com/microsoft/autogen/commit/5a5c0f2a11bfc1efe3955fa9f7e2ec38aedef14e",target:"_blank",rel:"noopener noreferrer"},b=e('<h2 id="_1-autogen-agent-实现" tabindex="-1"><a class="header-anchor" href="#_1-autogen-agent-实现" aria-hidden="true">#</a> 1. Autogen Agent 实现</h2><figure><img src="'+r+'" alt="来源：Artificial Intelligence Foundations of computational agents" tabindex="0" loading="lazy"><figcaption>来源：Artificial Intelligence Foundations of computational agents</figcaption></figure><p>Autogen 中 agent 的设计思路大致为：</p><h3 id="abilities-prior-knowledge" tabindex="-1"><a class="header-anchor" href="#abilities-prior-knowledge" aria-hidden="true">#</a> Abilities &amp; Prior Knowledge</h3><ul><li>逻辑思考能力：</li></ul><p>和大多数智能体设计一样，Autogen 使用了语言模型（LLM）作为逻辑单元。它通过调用 OpenAI 的 Python SDK 来访问 LLM 服务。因此，任何部署了 OpenAI Compatible API 的 LLM 都可以无缝对接到 Autogen。</p><ul><li>工具选择的能力</li></ul>',7),m={href:"https://platform.openai.com/docs/api-reference/chat/create",target:"_blank",rel:"noopener noreferrer"},E=s("code",null,"tools",-1),g=e(`<details class="hint-container details"><summary>查看示例 openai 调用 tools 请求</summary><p><strong>示例请求</strong></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="shiki github-light" style="background-color:#fff;" tabindex="0"><code><span class="line"><span style="color:#6F42C1;">curl</span><span style="color:#24292E;"> </span><span style="color:#032F62;">https://api.openai.com/v1/chat/completions</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">\\</span></span>
<span class="line"><span style="color:#24292E;">-H </span><span style="color:#032F62;">&quot;Content-Type: application/json&quot;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">\\</span></span>
<span class="line"><span style="color:#24292E;">-H </span><span style="color:#032F62;">&quot;Authorization: Bearer </span><span style="color:#24292E;">$OPENAI_API_KEY</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">\\</span></span>
<span class="line"><span style="color:#24292E;">-d </span><span style="color:#032F62;">&#39;{</span></span>
<span class="line"><span style="color:#032F62;">  &quot;model&quot;: &quot;gpt-4-turbo&quot;,</span></span>
<span class="line"><span style="color:#032F62;">  &quot;messages&quot;: [</span></span>
<span class="line"><span style="color:#032F62;">    {</span></span>
<span class="line"><span style="color:#032F62;">      &quot;role&quot;: &quot;user&quot;,</span></span>
<span class="line"><span style="color:#032F62;">      &quot;content&quot;: &quot;What&#39;</span><span style="color:#005CC5;">\\&#39;</span><span style="color:#032F62;">&#39;s the weather like in Boston today?&quot;</span></span>
<span class="line"><span style="color:#032F62;">    }</span></span>
<span class="line"><span style="color:#032F62;">  ],</span></span>
<span class="line"><span style="color:#032F62;">  &quot;tools&quot;: [</span></span>
<span class="line"><span style="color:#032F62;">    {</span></span>
<span class="line"><span style="color:#032F62;">      &quot;type&quot;: &quot;function&quot;,</span></span>
<span class="line"><span style="color:#032F62;">      &quot;function&quot;: {</span></span>
<span class="line"><span style="color:#032F62;">        &quot;name&quot;: &quot;get_current_weather&quot;,</span></span>
<span class="line"><span style="color:#032F62;">        &quot;description&quot;: &quot;Get the current weather in a given location&quot;,</span></span>
<span class="line"><span style="color:#032F62;">        &quot;parameters&quot;: {</span></span>
<span class="line"><span style="color:#032F62;">          &quot;type&quot;: &quot;object&quot;,</span></span>
<span class="line"><span style="color:#032F62;">          &quot;properties&quot;: {</span></span>
<span class="line"><span style="color:#032F62;">            &quot;location&quot;: {</span></span>
<span class="line"><span style="color:#032F62;">              &quot;type&quot;: &quot;string&quot;,</span></span>
<span class="line"><span style="color:#032F62;">              &quot;description&quot;: &quot;The city and state, e.g. San Francisco, CA&quot;</span></span>
<span class="line"><span style="color:#032F62;">            },</span></span>
<span class="line"><span style="color:#032F62;">            &quot;unit&quot;: {</span></span>
<span class="line"><span style="color:#032F62;">              &quot;type&quot;: &quot;string&quot;,</span></span>
<span class="line"><span style="color:#032F62;">              &quot;enum&quot;: [&quot;celsius&quot;, &quot;fahrenheit&quot;]</span></span>
<span class="line"><span style="color:#032F62;">            }</span></span>
<span class="line"><span style="color:#032F62;">          },</span></span>
<span class="line"><span style="color:#032F62;">          &quot;required&quot;: [&quot;location&quot;]</span></span>
<span class="line"><span style="color:#032F62;">        }</span></span>
<span class="line"><span style="color:#032F62;">      }</span></span>
<span class="line"><span style="color:#032F62;">    }</span></span>
<span class="line"><span style="color:#032F62;">  ],</span></span>
<span class="line"><span style="color:#032F62;">  &quot;tool_choice&quot;: &quot;auto&quot;</span></span>
<span class="line"><span style="color:#032F62;">}&#39;</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>示例回复</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="shiki github-light" style="background-color:#fff;" tabindex="0"><code><span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">&quot;id&quot;</span><span style="color:#005CC5;">:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;chatcmpl-abc123&quot;,</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">&quot;object&quot;</span><span style="color:#005CC5;">:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;chat.completion&quot;,</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">&quot;created&quot;</span><span style="color:#005CC5;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1699896916</span><span style="color:#032F62;">,</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">&quot;model&quot;</span><span style="color:#005CC5;">:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;gpt-3.5-turbo-0125&quot;,</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">&quot;choices&quot;</span><span style="color:#005CC5;">:</span><span style="color:#24292E;"> [</span></span>
<span class="line"><span style="color:#24292E;">    {</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6F42C1;">&quot;index&quot;</span><span style="color:#005CC5;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#032F62;">,</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6F42C1;">&quot;message&quot;</span><span style="color:#005CC5;">:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">{</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6F42C1;">&quot;role&quot;</span><span style="color:#005CC5;">:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;assistant&quot;,</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6F42C1;">&quot;content&quot;</span><span style="color:#005CC5;">:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">null,</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6F42C1;">&quot;tool_calls&quot;</span><span style="color:#005CC5;">:</span><span style="color:#24292E;"> [</span></span>
<span class="line"><span style="color:#24292E;">          {</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#6F42C1;">&quot;id&quot;</span><span style="color:#005CC5;">:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;call_abc123&quot;,</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#6F42C1;">&quot;type&quot;</span><span style="color:#005CC5;">:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;function&quot;,</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#6F42C1;">&quot;function&quot;</span><span style="color:#005CC5;">:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">{</span></span>
<span class="line"><span style="color:#24292E;">              </span><span style="color:#6F42C1;">&quot;name&quot;</span><span style="color:#005CC5;">:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;get_current_weather&quot;,</span></span>
<span class="line"><span style="color:#24292E;">              </span><span style="color:#6F42C1;">&quot;arguments&quot;</span><span style="color:#005CC5;">:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;{\\n</span><span style="color:#005CC5;">\\&quot;</span><span style="color:#032F62;">location</span><span style="color:#005CC5;">\\&quot;</span><span style="color:#032F62;">: </span><span style="color:#005CC5;">\\&quot;</span><span style="color:#032F62;">Boston, MA</span><span style="color:#005CC5;">\\&quot;</span><span style="color:#032F62;">\\n}&quot;</span></span>
<span class="line"><span style="color:#24292E;">            }</span></span>
<span class="line"><span style="color:#24292E;">          }</span></span>
<span class="line"><span style="color:#24292E;">        ]</span></span>
<span class="line"><span style="color:#24292E;">      },</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6F42C1;">&quot;logprobs&quot;</span><span style="color:#005CC5;">:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">null,</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6F42C1;">&quot;finish_reason&quot;</span><span style="color:#005CC5;">:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;tool_calls&quot;</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">  ],</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">&quot;usage&quot;</span><span style="color:#005CC5;">:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">{</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">&quot;prompt_tokens&quot;</span><span style="color:#005CC5;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">82</span><span style="color:#032F62;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">&quot;completion_tokens&quot;</span><span style="color:#005CC5;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">17</span><span style="color:#032F62;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">&quot;total_tokens&quot;</span><span style="color:#005CC5;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">99</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><ul><li>通信功能</li></ul>`,2),_={href:"https://github.com/microsoft/autogen/blob/5a5c0f2a11bfc1efe3955fa9f7e2ec38aedef14e/autogen/agentchat/conversable_agent.py#L611",target:"_blank",rel:"noopener noreferrer"},h={href:"https://github.com/microsoft/autogen/blob/5a5c0f2a11bfc1efe3955fa9f7e2ec38aedef14e/autogen/agentchat/conversable_agent.py#L785C9-L785C16",target:"_blank",rel:"noopener noreferrer"},f=e('<h3 id="action-stimuli" tabindex="-1"><a class="header-anchor" href="#action-stimuli" aria-hidden="true">#</a> Action &amp; Stimuli</h3><p>智能体在选择了合适的工具后，可以执行该工具并接收工具返回的结果。</p><h3 id="goals-preference" tabindex="-1"><a class="header-anchor" href="#goals-preference" aria-hidden="true">#</a> Goals/Preference</h3><p>Autogen 通过为不同的智能体提供不同的系统提示词来实现个性化设置。</p><h3 id="past-experience" tabindex="-1"><a class="header-anchor" href="#past-experience" aria-hidden="true">#</a> Past Experience</h3><p>每个智能体都会维护自己的历史记录，以 List[Message] 的形式保存，其中 Message 包括了历史对话信息和执行函数的结果等</p><h2 id="_2-autogen-部分细节" tabindex="-1"><a class="header-anchor" href="#_2-autogen-部分细节" aria-hidden="true">#</a> 2. Autogen 部分细节</h2><h3 id="_2-1-conversable-agent" tabindex="-1"><a class="header-anchor" href="#_2-1-conversable-agent" aria-hidden="true">#</a> 2.1 Conversable Agent</h3>',8),q={href:"https://github.com/microsoft/autogen/blob/5a5c0f2a11bfc1efe3955fa9f7e2ec38aedef14e/autogen/agentchat/conversable_agent.py#L46",target:"_blank",rel:"noopener noreferrer"},C=s("h4",{id:"_2-1-1-为-conversable-agent-配置-llm",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#_2-1-1-为-conversable-agent-配置-llm","aria-hidden":"true"},"#"),n(" 2.1.1 为 Conversable Agent 配置 LLM")],-1),A={href:"https://github.com/microsoft/autogen/blob/5a5c0f2a11bfc1efe3955fa9f7e2ec38aedef14e/autogen/agentchat/conversable_agent.py#L46",target:"_blank",rel:"noopener noreferrer"},F=s("code",null,"config_list",-1),D=s("code",null,"OpenAI",-1),k=e(`<div class="language-python line-numbers-mode" data-ext="py"><pre class="shiki github-light" style="background-color:#fff;" tabindex="0"><code><span class="line"><span style="color:#D73A49;">from</span><span style="color:#24292E;"> autogen </span><span style="color:#D73A49;">import</span><span style="color:#24292E;"> ConversableAgent</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">config_list </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> [</span></span>
<span class="line"><span style="color:#24292E;">        {</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#032F62;">&quot;api_type&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;azure&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#032F62;">&quot;model&quot;</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">AZURE_OPENAI_CHAT_DEPLOYMENT_NAME</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#032F62;">&quot;api_key&quot;</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">AZURE_OPENAI_API_KEY</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#032F62;">&quot;http_client&quot;</span><span style="color:#24292E;">: xxxxx,  </span><span style="color:#6A737D;"># 确保传入的是可以进行 deepcopy 的对象</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#032F62;">&quot;base_url&quot;</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">AZURE_OPENAI_ENDPOINT</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">        }</span></span>
<span class="line"><span style="color:#24292E;">    ]</span></span>
<span class="line"><span style="color:#24292E;">agent </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> ConversableAgent(</span><span style="color:#032F62;">&quot;chatbot&quot;</span><span style="color:#24292E;">,</span><span style="color:#E36209;">llm_config</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">{</span><span style="color:#032F62;">&quot;config_list&quot;</span><span style="color:#24292E;">: config_list})</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>此时，Conversable Agent 会使用类似以下的方式创建 OpenAI 实例：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="shiki github-light" style="background-color:#fff;" tabindex="0"><code><span class="line"><span style="color:#24292E;">client </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> AzureOpenAI(</span><span style="color:#D73A49;">**</span><span style="color:#24292E;">config_list)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,3),x={href:"https://github.com/microsoft/autogen/blob/5a5c0f2a11bfc1efe3955fa9f7e2ec38aedef14e/autogen/oai/client.py#L410",target:"_blank",rel:"noopener noreferrer"},L=s("h4",{id:"_2-1-2-generate-reply",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#_2-1-2-generate-reply","aria-hidden":"true"},"#"),n(" 2.1.2 Generate Reply")],-1),I={href:"https://github.com/microsoft/autogen/blob/5a5c0f2a11bfc1efe3955fa9f7e2ec38aedef14e/autogen/agentchat/conversable_agent.py#L1918",target:"_blank",rel:"noopener noreferrer"},M=e(`<div class="language-python line-numbers-mode" data-ext="py"><pre class="shiki github-light" style="background-color:#fff;" tabindex="0"><code><span class="line"><span style="color:#24292E;">reply </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> agent.generate_reply(</span><span style="color:#E36209;">messages</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">[{</span><span style="color:#032F62;">&quot;content&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;你好&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;role&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;user&quot;</span><span style="color:#24292E;">}])</span></span>
<span class="line"><span style="color:#005CC5;">print</span><span style="color:#24292E;">(reply) </span><span style="color:#6A737D;"># 你好，有什么可以帮助你的？</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>此过程包括消息的预处理、历史消息的整理和回复的生成等步骤，允许通过定制化的钩子（hook）来处理特定的逻辑。为了考虑到 agent 调用工具，对话，参考历史经验等功能，<code>generate_reply</code> 的大致运行思路如下：</p><ul><li><strong>步骤一：处理最后接收的消息（process_last_received_message）</strong></li></ul><p>此功能通过注册的钩子（hook）使用并可能修改最后一条消息的文本:</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="shiki github-light" style="background-color:#fff;" tabindex="0"><code><span class="line"><span style="color:#24292E;">messages </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">self</span><span style="color:#24292E;">.process_last_received_message(messages)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>我们只需要再 <code>self.hook_lists[&#39;process_last_received_message&#39;]</code> 中添加对应的函数，就能自定义处理消息的方法：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="shiki github-light" style="background-color:#fff;" tabindex="0"><code><span class="line"><span style="color:#6A737D;"># process_last_received_message 伪代码</span></span>
<span class="line"><span style="color:#D73A49;">def</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">process_last_received_message</span><span style="color:#24292E;">(messages):</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">for</span><span style="color:#24292E;"> hook </span><span style="color:#D73A49;">in</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">self</span><span style="color:#24292E;">.hook_lists[</span><span style="color:#032F62;">&#39;process_last_received_message&#39;</span><span style="color:#24292E;">]:</span></span>
<span class="line"><span style="color:#24292E;">    messages[</span><span style="color:#D73A49;">-</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">][</span><span style="color:#032F62;">&quot;content&quot;</span><span style="color:#24292E;">] </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> hook(messages[</span><span style="color:#D73A49;">-</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">][</span><span style="color:#032F62;">&quot;content&quot;</span><span style="color:#24292E;">])</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> messages</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,7),N={href:"https://github.com/microsoft/autogen/blob/5a5c0f2a11bfc1efe3955fa9f7e2ec38aedef14e/autogen/agentchat/conversable_agent.py#L1961",target:"_blank",rel:"noopener noreferrer"},T=s("ul",null,[s("li",null,[s("strong",null,"步骤二：处理回复前的所有消息（process_all_messages_before_reply）")])],-1),w=s("p",null,[n("这一步骤与处理最后接收的消息相似，使用相同的逻辑。我们只需要再 "),s("code",null,"self.hook_lists['process_all_messages_before_reply']"),n(" 中添加对应的函数，就能自定义处理消息的方法。")],-1),O=s("p",null,"因为 LLM 上下文长度有限，因此通常这步可以用来对历史信息进行整理，筛选等等。",-1),P={href:"https://github.com/microsoft/autogen/blob/5a5c0f2a11bfc1efe3955fa9f7e2ec38aedef14e/autogen/agentchat/conversable_agent.py#L1965",target:"_blank",rel:"noopener noreferrer"},G=e(`<ul><li><strong>步骤三：生成回复（generate_reply）</strong></li></ul><p>Autogen 把多种不同功能的 agent 都整合到了 Conversable Agent 当中，agent 生成回复时的逻辑大致如下：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="shiki github-light" style="background-color:#fff;" tabindex="0"><code><span class="line"><span style="color:#6A737D;"># 伪代码   </span></span>
<span class="line"><span style="color:#D73A49;">for</span><span style="color:#24292E;"> reply_func_tuple </span><span style="color:#D73A49;">in</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">self</span><span style="color:#24292E;">._reply_func_list:</span></span>
<span class="line"><span style="color:#24292E;">    final, reply </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> reply_func(</span><span style="color:#E36209;">messages</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">messages, </span><span style="color:#E36209;">sender</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">sender, </span><span style="color:#E36209;">config</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">reply_func_tuple[</span><span style="color:#032F62;">&quot;config&quot;</span><span style="color:#24292E;">])</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> final:</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> reply</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>默认情况下，<code>self._reply_func_list</code> 中包含以下几个函数：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="shiki github-light" style="background-color:#fff;" tabindex="0"><code><span class="line"><span style="color:#005CC5;">self</span><span style="color:#24292E;">._reply_func_list </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> [ConversableAgent.check_termination_and_human_reply,</span></span>
<span class="line"><span style="color:#24292E;">ConversableAgent.generate_function_call_reply,</span></span>
<span class="line"><span style="color:#24292E;">ConversableAgent.generate_tool_calls_reply,</span></span>
<span class="line"><span style="color:#24292E;">ConversableAgent.generate_oai_reply]</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,5),R={href:"https://github.com/microsoft/autogen/blob/5a5c0f2a11bfc1efe3955fa9f7e2ec38aedef14e/autogen/agentchat/conversable_agent.py#L1692",target:"_blank",rel:"noopener noreferrer"},U=s("p",null,"通过 messages 来判断现在时候需要终止 agent 对话，或者需要认为接入。",-1),z=s("p",null,"例如：当最后一个消息中包含了特定的终止字符；或对话轮数达到了上限等等。终止字符和对话上限都可以自定义。",-1),B=s("ul",null,[s("li",null,"generate_function_call_reply")],-1),j=s("p",null,[n("可以忽略这个函数，因为他被 "),s("code",null,"generate_tool_calls_reply"),n(" 取代了，基本上用不到")],-1),S={href:"https://github.com/microsoft/autogen/blob/5a5c0f2a11bfc1efe3955fa9f7e2ec38aedef14e/autogen/agentchat/conversable_agent.py#L1600",target:"_blank",rel:"noopener noreferrer"},W=s("p",null,"该函数给工具型的 agent 执行，llm 型的 agent 默认不触发。",-1),Y={href:"https://microsoft.github.io/autogen/docs/tutorial/tool-use",target:"_blank",rel:"noopener noreferrer"},V=e(`<div class="language-python line-numbers-mode" data-ext="py"><pre class="shiki github-light" style="background-color:#fff;" tabindex="0"><code><span class="line"><span style="color:#D73A49;">from</span><span style="color:#24292E;"> typing </span><span style="color:#D73A49;">import</span><span style="color:#24292E;"> Annotated, Literal</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">Operator </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> Literal[</span><span style="color:#032F62;">&quot;+&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;-&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;*&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;/&quot;</span><span style="color:#24292E;">]</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">def</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">calculator</span><span style="color:#24292E;">(a: </span><span style="color:#005CC5;">int</span><span style="color:#24292E;">, b: </span><span style="color:#005CC5;">int</span><span style="color:#24292E;">, operator: Annotated[Operator, </span><span style="color:#032F62;">&quot;operator&quot;</span><span style="color:#24292E;">]) -&gt; </span><span style="color:#005CC5;">int</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> operator </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;+&quot;</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> a </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> b</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">elif</span><span style="color:#24292E;"> operator </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;-&quot;</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> a </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> b</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">elif</span><span style="color:#24292E;"> operator </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;*&quot;</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> a </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> b</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">elif</span><span style="color:#24292E;"> operator </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;/&quot;</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">int</span><span style="color:#24292E;">(a </span><span style="color:#D73A49;">/</span><span style="color:#24292E;"> b)</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">else</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">raise</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">ValueError</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;Invalid operator&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">        </span></span>
<span class="line"><span style="color:#24292E;">user_proxy </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> ConversableAgent(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#E36209;">name</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;User&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#E36209;">llm_config</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">False</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#E36209;">human_input_mode</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;NEVER&quot;</span></span>
<span class="line"><span style="color:#24292E;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">user_proxy.register_for_execution(</span><span style="color:#E36209;">name</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;calculator&quot;</span><span style="color:#24292E;">)(calculator)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">reply </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> user_proxy.generate_reply(</span><span style="color:#E36209;">messages</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">[{</span><span style="color:#032F62;">&quot;role&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;user&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;content&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;tool_calls&quot;</span><span style="color:#24292E;">: [</span></span>
<span class="line"><span style="color:#24292E;">    {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#032F62;">&quot;id&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;123&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#032F62;">&quot;function&quot;</span><span style="color:#24292E;">: {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#032F62;">&quot;name&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;calculator&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#032F62;">&quot;arguments&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&#39;{&quot;a&quot;: 232, &quot;b&quot;: 40, &quot;operator&quot;: &quot;-&quot;}&#39;</span></span>
<span class="line"><span style="color:#24292E;">        }</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">]}])</span></span>
<span class="line"></span>
<span class="line"><span style="color:#032F62;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#032F62;">reply == {&#39;role&#39;: &#39;tool&#39;,</span></span>
<span class="line"><span style="color:#032F62;"> &#39;tool_responses&#39;: [{&#39;tool_call_id&#39;: &#39;123&#39;, &#39;role&#39;: &#39;tool&#39;, &#39;content&#39;: &#39;192&#39;}],</span></span>
<span class="line"><span style="color:#032F62;"> &#39;content&#39;: &#39;192&#39;}</span></span>
<span class="line"><span style="color:#032F62;"> &quot;&quot;&quot;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>user_proxy</code> 调用 <code>generate_reply</code> 时就会执行<code>generate_tool_calls_reply</code> 。大致思路就是把输入的 <code>tool_calls</code> 的参数，传递给对应的函数执行，然后返回函数执行的结果。</p>`,2),K={href:"https://github.com/microsoft/autogen/blob/5a5c0f2a11bfc1efe3955fa9f7e2ec38aedef14e/autogen/agentchat/conversable_agent.py#L1328",target:"_blank",rel:"noopener noreferrer"},H=e(`<p>调用 LLM 服务，根据当前的 messages 来生成回复。该函数分为 2 种情况，关联了函数，和不关联函数：</p><p><strong>不关联函数：</strong></p><p>默认情况下 Conversable Agent 是不关联函数的。如：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="shiki github-light" style="background-color:#fff;" tabindex="0"><code><span class="line"><span style="color:#D73A49;">from</span><span style="color:#24292E;"> autogen </span><span style="color:#D73A49;">import</span><span style="color:#24292E;"> ConversableAgent</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">agent </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> ConversableAgent(</span><span style="color:#032F62;">&quot;chatbot&quot;</span><span style="color:#24292E;">,</span><span style="color:#E36209;">llm_config</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">{</span><span style="color:#032F62;">&quot;config_list&quot;</span><span style="color:#24292E;">: config_list})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># 没有注册 tool 时候，使用 generate_reply</span></span>
<span class="line"><span style="color:#24292E;">reply </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> agent.generate_reply(</span><span style="color:#E36209;">messages</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">[{</span><span style="color:#032F62;">&quot;content&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;What is 1+1.&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;role&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;user&quot;</span><span style="color:#24292E;">}])</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><details class="hint-container details"><summary>没有注册 tool 时候发给 openai 的请求</summary><div class="language-python line-numbers-mode" data-ext="py"><pre class="shiki github-light" style="background-color:#fff;" tabindex="0"><code><span class="line"><span style="color:#032F62;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#032F62;">发给 openai 的 payload</span></span>
<span class="line"><span style="color:#032F62;">{&#39;messages&#39;: [{&#39;content&#39;: &quot;You are a helpful AI assistant. You can help with simple calculations. Return &#39;TERMINATE&#39; when the task is done.&quot;, </span></span>
<span class="line"><span style="color:#032F62;">&#39;role&#39;: &#39;system&#39;}, {&#39;content&#39;: &#39;What is 1+1.&#39;, &#39;role&#39;: &#39;user&#39;}], &#39;model&#39;: &#39;gpt-4-128k-0125&#39;}</span></span>
<span class="line"><span style="color:#032F62;">&quot;&quot;&quot;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><p>不关联函数时，就像和 GPT 对话一样回复正常内容。</p><p><strong>关联函数：</strong></p>`,7),Z={href:"https://microsoft.github.io/autogen/docs/tutorial/tool-use",target:"_blank",rel:"noopener noreferrer"},X=e(`<div class="language-python line-numbers-mode" data-ext="py"><pre class="shiki github-light" style="background-color:#fff;" tabindex="0"><code><span class="line"><span style="color:#24292E;">assistant.register_for_llm(</span><span style="color:#E36209;">name</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;calculator&quot;</span><span style="color:#24292E;">, </span><span style="color:#E36209;">description</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;A simple calculator&quot;</span><span style="color:#24292E;">)(calculator)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>然后调用 <code>generate_reply</code>:</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="shiki github-light" style="background-color:#fff;" tabindex="0"><code><span class="line"><span style="color:#6A737D;"># 有注册 tool 时候，使用 generate_reply</span></span>
<span class="line"><span style="color:#24292E;">reply_2 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> assistant.generate_reply(</span><span style="color:#E36209;">messages</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">[{</span><span style="color:#032F62;">&quot;content&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;What is 1+1.&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;role&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;user&quot;</span><span style="color:#24292E;">}])</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><details class="hint-container details"><summary>有注册 tool 时候发给 openai 的请求</summary><div class="language-json line-numbers-mode" data-ext="json"><pre class="shiki github-light" style="background-color:#fff;" tabindex="0"><code><span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">&quot;messages&quot;</span><span style="color:#24292E;">: [</span></span>
<span class="line"><span style="color:#24292E;">        {</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#005CC5;">&quot;content&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;You are a helpful AI assistant. You can help with simple calculations. Return &quot;</span><span style="color:#B31D28;font-style:italic;">TERMINATE</span><span style="color:#032F62;">&quot; when the task is done.&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#005CC5;">&quot;role&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;system&quot;</span></span>
<span class="line"><span style="color:#24292E;">        },</span></span>
<span class="line"><span style="color:#24292E;">        {</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#005CC5;">&quot;content&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;What is 1+1.&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#005CC5;">&quot;role&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;user&quot;</span></span>
<span class="line"><span style="color:#24292E;">        }</span></span>
<span class="line"><span style="color:#24292E;">    ],</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">&quot;tools&quot;</span><span style="color:#24292E;">: [</span></span>
<span class="line"><span style="color:#24292E;">        {</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#005CC5;">&quot;type&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;function&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#005CC5;">&quot;function&quot;</span><span style="color:#24292E;">: {</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#005CC5;">&quot;description&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;A simple calculator&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#005CC5;">&quot;name&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;calculator&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#005CC5;">&quot;parameters&quot;</span><span style="color:#24292E;">: {</span></span>
<span class="line"><span style="color:#24292E;">                    </span><span style="color:#005CC5;">&quot;type&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;object&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">                    </span><span style="color:#005CC5;">&quot;properties&quot;</span><span style="color:#24292E;">: {</span></span>
<span class="line"><span style="color:#24292E;">                        </span><span style="color:#005CC5;">&quot;a&quot;</span><span style="color:#24292E;">: {</span></span>
<span class="line"><span style="color:#24292E;">                            </span><span style="color:#005CC5;">&quot;type&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;integer&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">                            </span><span style="color:#005CC5;">&quot;description&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;a&quot;</span></span>
<span class="line"><span style="color:#24292E;">                        },</span></span>
<span class="line"><span style="color:#24292E;">                        </span><span style="color:#005CC5;">&quot;b&quot;</span><span style="color:#24292E;">: {</span></span>
<span class="line"><span style="color:#24292E;">                            </span><span style="color:#005CC5;">&quot;type&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;integer&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">                            </span><span style="color:#005CC5;">&quot;description&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;b&quot;</span></span>
<span class="line"><span style="color:#24292E;">                        },</span></span>
<span class="line"><span style="color:#24292E;">                        </span><span style="color:#005CC5;">&quot;operator&quot;</span><span style="color:#24292E;">: {</span></span>
<span class="line"><span style="color:#24292E;">                            </span><span style="color:#005CC5;">&quot;enum&quot;</span><span style="color:#24292E;">: [</span></span>
<span class="line"><span style="color:#24292E;">                                </span><span style="color:#032F62;">&quot;+&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">                                </span><span style="color:#032F62;">&quot;-&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">                                </span><span style="color:#032F62;">&quot;*&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">                                </span><span style="color:#032F62;">&quot;/&quot;</span></span>
<span class="line"><span style="color:#24292E;">                            ],</span></span>
<span class="line"><span style="color:#24292E;">                            </span><span style="color:#005CC5;">&quot;type&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;string&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">                            </span><span style="color:#005CC5;">&quot;description&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;operator&quot;</span></span>
<span class="line"><span style="color:#24292E;">                        }</span></span>
<span class="line"><span style="color:#24292E;">                    },</span></span>
<span class="line"><span style="color:#24292E;">                    </span><span style="color:#005CC5;">&quot;required&quot;</span><span style="color:#24292E;">: [</span></span>
<span class="line"><span style="color:#24292E;">                        </span><span style="color:#032F62;">&quot;a&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">                        </span><span style="color:#032F62;">&quot;b&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">                        </span><span style="color:#032F62;">&quot;operator&quot;</span></span>
<span class="line"><span style="color:#24292E;">                    ]</span></span>
<span class="line"><span style="color:#24292E;">                }</span></span>
<span class="line"><span style="color:#24292E;">            }</span></span>
<span class="line"><span style="color:#24292E;">        }</span></span>
<span class="line"><span style="color:#24292E;">    ],</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">&quot;model&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;gpt-4-128k-0125&quot;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><p>回复结果格式为：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="shiki github-light" style="background-color:#fff;" tabindex="0"><code><span class="line"><span style="color:#24292E;">{</span><span style="color:#032F62;">&#39;content&#39;</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">None</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;role&#39;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&#39;assistant&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;function_call&#39;</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">None</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;tool_calls&#39;</span><span style="color:#24292E;">: [{</span><span style="color:#032F62;">&#39;id&#39;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&#39;call_dBSB0eUcGXqPjmSvLEpbf8t6&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#032F62;">&#39;function&#39;</span><span style="color:#24292E;">: {</span><span style="color:#032F62;">&#39;arguments&#39;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&#39;{&quot;a&quot;:1,&quot;b&quot;:1,&quot;operator&quot;:&quot;+&quot;}&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&#39;name&#39;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&#39;calculator&#39;</span><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#032F62;">&#39;type&#39;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&#39;function&#39;</span><span style="color:#24292E;">}]}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>Generate Reply 总结</strong></p><p>整体伪代码如下：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="shiki github-light" style="background-color:#fff;" tabindex="0"><code><span class="line"><span style="color:#D73A49;">def</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">generate_reply</span><span style="color:#24292E;">(messages: List[], sender: [Agent] ):</span></span>
<span class="line"><span style="color:#24292E;">    </span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;"># 处理最后接收的消息，可以插入自定义 hook</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">for</span><span style="color:#24292E;"> hook </span><span style="color:#D73A49;">in</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">self</span><span style="color:#24292E;">.hook_lists[</span><span style="color:#032F62;">&#39;process_last_received_message&#39;</span><span style="color:#24292E;">]:</span></span>
<span class="line"><span style="color:#24292E;">        messages[</span><span style="color:#D73A49;">-</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">][</span><span style="color:#032F62;">&quot;content&quot;</span><span style="color:#24292E;">] </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> hook(messages[</span><span style="color:#D73A49;">-</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">][</span><span style="color:#032F62;">&quot;content&quot;</span><span style="color:#24292E;">])</span></span>
<span class="line"><span style="color:#24292E;">    </span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;"># 处理所有历史消息，可以插入自定义 hook</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">for</span><span style="color:#24292E;"> hook </span><span style="color:#D73A49;">in</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">self</span><span style="color:#24292E;">.hook_lists[</span><span style="color:#032F62;">&#39;process_all_messages_before_reply&#39;</span><span style="color:#24292E;">]:</span></span>
<span class="line"><span style="color:#24292E;">        messages </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> hook(messages)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">self</span><span style="color:#24292E;">._reply_func_list </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> [</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;"># self._reply_func_list 可以插入自定义函数</span></span>
<span class="line"><span style="color:#24292E;">        your_customized_function,  </span></span>
<span class="line"><span style="color:#24292E;">        </span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;"># 如果达到了终止条件，则后续函数都不会执行</span></span>
<span class="line"><span style="color:#24292E;">        ConversableAgent.check_termination_and_human_reply,</span></span>
<span class="line"><span style="color:#24292E;">        </span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;"># 当 llm_config=False, 并且注册了函数执行</span></span>
<span class="line"><span style="color:#24292E;">        ConversableAgent.generate_tool_calls_reply,</span></span>
<span class="line"><span style="color:#24292E;">        </span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;"># 当 llm_config!=False 执行</span></span>
<span class="line"><span style="color:#24292E;">        ConversableAgent.generate_oai_reply</span></span>
<span class="line"><span style="color:#24292E;">]</span></span>
<span class="line"><span style="color:#24292E;">    </span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">for</span><span style="color:#24292E;"> reply_func_tuple </span><span style="color:#D73A49;">in</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">self</span><span style="color:#24292E;">._reply_func_list:</span></span>
<span class="line"><span style="color:#24292E;">        final, reply </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> reply_func(</span><span style="color:#E36209;">messages</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">messages, </span><span style="color:#E36209;">sender</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">sender, </span><span style="color:#E36209;">config</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">reply_func_tuple[</span><span style="color:#032F62;">&quot;config&quot;</span><span style="color:#24292E;">])</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> final:</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> reply</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_2-1-3-代码执行器-code-executor" tabindex="-1"><a class="header-anchor" href="#_2-1-3-代码执行器-code-executor" aria-hidden="true">#</a> 2.1.3 <strong>代码执行器（Code Executor）</strong></h4><p>通过自定义的本地命令行代码执行器，代理可以安全地执行 GPT 生成的代码。AutoGPT 自带 docker， jupter 和 local 三种代码执行器。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="shiki github-light" style="background-color:#fff;" tabindex="0"><code><span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> tempfile</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">from</span><span style="color:#24292E;"> autogen </span><span style="color:#D73A49;">import</span><span style="color:#24292E;"> ConversableAgent</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">from</span><span style="color:#24292E;"> autogen.coding </span><span style="color:#D73A49;">import</span><span style="color:#24292E;"> LocalCommandLineCodeExecutor</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">temp_dir </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> tempfile.TemporaryDirectory()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">executor </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> LocalCommandLineCodeExecutor(</span><span style="color:#E36209;">timeout</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">10</span><span style="color:#24292E;">, </span><span style="color:#E36209;">work_dir</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">temp_dir.name)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">code_executor_agent </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> ConversableAgent(</span><span style="color:#032F62;">&quot;code_executor_agent&quot;</span><span style="color:#24292E;">, </span><span style="color:#E36209;">code_execution_config</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">{</span><span style="color:#032F62;">&quot;executor&quot;</span><span style="color:#24292E;">: executor})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">message_with_code_block </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;&quot;&quot;This is a message with code block.</span></span>
<span class="line"><span style="color:#032F62;">The code block is below:</span></span>
<span class="line"><span style="color:#032F62;">\`\`\`</span></span>
<span class="line"><span style="color:#032F62;">print(1+asdf)</span></span>
<span class="line"><span style="color:#032F62;">\`\`\`</span></span>
<span class="line"></span>
<span class="line"><span style="color:#032F62;">\`\`\`</span></span>
<span class="line"><span style="color:#032F62;">print(&quot;second&quot;)</span></span>
<span class="line"><span style="color:#032F62;">\`\`\`</span></span>
<span class="line"><span style="color:#032F62;">This is the end of the message.</span></span>
<span class="line"><span style="color:#032F62;">&quot;&quot;&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># Generate a reply for the given code.</span></span>
<span class="line"><span style="color:#24292E;">reply </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> code_executor_agent.generate_reply(</span><span style="color:#E36209;">messages</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">[{</span><span style="color:#032F62;">&quot;role&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;user&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;content&quot;</span><span style="color:#24292E;">: message_with_code_block}])</span></span>
<span class="line"><span style="color:#005CC5;">print</span><span style="color:#24292E;">(reply)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>代码执行器的思路为</p>`,13),$=s("code",null,"self._reply_func_list",-1),J={href:"https://github.com/microsoft/autogen/blob/5a5c0f2a11bfc1efe3955fa9f7e2ec38aedef14e/autogen/agentchat/conversable_agent.py#L1409",target:"_blank",rel:"noopener noreferrer"},Q={href:"https://github.com/microsoft/autogen/blob/5a5c0f2a11bfc1efe3955fa9f7e2ec38aedef14e/autogen/coding/local_commandline_code_executor.py#L180",target:"_blank",rel:"noopener noreferrer"},ss={href:"https://github.com/microsoft/autogen/blob/5a5c0f2a11bfc1efe3955fa9f7e2ec38aedef14e/autogen/coding/local_commandline_code_executor.py#L236",target:"_blank",rel:"noopener noreferrer"},ns={href:"https://github.com/microsoft/autogen/blob/5a5c0f2a11bfc1efe3955fa9f7e2ec38aedef14e/autogen/coding/local_commandline_code_executor.py#L32",target:"_blank",rel:"noopener noreferrer"},as={href:"https://github.com/microsoft/autogen/blob/5a5c0f2a11bfc1efe3955fa9f7e2ec38aedef14e/autogen/coding/local_commandline_code_executor.py#L180C9-L180C23",target:"_blank",rel:"noopener noreferrer"},ls={href:"https://github.com/microsoft/autogen/blob/5a5c0f2a11bfc1efe3955fa9f7e2ec38aedef14e/autogen/coding/local_commandline_code_executor.py#L236C9-L236C28",target:"_blank",rel:"noopener noreferrer"},es=s("h4",{id:"_2-1-4-init-chat",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#_2-1-4-init-chat","aria-hidden":"true"},"#"),n(" 2.1.4 Init Chat")],-1),os=s("p",null,"通过上文可以看到 Autogen 对 ConversableAgent 的包装，并不符合 Agent 的定义：",-1),ps=s("li",null,[n("当 ConversableAgent 设置了 "),s("code",null,"lm_config=False"),n("，并注册了函数后，改 Agent 相当于一个指挥执行函数的工具。")],-1),ts={href:"https://microsoft.github.io/autogen/docs/tutorial/tool-use",target:"_blank",rel:"noopener noreferrer"},cs=s("p",null,[n("所有 ConversableAgent 间的对话都通过 "),s("code",null,"initiate_chat"),n(" 函数启动，通过 "),s("code",null,"send"),n(" 和 "),s("code",null,"receive"),n(" 函数进行消息传递，确保信息正确接收。而这种设置，是的开发者可以使用多个 ConversableAgent 来灵活搭配，组合出他们想要得 Agent 系统。如：")],-1),rs={href:"https://microsoft.github.io/autogen/docs/tutorial/tool-use",target:"_blank",rel:"noopener noreferrer"},is={href:"https://microsoft.github.io/autogen/docs/Use-Cases/agent_chat",target:"_blank",rel:"noopener noreferrer"},us={href:"https://microsoft.github.io/autogen/docs/topics/groupchat/customized_speaker_selection",target:"_blank",rel:"noopener noreferrer"},ys=e(`<p>等其他系统。</p><p>initiate_chat 使用案例：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="shiki github-light" style="background-color:#fff;" tabindex="0"><code><span class="line"><span style="color:#6A737D;"># 实现一个可以使用外部 python 函数的助手</span></span>
<span class="line"><span style="color:#24292E;">chat_result </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> user_proxy.initiate_chat(assistant, </span><span style="color:#E36209;">message</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;What is (44232 + 13312 / (232 - 32)) * 5?&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>initiate_chat 实现逻辑：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="shiki github-light" style="background-color:#fff;" tabindex="0"><code><span class="line"><span style="color:#6A737D;"># 伪代码</span></span>
<span class="line"><span style="color:#D73A49;">def</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">initiate_chat</span><span style="color:#24292E;">(recipient, message, clear_history, </span><span style="color:#D73A49;">*</span><span style="color:#24292E;">args):</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;"># 可以配置 clear_history 来清空历史记录</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">self</span><span style="color:#24292E;">._prepare_chat(recipient, clear_history)</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;"># 可设置 agent 最多对话回合数</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">for</span><span style="color:#24292E;"> _ </span><span style="color:#D73A49;">in</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">range</span><span style="color:#24292E;">(max_turns):</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> _ </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#6A737D;"># 对 message 进行了一些简单的格式预处理</span></span>
<span class="line"><span style="color:#24292E;">            msg2send </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">self</span><span style="color:#24292E;">.generate_init_message(message, </span><span style="color:#D73A49;">**</span><span style="color:#24292E;">kwargs)</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">else</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#6A737D;"># 使用 generate_reply ，根据 message 生成回复</span></span>
<span class="line"><span style="color:#24292E;">            msg2send </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">self</span><span style="color:#24292E;">.generate_reply(</span><span style="color:#E36209;">messages</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">self</span><span style="color:#24292E;">.chat_messages[recipient], </span><span style="color:#E36209;">sender</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">recipient)</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> msg2send </span><span style="color:#D73A49;">is</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">None</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">break</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;"># 发送消息给下一个 Agent</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#005CC5;">self</span><span style="color:#24292E;">.send(msg2send, recipient, </span><span style="color:#E36209;">request_reply</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">True</span><span style="color:#24292E;">, </span><span style="color:#E36209;">silent</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">silent)</span></span>
<span class="line"><span style="color:#24292E;">    </span></span>
<span class="line"><span style="color:#24292E;">    summary </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">self</span><span style="color:#24292E;">._summarize_chat(</span><span style="color:#005CC5;">...</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">    chat_result </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> ChatResult(</span><span style="color:#005CC5;">...</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> chat_result</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>以上 init_chat 的核心在于 <code>send</code> 函数：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="shiki github-light" style="background-color:#fff;" tabindex="0"><code><span class="line"><span style="color:#6A737D;"># 伪代码</span></span>
<span class="line"><span style="color:#D73A49;">def</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">send</span><span style="color:#24292E;">(self, message: Union[Dict, </span><span style="color:#005CC5;">str</span><span style="color:#24292E;">], recipient: Agent,</span></span>
<span class="line"><span style="color:#24292E;">        request_reply: Optional[</span><span style="color:#005CC5;">bool</span><span style="color:#24292E;">] </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">None</span><span style="color:#24292E;">):</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> recipient.receive(message, </span><span style="color:#005CC5;">self</span><span style="color:#24292E;">, request_reply, silent)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">def</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">receive</span><span style="color:#24292E;">(self, message: Union[Dict, </span><span style="color:#005CC5;">str</span><span style="color:#24292E;">], sender: Agent, request_reply: Optional[</span><span style="color:#005CC5;">bool</span><span style="color:#24292E;">] </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">None</span><span style="color:#24292E;">,):</span></span>
<span class="line"><span style="color:#24292E;">    reply </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">self</span><span style="color:#24292E;">.generate_reply(</span><span style="color:#E36209;">messages</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">self</span><span style="color:#24292E;">.chat_messages[sender], </span><span style="color:#E36209;">sender</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">sender)</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> reply </span><span style="color:#D73A49;">is</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">not</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">None</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#005CC5;">self</span><span style="color:#24292E;">.send(reply, sender, </span><span style="color:#E36209;">silent</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">silent)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>因此，autogen 设计的 send 和 receive 函数形成了一个闭环，只要 <code>generate_reply</code> 不因为 ConversableAgent.check_termination_and_human_reply 被终止，那么这两个 Agent 就会一直对话下去。</p>`,8),ds={href:"https://github.com/microsoft/autogen/blob/5a5c0f2a11bfc1efe3955fa9f7e2ec38aedef14e/autogen/agentchat/conversable_agent.py#L893",target:"_blank",rel:"noopener noreferrer"},vs=s("h3",{id:"_2-2-multi-agent",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#_2-2-multi-agent","aria-hidden":"true"},"#"),n(" 2.2 Multi-Agent")],-1),bs=s("p",null,[n("通过以上 "),s("code",null,"initiate_chat"),n(" 我们大致清楚了 2 个 Agent 是怎么对话的：")],-1),ms=s("ul",null,[s("li",null,[n("通过 "),s("code",null,"send"),n(" 和 "),s("code",null,"receive"),n(" 函数实现闭环对话。")])],-1),Es={href:"https://github.com/microsoft/autogen/blob/main/notebook/agentchat_groupchat.ipynb",target:"_blank",rel:"noopener noreferrer"},gs=s("p",null,"GroupChat 的实现逻辑大致为：",-1),_s=s("ul",null,[s("li",null,"建立一个 GroupManager 来扮演邮差的角色。"),s("li",null,"所有 Group 里的 Agent 不直接对话，而是通过 GroupManager 实现对话的传递。")],-1),hs=s("p",null,"这种 GroupChat 的设计方式允许我们设计自由讨论的 Multi-agent，同时也可以实现固定 flow 的 Multi-Agent 工作流。",-1),fs={href:"https://microsoft.github.io/autogen/docs/topics/groupchat/customized_speaker_selection",target:"_blank",rel:"noopener noreferrer"},qs=s("h2",{id:"_3-其他",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#_3-其他","aria-hidden":"true"},"#"),n(" 3. 其他")],-1),Cs=s("p",null,[s("strong",null,"开源社区贡献"),s("br"),s("code",null,"autogen.agentchat.contrib"),n(" 这里可以找到许多关于自动化对话系统的贡献。")],-1),As=s("p",null,[s("strong",null,"Agent 优化器")],-1),Fs={href:"https://github.com/microsoft/autogen/blob/5a5c0f2a11bfc1efe3955fa9f7e2ec38aedef14e/notebook/agentchat_agentoptimizer.ipynb",target:"_blank",rel:"noopener noreferrer"},Ds=s("p",null,[s("strong",null,"自定义输出"),s("br"),n(" Autogen 默认将 Agent 对话信息输出在终端中。如果想在前端展示，可以使用官方提供的 WebSocketIO，将对话信息以 stream 的形式输出到 UI 界面。")],-1),ks=s("h2",{id:"_4-总结",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#_4-总结","aria-hidden":"true"},"#"),n(" 4. 总结")],-1),xs=s("p",null,"Autogen 作为 Agent 搭建工具，提供了一些基础功能。虽然其设计将执行工具与 LLM Agent 合并在一起，但这种设计在某些情况下并不优雅，可以考虑将函数工具与 LLM Agent 分开设计。",-1),Ls=s("p",null,"此外 Autogen 中， 2 个 Agent 之间的对话，是通过递归函数实现的；Multi-Agent 对话是通过邮差传话的形式实现的。",-1);function Is(Ms,Ns){const a=p("ExternalLinkIcon");return t(),c("div",null,[u,y,s("p",null,[n("参考官网"),s("a",d,[n("文档"),l(a)]),n("，参考代码 Autogen 源码"),s("a",v,[n("5a5c0f2"),l(a)]),n(" 。")]),b,s("p",null,[n("Autogen 利用了 "),s("a",m,[n("openai 提供的 Tool（Functions）功能"),l(a)]),n(" 来调用函数，而不是使用自定义提示来引导逻辑模型选择工具。调用 Openai 服务时，在请求体的 "),E,n(" 中提供候选函数的信息，Openai API 就会从中选出最可能实现用户诉求的函数。")]),g,s("p",null,[n("每个 agent 都可以使用自带的 "),s("a",_,[n("send"),l(a)]),n(" 和 "),s("a",h,[n("receive"),l(a)]),n(" 方法和其他 agent 进行通信。")]),f,s("p",null,[s("a",q,[n("Conversable Agent"),l(a)]),n(" 是 Autogen 中的基本智能体类型，其他如 AssistantAgent 或 UserProxyAgent 都是基于此类实现的。")]),C,s("p",null,[n("初始化 "),s("a",A,[n("Conversable Agent"),l(a)]),n(" 时提供的 "),F,n("，都会被用来初始化 openai "),D,n(" 对象。如通过以下方法创建 conversable Agent 实例后")]),k,s("p",null,[n("以上为伪代码，具体实现参考"),s("a",x,[n("源码"),l(a)]),n("。")]),L,s("p",null,[s("a",I,[n("generate_reply"),l(a)]),n(" 是 Conversable Agent 的核心功能之一。此函数会根据接收到的消息和配置，通过一系列注册的处理函数和回复生成函数，来产生一个回复。例如：")]),M,s("p",null,[n("具体参考 "),s("a",N,[n("process_last_received_message"),l(a)]),n(" 。")]),T,w,O,s("p",null,[n("具体参考 "),s("a",P,[n("process_all_messages_before_reply"),l(a)])]),G,s("ul",null,[s("li",null,[s("a",R,[n("check_termination_and_human_reply"),l(a)])])]),U,z,B,j,s("ul",null,[s("li",null,[s("a",S,[n("generate_tool_calls_reply"),l(a)])])]),W,s("p",null,[n("例如参考 "),s("a",Y,[n("autogen 官方的 Tool 使用示例"),l(a)]),n(" 配置后：")]),V,s("ul",null,[s("li",null,[s("a",K,[n("generate_oai_reply"),l(a)])])]),H,s("p",null,[n("给 agent 关联函数之后，在生成回复时，会考虑是否需要使用函数工具，如参考"),s("a",Z,[n("官方文档"),l(a)]),n("，为 agent 注册函数：")]),X,s("ol",null,[s("li",null,[n("首先在 "),$,n(" 插入 "),s("a",J,[n("_generate_code_execution_reply_using_executor"),l(a)]),n(" 函数。")]),s("li",null,[n("以上函数会先使用 "),s("a",Q,[n("markdown 解析器"),l(a)]),n("来从输入的 message 种提取代码。")]),s("li",null,[n("而后使用"),s("a",ss,[n("执行器"),l(a)]),n("来执行抽取出来的代码。")])]),s("p",null,[n("如果需要自定义代码解析和执行方式的话，只需要参考 "),s("a",ns,[n("LocalCommandLineCodeExecutor"),l(a)]),n(" 集成 CodeExecutor 并重写 "),s("a",as,[n("code_extractor"),l(a)]),n(" 和 "),s("a",ls,[n("execute_code_blocks"),l(a)]),n(" 。")]),es,os,s("ul",null,[ps,s("li",null,[n("如果需要设计一个会使用函数的 Agent 的话，那么需要用 2 个 ConversableAgent 来实现，具体参考"),s("a",ts,[n("官网文档"),l(a)]),n("。")])]),cs,s("ul",null,[s("li",null,[n("实现一个可以使用外部 python 函数的助手。"),s("a",rs,[n("link"),l(a)])]),s("li",null,[n("用多个 ConversableAgent 实现聊天室。"),s("a",is,[n("link"),l(a)])]),s("li",null,[n("用多个 ConversableAgent 实现固定工作流。"),s("a",us,[n("link"),l(a)])])]),ys,s("p",null,[n("当然，initiate chat 中还有很多有意思的设计，具体请参考 "),s("a",ds,[n("inititate_chat"),l(a)]),n(" 源码。")]),vs,bs,ms,s("p",null,[n("那如果我们想要让 2 个以上的 agent 进行对话，可以使用 Autogen 包装好的 "),s("a",Es,[n("GroupChat"),l(a)]),n("。")]),gs,_s,hs,s("p",null,[n("具体可以参考："),s("a",fs,[n("link"),l(a)])]),qs,Cs,As,s("p",null,[n("官方 notebook 中有关于 Agent 优化器的讨论。"),s("a",Fs,[n("link"),l(a)])]),Ds,ks,xs,Ls])}const Os=o(i,[["render",Is],["__file","笔记autogen.html.vue"]]);export{Os as default};
