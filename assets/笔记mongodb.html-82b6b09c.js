import{_ as o}from"./plugin-vue_export-helper-c27b6911.js";import{r as t,o as p,c as i,e as d,a as s,b as n,d as e,f as l}from"./app-e9b04ba5.js";const c={},r=s("blockquote",null,[s("p",null,"安装、基本语法、资源整合")],-1),u=s("h2",{id:"安装",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#安装","aria-hidden":"true"},"#"),n(" 安装")],-1),b={href:"https://www.mongodb.com/try/download/community",target:"_blank",rel:"noopener noreferrer"},y=l(`<div class="language-text line-numbers-mode" data-ext="text"><pre class="shiki github-light" style="background-color:#fff;" tabindex="0"><code><span class="line"><span style="color:#24292e;"># 创建 mongodb 目录</span></span>
<span class="line"><span style="color:#24292e;">mkdir -p /usr/local/mongodb</span></span>
<span class="line"><span style="color:#24292e;"># 解压 mongodb 至指定目录</span></span>
<span class="line"><span style="color:#24292e;">tar -zxvf /usr/local/src/mongodb-linux-x86_64-rhel70-4.4.1.tgz -C /usr/local/</span></span>
<span class="line"><span style="color:#24292e;"># 重命名解压目录为 mongodb</span></span>
<span class="line"><span style="color:#24292e;">mv /usr/local/mongodb-linux-x86_64-rhel70-4.4.1/ /usr/local/mongodb</span></span>
<span class="line"><span style="color:#24292e;"></span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-text line-numbers-mode" data-ext="text"><pre class="shiki github-light" style="background-color:#fff;" tabindex="0"><code><span class="line"><span style="color:#24292e;"># 创建存放数据的目录</span></span>
<span class="line"><span style="color:#24292e;">mkdir -p /usr/local/mongodb/data/db</span></span>
<span class="line"><span style="color:#24292e;"># 创建存放日志的目录</span></span>
<span class="line"><span style="color:#24292e;">mkdir -p /usr/local/mongodb/logs</span></span>
<span class="line"><span style="color:#24292e;"># 创建日志记录文件</span></span>
<span class="line"><span style="color:#24292e;">touch /usr/local/mongodb/logs/mongodb.log</span></span>
<span class="line"><span style="color:#24292e;"></span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="docker-安装" tabindex="-1"><a class="header-anchor" href="#docker-安装" aria-hidden="true">#</a> docker 安装</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="shiki github-light" style="background-color:#fff;" tabindex="0"><code><span class="line"><span style="color:#6F42C1;">docker</span><span style="color:#24292E;"> </span><span style="color:#032F62;">run</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-p</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">27017</span><span style="color:#032F62;">:27017</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--restart=unless-stopped</span><span style="color:#24292E;">  </span><span style="color:#005CC5;">--name</span><span style="color:#24292E;"> </span><span style="color:#032F62;">mongo</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-v</span><span style="color:#24292E;"> $PWD</span><span style="color:#032F62;">:/data/db</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-d</span><span style="color:#24292E;"> </span><span style="color:#032F62;">mongo:4.4.14-rc0-focal</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--auth</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,4),m={href:"https://www.runoob.com/docker/docker-install-mongodb.html",target:"_blank",rel:"noopener noreferrer"},v=l(`<h2 id="启动" tabindex="-1"><a class="header-anchor" href="#启动" aria-hidden="true">#</a> 启动</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="shiki github-light" style="background-color:#fff;" tabindex="0"><code><span class="line"><span style="color:#6A737D;"># 切换至指定目录</span></span>
<span class="line"><span style="color:#005CC5;">cd</span><span style="color:#24292E;"> </span><span style="color:#032F62;">/usr/local/mongodb/</span></span>
<span class="line"><span style="color:#6A737D;"># 前台启动</span></span>
<span class="line"><span style="color:#6F42C1;">bin/mongod</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--dbpath</span><span style="color:#24292E;"> </span><span style="color:#032F62;">/usr/local/mongodb/data/db/</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--logpath</span><span style="color:#24292E;"> </span><span style="color:#032F62;">/usr/local/mongodb/logs/mongodb.log</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--logappend</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--port</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">27017</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--bind_ip</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0.0</span><span style="color:#032F62;">.0.0</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><code>--dbpath</code>：指定数据文件存放目录</li><li><code>--logpath</code>：指定日志文件，注意是指定文件不是目录</li><li><code>--logappend</code>：使用追加的方式记录日志</li><li><code>--port</code>：指定端口，默认为 27017</li><li><code>--bind_ip</code>：绑定服务 IP，若绑定 127.0.0.1，则只能本机访问，默认为本机地址</li></ul><p>后台启动添加 <code>--fork</code> 即可</p><p>在 <code>bin</code> 目录下增加一个 <code>mongodb.conf</code> 配置文件。</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="shiki github-light" style="background-color:#fff;" tabindex="0"><code><span class="line"><span style="color:#24292e;"># 数据文件存放目录</span></span>
<span class="line"><span style="color:#24292e;">dbpath = /usr/local/mongodb/data/db</span></span>
<span class="line"><span style="color:#24292e;"># 日志文件存放目录</span></span>
<span class="line"><span style="color:#24292e;">logpath = /usr/local/mongodb/logs/mongodb.log</span></span>
<span class="line"><span style="color:#24292e;"># 以追加的方式记录日志</span></span>
<span class="line"><span style="color:#24292e;">logappend = true</span></span>
<span class="line"><span style="color:#24292e;"># 端口默认为 27017</span></span>
<span class="line"><span style="color:#24292e;">port = 27017</span></span>
<span class="line"><span style="color:#24292e;"># 对访问 IP 地址不做限制，默认为本机地址</span></span>
<span class="line"><span style="color:#24292e;">bind_ip = 0.0.0.0</span></span>
<span class="line"><span style="color:#24292e;"># 以守护进程的方式启用，即在后台运行</span></span>
<span class="line"><span style="color:#24292e;">fork = true</span></span>
<span class="line"><span style="color:#24292e;">auth = true</span></span>
<span class="line"><span style="color:#24292e;"></span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>vim /etc/profile</code></p><div class="language-text line-numbers-mode" data-ext="text"><pre class="shiki github-light" style="background-color:#fff;" tabindex="0"><code><span class="line"><span style="color:#24292e;"># 添加环境变量</span></span>
<span class="line"><span style="color:#24292e;">export MONGODB_HOME=/usr/local/mongodb</span></span>
<span class="line"><span style="color:#24292e;">export PATH=$PATH:$MONGODB_HOME/bin</span></span>
<span class="line"><span style="color:#24292e;"></span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>通过配置文件启动</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="shiki github-light" style="background-color:#fff;" tabindex="0"><code><span class="line"><span style="color:#24292e;">mongod -f /usr/local/mongodb/bin/mongodb.conf</span></span>
<span class="line"><span style="color:#24292e;"></span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>退出后台进程：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="shiki github-light" style="background-color:#fff;" tabindex="0"><code><span class="line"><span style="color:#24292e;">mongod -f /usr/local/mongodb/bin/mongodb.conf --shutdown</span></span>
<span class="line"><span style="color:#24292e;"></span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="用户与权限管理" tabindex="-1"><a class="header-anchor" href="#用户与权限管理" aria-hidden="true">#</a> 用户与权限管理</h2><table><thead><tr><th>权限</th><th>说明</th></tr></thead><tbody><tr><td>read</td><td>允许用户读取指定数据库。</td></tr><tr><td>readWrite</td><td>允许用户读写指定数据库。</td></tr><tr><td>dbAdmin</td><td>允许用户在指定数据库中执行管理函数，如索引创建、删除，查看统计或访问 system.profile。</td></tr><tr><td>userAdmin</td><td>允许用户向 system.users 集合写入，可以在指定数据库里创建、删除和管理用户。</td></tr><tr><td>clusterAdmin</td><td>必须在 admin 数据库中定义，赋予用户所有分片和复制集相关函数的管理权限。</td></tr><tr><td>readAnyDatabase</td><td>必须在 admin 数据库中定义，赋予用户所有数据库的读权限。</td></tr><tr><td>readWriteAnyDatabase</td><td>必须在 admin 数据库中定义，赋予用户所有数据库的读写权限。</td></tr><tr><td>userAdminAnyDatabase</td><td>必须在 admin 数据库中定义，赋予用户所有数据库的 userAdmin 权限。</td></tr><tr><td>dbAdminAnyDatabase</td><td>必须在 admin 数据库中定义，赋予用户所有数据库的 dbAdmin 权限。</td></tr><tr><td>root</td><td>必须在 admin 数据库中定义，超级账号，超级权限。</td></tr></tbody></table><h3 id="创建管理权限" tabindex="-1"><a class="header-anchor" href="#创建管理权限" aria-hidden="true">#</a> 创建管理权限</h3><p><code>use admin</code> 切换至 admin 数据库进行登；<code>show user</code> 查看用户。创建用户：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="shiki github-light" style="background-color:#fff;" tabindex="0"><code><span class="line"><span style="color:#6F42C1;">db.createUser(</span><span style="color:#24292E;">{ </span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">user:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;kevin&quot;,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">pwd</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;777777&quot;,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">roles:</span><span style="color:#24292E;"> [</span></span>
<span class="line"><span style="color:#24292E;">        { </span><span style="color:#6F42C1;">role:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;userAdminAnyDatabase&quot;,</span><span style="color:#24292E;"> </span><span style="color:#032F62;">db:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;admin&quot;</span><span style="color:#24292E;"> </span><span style="color:#032F62;">}</span><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#24292E;">    ]</span></span>
<span class="line"><span style="color:#24292E;">});</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>链接 <code>mongo</code> 服务后，登录<code>use admin</code>，<code>db.auth(&quot;kevin&quot;,&quot;777777&quot;)</code> 进行验证，返回 1 为验证成功。</p><h3 id="创建普通用户" tabindex="-1"><a class="header-anchor" href="#创建普通用户" aria-hidden="true">#</a> 创建普通用户</h3><p>普通用户针对非 admin 数据库。首先需要使用 <code>use test</code> 创建数据库。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="shiki github-light" style="background-color:#fff;" tabindex="0"><code><span class="line"><span style="color:#6F42C1;">db.createUser(</span><span style="color:#24292E;">{ </span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">user:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;user1&quot;,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">pwd</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;111111&quot;,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">roles:</span><span style="color:#24292E;"> [</span></span>
<span class="line"><span style="color:#24292E;">        { </span><span style="color:#6F42C1;">role:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;readWrite&quot;,</span><span style="color:#24292E;"> </span><span style="color:#032F62;">db:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;test&quot;</span><span style="color:#24292E;"> </span><span style="color:#032F62;">}</span><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#24292E;">    ]</span></span>
<span class="line"><span style="color:#24292E;">});</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>同样登录使用 <code>use test</code> ，<code>db.auth(&quot;user1&quot;,&quot;111111&quot;)</code></p><h3 id="更新用户" tabindex="-1"><a class="header-anchor" href="#更新用户" aria-hidden="true">#</a> 更新用户</h3><p>需要当前用户具有 <code>userAdmin</code> 或 <code>userAdminAnyDatabse</code> 或 <code>root</code> 角色。</p><p><strong>更新权限</strong></p><div class="language-text line-numbers-mode" data-ext="text"><pre class="shiki github-light" style="background-color:#fff;" tabindex="0"><code><span class="line"><span style="color:#24292e;">db.updateUser(&quot;用户名&quot;, {&quot;roles&quot;:[{&quot;role&quot;:&quot;角色名称&quot;,db:&quot;数据库&quot;},{&quot;更新项 2&quot;:&quot;更新内容&quot;}]})</span></span>
<span class="line"><span style="color:#24292e;"></span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>更新密码</strong> - 需要切换到该用户所在的数据库。</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="shiki github-light" style="background-color:#fff;" tabindex="0"><code><span class="line"><span style="color:#24292e;">db.updateUser(&quot;用户名&quot;, {&quot;pwd&quot;:&quot;新密码&quot;})</span></span>
<span class="line"><span style="color:#24292e;">db.changeUserPassword(&quot;用户名&quot;, &quot;新密码&quot;)</span></span>
<span class="line"><span style="color:#24292e;"></span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>删除用户</strong> - 需要切换到该用户所在的数据库</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="shiki github-light" style="background-color:#fff;" tabindex="0"><code><span class="line"><span style="color:#24292e;">db.dropUser(&quot;user name&quot;)</span></span>
<span class="line"><span style="color:#24292e;"></span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="备份" tabindex="-1"><a class="header-anchor" href="#备份" aria-hidden="true">#</a> 备份</h2>`,31),h={href:"https://baijiahao.baidu.com/s?id=1715684157607166534&wfr=spider&for=pc",target:"_blank",rel:"noopener noreferrer"},g=l(`<p>以下进讨论由用户密码情况，在服务器 A 上备份 mongodb</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="shiki github-light" style="background-color:#fff;" tabindex="0"><code><span class="line"><span style="color:#6F42C1;">./mongodump</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--db=testdb</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--authenticationDatabase=admin</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--username=admin</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--password=123456</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--host=127.0.0.1:27017</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--out=./backups/mongofile</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>其中： db 为需要备份的数据库名， authenticationDatabase 为认证用的数据库名，username 为认证的用户名， password 为认证用的数据库用户密码， host 为连接的 IP 及端口， out 为备份后的存储目录</p><p>在 B 机上导入，首先创建对应的 mongo 用户</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="shiki github-light" style="background-color:#fff;" tabindex="0"><code><span class="line"><span style="color:#6F42C1;">mongo</span><span style="color:#24292E;"> </span><span style="color:#032F62;">admin</span></span>
<span class="line"><span style="color:#6F42C1;">db.createUser(</span><span style="color:#24292E;">{ </span><span style="color:#032F62;">user:&#39;admin&#39;,pwd:&#39;123456&#39;,roles:[</span><span style="color:#24292E;"> </span><span style="color:#032F62;">{</span><span style="color:#24292E;"> </span><span style="color:#032F62;">role:&#39;userAdminAnyDatabase&#39;,</span><span style="color:#24292E;"> </span><span style="color:#032F62;">db:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;admin&#39;},&quot;readWriteAnyDatabase&quot;]}</span><span style="color:#24292E;">);</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>而后将需要导入的文件 <code>./backups/mongofile</code> 发送到 B 服务器上，而后进行回复：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="shiki github-light" style="background-color:#fff;" tabindex="0"><code><span class="line"><span style="color:#6F42C1;">mongorestore</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--db=testdb</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--authenticationDatabase=admin</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--username=admin</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--password=123456</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--host=127.0.0.1:27017</span><span style="color:#24292E;"> </span><span style="color:#032F62;">./backups/mongo/testdb</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="gui" tabindex="-1"><a class="header-anchor" href="#gui" aria-hidden="true">#</a> GUI</h2><p><a href="%5Bhttps://robomongo.org/download%5D(https://links.jianshu.com/go?to=https%3A%2F%2Frobomongo.org%2Fdownload)">Robo 3t</a> 下载解压后可通过 <code>bin/robo3t</code> 文件直接运行。</p><p>连接到 mongo 服务器时候需配置<code>Authentication</code> 4.0 以上版本选择 SHA-S56</p><h2 id="语法" tabindex="-1"><a class="header-anchor" href="#语法" aria-hidden="true">#</a> 语法</h2><h4 id="数据库" tabindex="-1"><a class="header-anchor" href="#数据库" aria-hidden="true">#</a> 数据库</h4><p>切换/创建 数据库 <code>use test</code> ，显示数据库 <code>show dbs</code>，不同用户显示不一样；删除数据库需要切换到当前库，然后 <code>db.dropDatabase()</code></p><div class="language-text line-numbers-mode" data-ext="text"><pre class="shiki github-light" style="background-color:#fff;" tabindex="0"><code><span class="line"><span style="color:#24292e;"># 执行以下函数(2 选 1)即可关闭服务</span></span>
<span class="line"><span style="color:#24292e;">db.shutdownServer()</span></span>
<span class="line"><span style="color:#24292e;">db.runCommand(“shutdown”)</span></span>
<span class="line"><span style="color:#24292e;"></span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="集合-collection" tabindex="-1"><a class="header-anchor" href="#集合-collection" aria-hidden="true">#</a> 集合 collection</h4><p>使用 <code>db.createCollection(name, option)</code> 直接创建； 使用 <code>show tables</code> 查看集合；使用 <code>db.collection_name.drop()</code> 删除。</p><h4 id="文档" tabindex="-1"><a class="header-anchor" href="#文档" aria-hidden="true">#</a> 文档</h4><p><strong>插入</strong></p><p>使用 <code>db.new_c.insert()</code> 可直接创建 <code>new_c</code> 集合并且插入一个文档。如：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="shiki github-light" style="background-color:#fff;" tabindex="0"><code><span class="line"><span style="color:#24292e;">user1 = {</span></span>
<span class="line"><span style="color:#24292e;">&quot;_id&quot;:102,</span></span>
<span class="line"><span style="color:#24292e;">&quot;students&quot;:[{</span></span>
<span class="line"><span style="color:#24292e;">&quot;id&quot;:1,&quot;name&quot;:&quot;zhangsan&quot;</span></span>
<span class="line"><span style="color:#24292e;">},{&quot;id&quot;:2,&quot;name&quot;:3}]</span></span>
<span class="line"><span style="color:#24292e;">}</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">db.new_c.insert(user1)</span></span>
<span class="line"><span style="color:#24292e;"></span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>_id</code> 为文档唯一值，会更新原本已有的 <code>_id</code> 数据。批量插入的时候采用 <code>db.new_c.insert([doc1,doc2...])</code></p><p><strong>更新</strong></p><div class="language-text line-numbers-mode" data-ext="text"><pre class="shiki github-light" style="background-color:#fff;" tabindex="0"><code><span class="line"><span style="color:#24292e;">db.collection_name.update(query, update, option)</span></span>
<span class="line"><span style="color:#24292e;"></span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li><strong>query</strong> : update 的查询条件，类似 sql update 查询内 where 后面的。</li><li><strong>update</strong> : update 的对象和一些更新的操作符（如<code>$</code>,<code>$inc</code>...）等，也可以理解为 sql update 查询内 set 后面的</li><li><strong>upsert</strong> : 可选，这个参数的意思是，如果不存在 update 的记录，是否插入 objNew,true 为插入，默认是 false，不插入。</li><li><strong>multi</strong> : 可选，mongodb 默认是 false,只更新找到的第一条记录，如果这个参数为 true,就把按条件查出来多条记录全部更新。</li><li><strong>writeConcern</strong> :可选，抛出异常的级别。</li></ul><div class="language-text line-numbers-mode" data-ext="text"><pre class="shiki github-light" style="background-color:#fff;" tabindex="0"><code><span class="line"><span style="color:#24292e;">db.new_c.update({&#39;name&#39;:&#39;zhangsan&#39;},{$set:{&#39;name&#39;:&#39;MongoDB&#39;}},false,true)</span></span>
<span class="line"><span style="color:#24292e;"></span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>如上例，<code>$set</code> 更新会覆盖原有数据，而非只更新 <code>name</code></p><p><strong>删除</strong></p><p><code>df.new_c.remove({&quot;name&quot;:&quot;zhangsang&quot;}, {justOne: true})</code></p><p><strong>查询</strong></p><div class="language-text line-numbers-mode" data-ext="text"><pre class="shiki github-light" style="background-color:#fff;" tabindex="0"><code><span class="line"><span style="color:#24292e;">db.user.find(&quot;_id&quot;:{&quot;$lte&quot;:4,&quot;gle&quot;:3})</span></span>
<span class="line"><span style="color:#24292e;">db.user.distinct(&quot;name&quot;) # 根据 name 去重</span></span>
<span class="line"><span style="color:#24292e;"></span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>正则定义在 <code>/ /</code> 内。</p>`,31),f={href:"https://www.runoob.com/mongodb/mongodb-query.html",target:"_blank",rel:"noopener noreferrer"},x=l(`<p><strong>排序</strong></p><div class="language-text line-numbers-mode" data-ext="text"><pre class="shiki github-light" style="background-color:#fff;" tabindex="0"><code><span class="line"><span style="color:#24292e;">db.COLLECTION_NAME.find().sort({KEY:1})</span></span>
<span class="line"><span style="color:#24292e;"></span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>聚合</strong></p><div class="language-text line-numbers-mode" data-ext="text"><pre class="shiki github-light" style="background-color:#fff;" tabindex="0"><code><span class="line"><span style="color:#24292e;">db.mycol.aggregate([{$group : {_id : &quot;$by_user&quot;, num_tutorial : {$sum : 1}}}])</span></span>
<span class="line"><span style="color:#24292e;">{</span></span>
<span class="line"><span style="color:#24292e;">   &quot;result&quot; : [</span></span>
<span class="line"><span style="color:#24292e;">      {</span></span>
<span class="line"><span style="color:#24292e;">         &quot;_id&quot; : &quot;runoob.com&quot;,</span></span>
<span class="line"><span style="color:#24292e;">         &quot;num_tutorial&quot; : 2</span></span>
<span class="line"><span style="color:#24292e;">      },</span></span>
<span class="line"><span style="color:#24292e;">      {</span></span>
<span class="line"><span style="color:#24292e;">         &quot;_id&quot; : &quot;Neo4j&quot;,</span></span>
<span class="line"><span style="color:#24292e;">         &quot;num_tutorial&quot; : 1</span></span>
<span class="line"><span style="color:#24292e;">      }</span></span>
<span class="line"><span style="color:#24292e;">   ],</span></span>
<span class="line"><span style="color:#24292e;">   &quot;ok&quot; : 1</span></span>
<span class="line"><span style="color:#24292e;">}</span></span>
<span class="line"><span style="color:#24292e;"></span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>可以接 <code>$sum</code>,<code>$max</code>,<code>$first</code>等。</p><p><strong>索引</strong></p><p>索引通常能够极大的提高查询的效率。<code>db.collection.createIndex(keys, options)</code></p><p>可以使用部分字段创建索引。</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="shiki github-light" style="background-color:#fff;" tabindex="0"><code><span class="line"><span style="color:#24292e;">db.col.createIndex({&quot;title&quot;:1,&quot;description&quot;:-1})</span></span>
<span class="line"><span style="color:#24292e;"></span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>1、查看集合索引</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="shiki github-light" style="background-color:#fff;" tabindex="0"><code><span class="line"><span style="color:#24292e;">db.col.getIndexes()</span></span>
<span class="line"><span style="color:#24292e;"></span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>2、查看集合索引大小</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="shiki github-light" style="background-color:#fff;" tabindex="0"><code><span class="line"><span style="color:#24292e;">db.col.totalIndexSize()</span></span>
<span class="line"><span style="color:#24292e;"></span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>3、删除集合所有索引</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="shiki github-light" style="background-color:#fff;" tabindex="0"><code><span class="line"><span style="color:#24292e;">db.col.dropIndexes()</span></span>
<span class="line"><span style="color:#24292e;"></span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>4、删除集合指定索引</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="shiki github-light" style="background-color:#fff;" tabindex="0"><code><span class="line"><span style="color:#24292e;">db.col.dropIndex(&quot;索引名称&quot;)</span></span>
<span class="line"><span style="color:#24292e;"></span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="pymongo" tabindex="-1"><a class="header-anchor" href="#pymongo" aria-hidden="true">#</a> PyMongo</h2>`,18),q={href:"https://pymongo.readthedocs.io/en/stable/",target:"_blank",rel:"noopener noreferrer"},E=l(`<div class="language-python line-numbers-mode" data-ext="py"><pre class="shiki github-light" style="background-color:#fff;" tabindex="0"><code><span class="line"><span style="color:#24292E;">myclient </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> pymongo.MongoClient(</span><span style="color:#E36209;">username</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">user,                </span><span style="color:#E36209;">password</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">password,                 </span><span style="color:#E36209;">authMechanism</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&#39;SCRAM-SHA-256&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">dblist </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> myclient.list_database_names() </span></span>
<span class="line"><span style="color:#24292E;">mydb </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> myclient[</span><span style="color:#032F62;">&quot;db1&quot;</span><span style="color:#24292E;">]  </span><span style="color:#6A737D;"># 创建/链接 db1 的数据库</span></span>
<span class="line"><span style="color:#24292E;">collist </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> mydb. list_collection_names()</span></span>
<span class="line"><span style="color:#24292E;">mycol </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> mydb[</span><span style="color:#032F62;">&quot;sites&quot;</span><span style="color:#24292E;">]  </span><span style="color:#6A737D;"># 创建集合 collection</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>文档处理</strong></p><p>插入</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="shiki github-light" style="background-color:#fff;" tabindex="0"><code><span class="line"><span style="color:#24292E;">x </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> mycol.insert_one(mydict)  </span><span style="color:#6A737D;"># x.inserted_id</span></span>
<span class="line"><span style="color:#24292E;">mycol.insert_many(mylist)  </span><span style="color:#6A737D;"># 插入多个文档</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>查找</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="shiki github-light" style="background-color:#fff;" tabindex="0"><code><span class="line"><span style="color:#24292E;">myquery </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> { </span><span style="color:#032F62;">&quot;name&quot;</span><span style="color:#24292E;">: { </span><span style="color:#032F62;">&quot;$regex&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;^R&quot;</span><span style="color:#24292E;"> } }</span></span>
<span class="line"><span style="color:#D73A49;">for</span><span style="color:#24292E;"> x </span><span style="color:#D73A49;">in</span><span style="color:#24292E;"> mycol.find(myquery):  </span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">print</span><span style="color:#24292E;">(x)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,6);function k(C,_){const a=t("ExternalLinkIcon");return p(),i("div",null,[r,d("more"),u,s("p",null,[s("a",b,[n("官网"),e(a)]),n(" 下载 tgz 文件")]),y,s("p",null,[n("更多参考 mongo docker 官方，或者 "),s("a",m,[n("菜鸟教程"),e(a)])]),v,s("p",null,[s("a",h,[n("参考"),e(a)])]),g,s("p",null,[s("a",f,[n("更多查询案例与语法"),e(a)])]),x,s("p",null,[s("a",q,[n("官方文档"),e(a)])]),E])}const w=o(c,[["render",k],["__file","笔记mongodb.html.vue"]]);export{w as default};
