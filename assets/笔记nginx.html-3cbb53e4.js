const e=JSON.parse(`{"key":"v-5c38f1c0","path":"/posts/notes/articles/%E7%AC%94%E8%AE%B0nginx.html","title":"Nginx 简陋资源笔记","lang":"zh-CN","frontmatter":{"title":"Nginx 简陋资源笔记","date":"2022-08-27T00:00:00.000Z","author":"Kevin 吴嘉文","category":["知识笔记"],"description":"Nginx 目的 在客户端和服务器之间加入管理层，实现用户访问同一地址，但能在不同服务器地址上操作。session 共享的话还是需要使用 redis 等来实现。 Nginx 官方数据测试表明能够支持高达 50,000 个并发连接数的响应。平时一个 Nginx 可能就能满足小规模的业务需求。 Nginx 可以用来做很多事情： Http 代理，反向代理 负载均衡：Nginx 提供的负载均衡策略有 2 种：内置策略和扩展策略。内置策略为轮询，加权轮询，Ip hash。扩展策略，就天马行空，只有你想不到的没有他做不到的啦，你可以参照所有的负载均衡算法，给他一一找出来做下实现。","head":[["meta",{"property":"og:url","content":"http://wujiawen.xyz/posts/notes/articles/%E7%AC%94%E8%AE%B0nginx.html"}],["meta",{"property":"og:site_name","content":"记忆笔书"}],["meta",{"property":"og:title","content":"Nginx 简陋资源笔记"}],["meta",{"property":"og:description","content":"Nginx 目的 在客户端和服务器之间加入管理层，实现用户访问同一地址，但能在不同服务器地址上操作。session 共享的话还是需要使用 redis 等来实现。 Nginx 官方数据测试表明能够支持高达 50,000 个并发连接数的响应。平时一个 Nginx 可能就能满足小规模的业务需求。 Nginx 可以用来做很多事情： Http 代理，反向代理 负载均衡：Nginx 提供的负载均衡策略有 2 种：内置策略和扩展策略。内置策略为轮询，加权轮询，Ip hash。扩展策略，就天马行空，只有你想不到的没有他做不到的啦，你可以参照所有的负载均衡算法，给他一一找出来做下实现。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-09-23T03:51:36.000Z"}],["meta",{"property":"article:author","content":"Kevin 吴嘉文"}],["meta",{"property":"article:published_time","content":"2022-08-27T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-09-23T03:51:36.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Nginx 简陋资源笔记\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-08-27T00:00:00.000Z\\",\\"dateModified\\":\\"2023-09-23T03:51:36.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Kevin 吴嘉文\\"}]}"]]},"headers":[{"level":2,"title":"Nginx 目的","slug":"nginx-目的","link":"#nginx-目的","children":[]},{"level":2,"title":"Nginx","slug":"nginx","link":"#nginx","children":[]},{"level":2,"title":"Nginx 的安装","slug":"nginx-的安装","link":"#nginx-的安装","children":[]},{"level":2,"title":"Nginx 配置示例","slug":"nginx-配置示例","link":"#nginx-配置示例","children":[{"level":3,"title":"Nginx HTTPS 配置","slug":"nginx-https-配置","link":"#nginx-https-配置","children":[]},{"level":3,"title":"Let's Encrypt 免费 SSL","slug":"let-s-encrypt-免费-ssl","link":"#let-s-encrypt-免费-ssl","children":[]},{"level":3,"title":"其他免费 ssl 证书","slug":"其他免费-ssl-证书","link":"#其他免费-ssl-证书","children":[]}]},{"level":2,"title":"资料","slug":"资料","link":"#资料","children":[]}],"git":{"createdTime":1695441096000,"updatedTime":1695441096000,"contributors":[{"name":"kevinng77","email":"417333277@qq.com","commits":1}]},"readingTime":{"minutes":6.51,"words":1952},"filePathRelative":"posts/notes/articles/笔记nginx.md","localizedDate":"2022年8月27日","excerpt":"<h2> Nginx 目的</h2>\\n<p>在客户端和服务器之间加入管理层，实现用户访问同一地址，但能在不同服务器地址上操作。session 共享的话还是需要使用 redis 等来实现。</p>\\n<h2> Nginx</h2>\\n<p>官方数据测试表明能够支持高达 50,000 个并发连接数的响应。平时一个 Nginx 可能就能满足小规模的业务需求。</p>\\n<p>Nginx 可以用来做很多事情：</p>\\n<ul>\\n<li>Http 代理，反向代理</li>\\n<li>负载均衡：Nginx 提供的负载均衡策略有 2 种：内置策略和扩展策略。内置策略为轮询，加权轮询，Ip hash。扩展策略，就天马行空，只有你想不到的没有他做不到的啦，你可以参照所有的负载均衡算法，给他一一找出来做下实现。</li>\\n</ul>","autoDesc":true}`);export{e as data};
