import{_ as e,P as o,U as c,Y as s,a1 as n,X as p,aQ as a,E as l}from"./framework-6cee4965.js";const u={},i=a(`<h2 id="概述" tabindex="-1"><a class="header-anchor" href="#概述" aria-hidden="true">#</a> 概述</h2><p>支持对 CSS/HTML 的静态、动态操作，可以对浏览器时间做出响应，实现网页与用户的互动；前段与后端的交互等。</p><h2 id="基础语法" tabindex="-1"><a class="header-anchor" href="#基础语法" aria-hidden="true">#</a> 基础语法</h2><p>引入 js 的位置没有限制，但推荐统一放<code>&lt;body&gt;</code> 或 <code>&lt;head&gt; </code>部分中，或者同时存在于两个部分中。保持页面规范。</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
    window<span class="token punctuation">.</span><span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">&quot;hello world&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>js/fistjs.js<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="调试" tabindex="-1"><a class="header-anchor" href="#调试" aria-hidden="true">#</a> 调试</h4><p>google chrome 中可以直接对 js 进行调试。<code>ctrl + c</code> 打开开发者页面，在 <code>console</code> 中直接运行 js 代码。</p><h4 id="数据类型" tabindex="-1"><a class="header-anchor" href="#数据类型" aria-hidden="true">#</a> 数据类型</h4>`,8),r=s("code",null,"var 变量 = 字面量",-1),d={href:"https://www.runoob.com/js/js-type-conversion.html",target:"_blank",rel:"noopener noreferrer"},k=a(`<p><strong>值类型：</strong></p><ul><li><strong>数字：</strong> <code>123</code>, <code>3.14</code>, <code>NaN</code>, <code>Infinity</code>, <code>1e-5</code>；js 只有一种数字类型。</li></ul><p>将字符串转换为数字：<code>parseInt()</code>，<code>parseFloat()</code> 或者直接使用一元运算符 <code>+</code>， <code>var y = &quot;5&quot;; var x = + y;</code></p><ul><li><strong>字符串：</strong> <code>var s = &#39;text&#39; </code> 或 <code>&quot;text&quot;</code></li></ul><p>常用方法：<code>s[0]</code>；<code>s.length</code>；<code>toLowerCase()</code>；<code>indexOf()</code>；<code>fromCharCode()</code> 将 Unicode 转换为字符串；<code>search()</code> 正则匹配。见下面正则。<code>substring(beg,end)</code> 截取子字符串。 不推荐使用 String 创建对象：<code>var s = new String(&quot;123&quot;)</code> 字符串模板：<code>price:\${s}</code> 此处使用 \` 号包含，而非引号！！</p><ul><li><p><strong>布尔值：</strong> <code>true</code>、<code>false</code></p></li><li><p><strong>空：</strong> <code>Null</code> 为 object 对象，当使用完一个比较大的对象需要释放内存时，把他设置成 <code>null</code></p></li><li><p><strong>未定义：</strong> <code>Undefined</code></p></li></ul><p><strong>引用数据类型（对象类型）：</strong></p><ul><li><strong>数组（Array）：</strong> <code>[1,2,3,4]</code></li></ul><p><code>slice(beg, end)</code> 截取；<code>.push()</code>,<code>.pop()</code>, <code>.sort()</code>, <code>.reverse()</code>, <code>arr.join(&quot;-&quot;)</code> 链接的方式和 python 相反；<code>.shift()</code> 删除头部，<code>.unshift()</code> 在头部插入</p><p>定义数组时，最后一个值后面不要添加逗号</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">var</span> colors <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">//这样数组的长度可能为 3 也可能为 4。</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li><strong>对象（Object）：</strong> <code>var per = {key:&quot;value&quot;,key3:123}</code></li></ul><p>定义对象，最后不能添加逗号。 对象内容能够直接复制：<code>per.name=&quot;123&quot;</code></p><p>访问对象<code>per.key</code> 或 <code>per[&#39;key&#39;]</code> ，对象中也可以储存函数方法 <code>func: function(){}</code>，并且调用 <code>per.func()</code>；对象中的函数能够使用 <code>this.var</code> 来访问到对象内的其他变量。</p><p>在浏览器中，<code>this</code> 默认为 window 对象</p><ul><li><strong>map：</strong></li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">var</span> map <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Map</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token string">&#39;tom&#39;</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token string">&#39;jack&#39;</span><span class="token punctuation">,</span><span class="token number">90</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token string">&#39;tim&#39;</span><span class="token punctuation">,</span><span class="token number">80</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> name <span class="token operator">=</span> map<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;tom&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//通过 key 获取 value</span>
map<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span><span class="token string">&#39;tom&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//删除元素</span>
map<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">&#39;kate&#39;</span><span class="token punctuation">,</span><span class="token number">70</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><strong>set：</strong></li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">var</span> set <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
set<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span> set<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
set<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
set<span class="token punctuation">.</span>size<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><strong>函数：</strong> <code>function func(a){return a;}</code> 定义一个函数</li></ul><p>ES6 新增了箭头函数：<code>const x = (x, y) =&gt; x * y;</code> 即 <code>(参数 1, 参数 2, …, 参数 N) =&gt; { 函数声明 }</code></p><ul><li><strong>正则：</strong> <code>var patt = /runoob/i </code>其中 <code>i</code> 为修饰符，这里表示搜索不区分大小写；<code>g</code> 执行全局匹配，匹配所有内容，而非匹配第一个后停止；<code>m</code> 执行多行匹配</li></ul><p>字符串搜索：<code>s.search(patt)</code>；字符替换<code>s.replace(&quot;&quot;)</code> 常见的匹配符号：<code>[a-A0-9]</code>，<code>\\d</code> 数字，<code>\\b</code> 单词边界</p><ul><li><strong>日期：</strong> <code>data = new Date();</code></li></ul><p>获取时间：<code>.getDate()</code>, <code>getDay()</code>, <code>getFullYear()</code>，同理还有 <code>Hours</code>, <code>Minutes</code>, <code>Month</code>, <code>Seconds</code>。 将日期转换为 <code>time = data.getTime()</code> 后进行日期大小比较。 日期转字符串：<code>data.toLocaleString()</code></p><ul><li><strong>变量：</strong> <code>var a = 1</code>；赋值使用 <code>=</code>；等价与 <code>var a; a=1;</code> 对于 <code>var x,y,z=1;</code> 其中 <code>x,y</code> 不会被赋值。</li></ul><p>注意：局部变量可以使用 <code>let</code> 来声明，防止更改到外部变量的值。如果在循环体内使用 <code>for(var i=0;i&lt;4;i++){}</code> 那么循环结束后，<code>i</code> 的值将为 4</p><p>声明新的变量时候也可以用 <code>new</code> 关键词声明类型，如<code>var x = new Number;</code> 全局变量在页面关闭后销毁；局部变量在函数执行完毕后销毁； js 中拥有动态类型，相同变量可用作不同类型。 <strong>声明提升：</strong> JavaScript 中，函数及变量的声明都将被提升到函数的最顶部。因此代码中可以先使用变量，而后在其后面声明。 <strong>严格模式：</strong> 在文件顶部加入<code>use strict</code>后，js 的语法要求会更严格。包括上述声明提升将不生效。不允许删除变量、函数；不允许使用转移字符等</p><p>逻辑运算符：<code>&amp;&amp;</code>, <code>||</code>, <code>!</code> 非操作 比较运算符：<code>==</code> 判断值相等；<code>===</code> 判断类型相等，值也一样；<code>!=</code>, <code>&gt;</code>, <code>&lt;</code></p><h4 id="事件" tabindex="-1"><a class="header-anchor" href="#事件" aria-hidden="true">#</a> 事件</h4>`,30),v=s("code",null,"onclick",-1),m=s("code",null,"onload",-1),g=s("code",null,"onchange",-1),b=s("code",null,"onmouseover",-1),h=s("code",null,"onmouseout",-1),f={href:"https://www.runoob.com/jsref/dom-obj-event.html",target:"_blank",rel:"noopener noreferrer"},q=a(`<div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>some-HTML-element</span> <span class="token attr-name">some-event</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&#39;</span>JavaScript 代码<span class="token punctuation">&#39;</span></span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>如</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token special-attr"><span class="token attr-name">onclick</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token value javascript language-javascript"><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&#39;demo&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>innerHTML<span class="token operator">=</span><span class="token function">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span><span class="token punctuation">&quot;</span></span></span><span class="token punctuation">&gt;</span></span>现在的时间是?<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>事件中的 <code>this</code> 指向接收事件的 HTML 元素</p><h3 id="运算符" tabindex="-1"><a class="header-anchor" href="#运算符" aria-hidden="true">#</a> 运算符</h3><p>常用的运算：<code>++</code>, <code>--</code>, <code>%</code> 取模, <code>/</code>, <code>*</code> ；支持自运算符如 <code>/=</code>, <code>%=</code>。数字与字符串相加的话，数字会先被转化为字符串。</p><h3 id="条件语句" tabindex="-1"><a class="header-anchor" href="#条件语句" aria-hidden="true">#</a> 条件语句</h3><p><code>voteable=(age&lt;18)?&quot;年龄太小&quot;:&quot;年龄已达到&quot;;</code></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">if</span> <span class="token punctuation">(</span>time<span class="token operator">&lt;</span><span class="token number">10</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>time<span class="token operator">&gt;=</span><span class="token number">10</span> <span class="token operator">&amp;&amp;</span> time<span class="token operator">&lt;</span><span class="token number">20</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token keyword">else</span>
<span class="token punctuation">{</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="循环" tabindex="-1"><a class="header-anchor" href="#循环" aria-hidden="true">#</a> 循环</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>cars<span class="token punctuation">.</span>length<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span> <span class="token punctuation">}</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span>x <span class="token keyword">in</span> person<span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token keyword">while</span> <span class="token punctuation">(</span>i<span class="token operator">&lt;</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    i<span class="token operator">++</span><span class="token punctuation">;</span><span class="token punctuation">}</span>  <span class="token comment">// while 和 for(;i&lt;5;){} 很像</span>
<span class="token keyword">do</span>
<span class="token punctuation">{</span>i<span class="token operator">++</span><span class="token punctuation">;</span><span class="token punctuation">}</span>
<span class="token keyword">while</span> <span class="token punctuation">(</span>i<span class="token operator">&lt;</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>循环中可以 <code>break</code> 或者 <code>continue</code></p><h3 id="输出" tabindex="-1"><a class="header-anchor" href="#输出" aria-hidden="true">#</a> 输出</h3><p><code>window.alert()</code> 弹窗 <code>console.log()</code> 输出到浏览器控制台 <code>debugger</code> 在开发者模式下打断点调试。</p><p><code>document.write()</code> 在当前位置写入 HTML 内容。</p><p><code>document.getElementByID(&quot;demo&quot;).innerHTML=</code> 在选中的 HTML 元素中写入或修改内容。</p><h4 id="错误语句" tabindex="-1"><a class="header-anchor" href="#错误语句" aria-hidden="true">#</a> 错误语句</h4><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">try</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>x <span class="token operator">==</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span>  <span class="token keyword">throw</span> <span class="token string">&quot;值为空&quot;</span><span class="token punctuation">;</span>    <span class="token comment">//异常的抛出</span>
<span class="token punctuation">}</span> <span class="token keyword">catch</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>
   message<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> <span class="token string">&quot;错误: &quot;</span> <span class="token operator">+</span> err<span class="token punctuation">;</span>    <span class="token comment">//异常的捕获与处理</span>
<span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
    <span class="token operator">...</span>    <span class="token comment">//结束处理</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="面向对象" tabindex="-1"><a class="header-anchor" href="#面向对象" aria-hidden="true">#</a> 面向对象</h3><p>class 关键字在 ES6 之后加入了。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">class</span> <span class="token class-name">Site</span> <span class="token punctuation">{</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">name</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>sitename <span class="token operator">=</span> name<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token function">present</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token string">&#39;我喜欢&#39;</span> <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>sitename<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
 
<span class="token keyword">class</span> <span class="token class-name">Runoob</span> <span class="token keyword">extends</span> <span class="token class-name">Site</span> <span class="token punctuation">{</span>  <span class="token comment">//继承</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">name<span class="token punctuation">,</span> age</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">super</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 使用 super 调用父类构造方式</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>age <span class="token operator">=</span> age<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">present</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&#39;, 它创建了 &#39;</span> <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>age <span class="token operator">+</span> <span class="token string">&#39; 年。&#39;</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">get</span> <span class="token function">s_name</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token comment">// getter 和 setter 用于操作类中属性</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>sitename<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">set</span> <span class="token function">s_name</span><span class="token punctuation">(</span><span class="token parameter">x</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>sitename <span class="token operator">=</span> x<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
 
<span class="token keyword">let</span> noob <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Runoob</span><span class="token punctuation">(</span><span class="token string">&quot;菜鸟教程&quot;</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&quot;demo&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> noob<span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="操作-bom" tabindex="-1"><a class="header-anchor" href="#操作-bom" aria-hidden="true">#</a> 操作 BOM</h2><ul><li><strong>window</strong></li></ul><p>浏览器对象，如获取浏览器大小：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">var</span> w<span class="token operator">=</span>window<span class="token punctuation">.</span>innerWidth
<span class="token operator">||</span> document<span class="token punctuation">.</span>documentElement<span class="token punctuation">.</span>clientWidth
<span class="token operator">||</span> document<span class="token punctuation">.</span>body<span class="token punctuation">.</span>clientWidth<span class="token punctuation">;</span>
 
<span class="token keyword">var</span> h<span class="token operator">=</span>window<span class="token punctuation">.</span>innerHeight
<span class="token operator">||</span> document<span class="token punctuation">.</span>documentElement<span class="token punctuation">.</span>clientHeight
<span class="token operator">||</span> document<span class="token punctuation">.</span>body<span class="token punctuation">.</span>clientHeight<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>调整窗口大小 <code>window.resizeTo()</code> 等</p><ul><li><p><strong>Screen</strong> ：<code>screen.availWidth</code>, <code>screen.availHeight </code></p></li><li><p><strong>location：</strong> 当前页面的 URL 信息</p></li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token literal-property property">host</span><span class="token operator">:</span> <span class="token string">&quot;www.baidu.com&quot;</span>
<span class="token literal-property property">href</span><span class="token operator">:</span> <span class="token string">&quot;https://www.baidu.com/&quot;</span>
<span class="token literal-property property">protocol</span><span class="token operator">:</span> <span class="token string">&quot;https&quot;</span>
reloadLf <span class="token function">reload</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">//刷新网页</span>
<span class="token comment">// 设置新的地址</span>
location<span class="token punctuation">.</span><span class="token function">assign</span><span class="token punctuation">(</span><span class="token string">&#39;新的网站&#39;</span><span class="token punctuation">)</span>  <span class="token comment">// 可以用来设置新的网站跳转，获得类似流氓插件或网站的效果。</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><strong>document：</strong></li></ul>`,29),y={href:"https://www.runoob.com/cssref/css-selectors.html",target:"_blank",rel:"noopener noreferrer"},w=a(`<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">//对应 css 选择器</span>
<span class="token keyword">var</span> h1 <span class="token operator">=</span> doucment<span class="token punctuation">.</span><span class="token function">getElementByTagName</span><span class="token punctuation">(</span><span class="token string">&#39;h1&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> p1 <span class="token operator">=</span> doucment<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&#39;p1&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> p2 <span class="token operator">=</span> doucment<span class="token punctuation">.</span><span class="token function">getElementByClassName</span><span class="token punctuation">(</span><span class="token string">&#39;p2&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> father <span class="token operator">=</span> doucment<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&#39;father&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//获取父节点下所有的子节点</span>
<span class="token keyword">var</span> childrens <span class="token operator">=</span> father<span class="token punctuation">.</span>children<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),j={href:"https://www.runoob.com/js/js-htmldom.html",target:"_blank",rel:"noopener noreferrer"},x=a(`<p>表单</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">var</span> x <span class="token operator">=</span> document<span class="token punctuation">.</span>forms<span class="token punctuation">[</span><span class="token string">&quot;myForm&quot;</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">&quot;fname&quot;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>value<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>其中 HTML 代码为：</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>myForm<span class="token punctuation">&quot;</span></span> <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>demo_form.php<span class="token punctuation">&quot;</span></span> <span class="token special-attr"><span class="token attr-name">onsubmit</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token value javascript language-javascript"><span class="token keyword">return</span> <span class="token function">validateForm</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span><span class="token punctuation">&quot;</span></span></span> <span class="token attr-name">method</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>post<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
名字: <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text<span class="token punctuation">&quot;</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>fname<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>submit<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>提交<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在 js 代码块中可添加算法，对表单内容进行验证。</p><ul><li>DOM 分配事件：</li></ul><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&quot;myBtn&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function-variable function">onclick</span><span class="token operator">=</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token function">displayDate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>EventListener：像元素添加事件反应</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>element<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&quot;mouseover&quot;</span><span class="token punctuation">,</span> myFunction<span class="token punctuation">)</span><span class="token punctuation">;</span>
element<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&quot;click&quot;</span><span class="token punctuation">,</span> mySecondFunction<span class="token punctuation">)</span><span class="token punctuation">;</span>
element<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&quot;mouseout&quot;</span><span class="token punctuation">,</span> myThirdFunction<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>计时器</li></ul><p>让一个函数一直运行，间隔 <code>m</code> 毫秒 <code>var myVar = window.setInterval(&quot;func&quot;,m);</code> 停止一个 Interval 的运行<code>window.clearInterval(myVar)</code></p><h2 id="jquery" tabindex="-1"><a class="header-anchor" href="#jquery" aria-hidden="true">#</a> jQuery</h2>`,12),_={href:"https://www.bootcdn.cn/jquery/",target:"_blank",rel:"noopener noreferrer"},M=a(`<div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>https://cdn.bootcdn.net/ajax/libs/jquery/3.6.0/jquery.js<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>jQuery 基础语法：<code>$(selector).action()</code> ，<code>$</code> 代表使用 jQuery，<code>(selector)</code> 选择元素</p><p>如 <code>$(document).ready(function(){执行代码})</code>：等待 DOM 结构加载完毕后，执行函数</p><p>选择元素时采用了 Xpath 和 CSS 选择器语法的组合：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&#39;p&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// document.getElementsByTagName();</span>
<span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&#39;#id&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// document.getElementById();</span>
<span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&#39;.class1&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// document.getElementsByClassName();</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="事件-1" tabindex="-1"><a class="header-anchor" href="#事件-1" aria-hidden="true">#</a> 事件</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;p&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
  <span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">hide</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 其中 this 指向被选中的 p 元素</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>hover()</code></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;#p1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">hover</span><span class="token punctuation">(</span>
    <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">&quot;你进入了 p1!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">&quot;拜拜! 现在你离开了 p1!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="操作" tabindex="-1"><a class="header-anchor" href="#操作" aria-hidden="true">#</a> 操作</h3><p>修改文本</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&#39;#test-ul li[name=python]&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//获得值</span>
<span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&#39;#test-ul li[name=python]&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token string">&#39;设置值&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//设置值</span>
<span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&#39;#test-ul&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">html</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//获得值</span>
<span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&#39;#test-ul&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">html</span><span class="token punctuation">(</span><span class="token string">&#39;&lt;strong&gt;123&lt;/strong&gt;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//设置值</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>修改元素属性</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;#runoob&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">&quot;href&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;http://www.runoob.com/jquery&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 添加任意属性</span>

<span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;h1,h2,p&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addClass</span><span class="token punctuation">(</span><span class="token string">&quot;blue&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 添加 class 属性</span>
<span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;h1,h2,p&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">removeClass</span><span class="token punctuation">(</span><span class="token string">&quot;blue&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;h1,h2,p&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toggleClass</span><span class="token punctuation">(</span><span class="token string">&quot;blue&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 对类属性切换，有变无，无变有</span>

<span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;p&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token string">&quot;background-color&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;yellow&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 修改元素 CSS</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>添加元素，如在选中的 body 节点中添加元素：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">appendText</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">var</span> txt1<span class="token operator">=</span><span class="token string">&quot;&lt;p&gt;文本-1。&lt;/p&gt;&quot;</span><span class="token punctuation">;</span>              <span class="token comment">// 使用 HTML 标签创建文本</span>
    <span class="token keyword">var</span> txt2<span class="token operator">=</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;&lt;p&gt;&lt;/p&gt;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token string">&quot;文本-2。&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 使用 jQuery 创建文本</span>
    <span class="token keyword">var</span> txt3<span class="token operator">=</span>document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">&quot;p&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    txt3<span class="token punctuation">.</span>innerHTML<span class="token operator">=</span><span class="token string">&quot;文本-3。&quot;</span><span class="token punctuation">;</span>               <span class="token comment">// 使用 DOM 创建文本 text with DOM</span>
    <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;body&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>txt1<span class="token punctuation">,</span>txt2<span class="token punctuation">,</span>txt3<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 尾部添加；头部添加使用 prepend()</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>后面添加元素：<code>$(&quot;img&quot;).after(&quot;在后面添加文本&quot;);</code> ；<code>.before()</code>前面添加</p><p>发送请求：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;button&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
  $<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;demo_test.php&quot;</span><span class="token punctuation">,</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">data<span class="token punctuation">,</span>status</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">&quot;数据: &quot;</span> <span class="token operator">+</span> data <span class="token operator">+</span> <span class="token string">&quot;\\n 状态: &quot;</span> <span class="token operator">+</span> status<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;button&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    $<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">&quot;/try/ajax/demo_test_post.php&quot;</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
        <span class="token literal-property property">name</span><span class="token operator">:</span><span class="token string">&quot;菜鸟教程&quot;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">url</span><span class="token operator">:</span><span class="token string">&quot;http://www.runoob.com&quot;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">data<span class="token punctuation">,</span>status</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">&quot;数据: \\n&quot;</span> <span class="token operator">+</span> data <span class="token operator">+</span> <span class="token string">&quot;\\n 状态: &quot;</span> <span class="token operator">+</span> status<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="其他" tabindex="-1"><a class="header-anchor" href="#其他" aria-hidden="true">#</a> 其他</h2><h3 id="javascript-库" tabindex="-1"><a class="header-anchor" href="#javascript-库" aria-hidden="true">#</a> javascript 库</h3><p>jQuery：用的很多的 js 库，简化了 DOM 操作。</p><p>React：体术虚拟 DOM，提升渲染效率；使用复杂，需要额外学习 jsx 语言</p><p>Vue：模块化开发+虚拟 DOM</p><p>Axios：前段通信框架</p><h3 id="前段框架" tabindex="-1"><a class="header-anchor" href="#前段框架" aria-hidden="true">#</a> 前段框架</h3><p>Ant Design</p><p>ElementUI</p><p>Bootstrap：成熟的框架</p><p>AmazeUI：HTML5 跨屏前段框架</p><p>后端技术：NODEJS</p>`,31);function L(E,$){const t=l("ExternalLinkIcon");return o(),c("div",null,[i,s("p",null,[n("js 中一般固定值称为字面量，"),r,n("。"),s("a",d,[n("类型转换"),p(t)])]),k,s("p",null,[n("HTML 页面事件包括按钮点击 "),v,n("、页面完成加载 "),m,n("、HTML 元素改变 "),g,n(" ，鼠标移动到元素上 "),b,n("，鼠标从一个 HTML 元素上移开 "),h,n(" 等。更多事件参考："),s("a",f,[n("JavaScript 参考手册 - HTML DOM 事件"),p(t)]),n(" html 中可以添加事件属性，使用 js 来对事件做出反应，js 函数用单/双引号添加，格式为：")]),q,s("p",null,[n("获取 DOM 节点："),s("a",y,[n("css 选择器"),p(t)]),n(" ；推荐使用 jQuery ，而非原生 js 的 document 选择器。")]),w,s("p",null,[n("对节点可以进行插入、删除、更新等操作；"),s("a",j,[n("DOM 常用命令"),p(t)])]),x,s("p",null,[s("a",_,[n("下载 jquery"),p(t)])]),M])}const H=e(u,[["render",L],["__file","笔记javascript.html.vue"]]);export{H as default};
