import{_ as l}from"./plugin-vue_export-helper-c27b6911.js";import{r as e,o as p,c as i,a as s,b as n,d as o,f as c}from"./app-29ce8251.js";const r="/assets/img/sas/image-20221210215045136.png",d={},t=s("h2",{id:"sas",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#sas","aria-hidden":"true"},"#"),n(" SAS")],-1),u={href:"https://documentation.sas.com/doc/en/pgmsascdc/v_017/proc/n0asd2rsj9aedgn1828aptww56of.htm",target:"_blank",rel:"noopener noreferrer"},y=c(`<h3 id="基础" tabindex="-1"><a class="header-anchor" href="#基础" aria-hidden="true">#</a> 基础</h3><p>变量数据类型：定义方式为：<code>var_name type;</code> 其中 <code>type</code> 包括：</p><ul><li><strong>数值型：</strong> 不分整数小数</li><li><strong>字符型：</strong> <code>$10</code>。10 表示最大字符数量。最多支持 32767 字符。</li><li><strong>时间型：</strong> <code>DATA11</code>等</li></ul><p><strong>DATA step</strong></p><ul><li><p>基础创建，读取，修改数据</p></li><li><p>处理方法是逐行处理，相当于定义一个函数，对数据集逐行进行处理。</p></li><li><div class="language-c line-numbers-mode" data-ext="c"><pre class="shiki github-light" style="background-color:#fff;" tabindex="0"><code><span class="line"><span style="color:#6A737D;">/*从第三行开始读到 5 行*/</span></span>
<span class="line"><span style="color:#24292E;">DATA DB;</span></span>
<span class="line"><span style="color:#24292E;">	INFILE </span><span style="color:#032F62;">&quot;PATH TO FILE&quot;</span><span style="color:#24292E;"> FIRSTOBS</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">3</span><span style="color:#24292E;"> OBS</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">5</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">	INPUT </span><span style="color:#032F62;">&quot;@1 COL1 $10. COL2 3.1 DATE MMDDYY10.&quot;</span><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#6A737D;">	/*如果是字符串类型，后面要加字符串, COL2 占用 3 个字符，包含小数点后 1 个数，但是如果出现一个没*/</span></span>
<span class="line"><span style="color:#6A737D;">	/*@ 说明从第一个列开始都*/</span></span>
<span class="line"><span style="color:#24292E;">	LABEL ReceiveDate</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;Date order was received&quot;</span><span style="color:#6A737D;">  /*给 col name 换标签*/</span></span>
<span class="line"><span style="color:#24292E;">	Zone </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">14</span><span style="color:#24292E;">;</span><span style="color:#6A737D;"> /*直接生成一个新的 COL*/</span></span>
<span class="line"><span style="color:#24292E;">	avg </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">MEAN</span><span style="color:#24292E;">(COL1, COL2)</span></span>
<span class="line"><span style="color:#24292E;">	INPUT X @;</span><span style="color:#6A737D;">  /*我们先读入 x 这个 col，*/</span></span>
<span class="line"><span style="color:#24292E;">	INPUT Y;</span><span style="color:#6A737D;"> /*这时候我们就能读入 X Y 两列数据*/</span></span>
<span class="line"><span style="color:#24292E;">	INPUT Z @@;</span><span style="color:#6A737D;">  /*记录永久保留，知道被覆盖*/</span></span>
<span class="line"><span style="color:#24292E;">	RETAIN record_max;</span><span style="color:#6A737D;">  /**/</span></span>
<span class="line"><span style="color:#24292E;">	MAX_VAL </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">MAX</span><span style="color:#24292E;">(record_max, COL2);</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><p>SAS 是每行读取的，因此使用 RETAIN 相当于创造了一个临时变量，而不适用 RETAIN 相当于直接创造了新的 col。</p><p>读取时候可以在 input 加入 <code>@sym</code> 来提取复杂语句，如下面提取的目标为 <code>123[2022-01-01 -000] GET /mnt/c/log.txt</code>：</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="shiki github-light" style="background-color:#fff;" tabindex="0"><code><span class="line"><span style="color:#24292E;">DATA DB;</span></span>
<span class="line"><span style="color:#24292E;">	INFILE </span><span style="color:#032F62;">&quot;PATH TO FILE&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">	INPUT @</span><span style="color:#032F62;">&#39;[&#39;</span><span style="color:#24292E;"> Lastdata DATE11. @</span><span style="color:#032F62;">&#39;GET&#39;</span><span style="color:#24292E;"> File :$</span><span style="color:#005CC5;">20.</span><span style="color:#24292E;">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>其他输入方式请查看搜索引擎。</p><p><strong>PROC step</strong></p><ul><li>进行复杂操作 相当于函数</li></ul><h3 id="操作界面" tabindex="-1"><a class="header-anchor" href="#操作界面" aria-hidden="true">#</a> 操作界面</h3><p>SAS 带有自己的软件界面，在软件中点击 run submit 就可以提交了。左边是逻辑库（数据文件夹），右下角写代码，右上看日志。</p><h3 id="数据导入" tabindex="-1"><a class="header-anchor" href="#数据导入" aria-hidden="true">#</a> 数据导入</h3><p>一般如果前几行缺失的话，该列会默认识别成字符型。可以在前几行添加一些数字性数据，然后导入后删掉这些行。</p><h4 id="永久数据库链接" tabindex="-1"><a class="header-anchor" href="#永久数据库链接" aria-hidden="true">#</a> 永久数据库链接</h4><p>sas 逻辑库相当于文件夹，用于储存文件。</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="shiki github-light" style="background-color:#fff;" tabindex="0"><code><span class="line"><span style="color:#24292E;">libname sasdb </span><span style="color:#032F62;">&quot;path/to/data_dir&quot;</span></span>
<span class="line"><span style="color:#24292E;">DATA sasdb.db_name</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>在逻辑库中的数据库名称叫做 sasdb</p><h4 id="import-导入" tabindex="-1"><a class="header-anchor" href="#import-导入" aria-hidden="true">#</a> <strong>import 导入</strong></h4><p>除了用 data 导入常用数据库，也可以用 import</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="shiki github-light" style="background-color:#fff;" tabindex="0"><code><span class="line"><span style="color:#24292E;">Proc import</span></span>
<span class="line"><span style="color:#24292E;">DATAfile</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;pathname&quot;</span></span>
<span class="line"><span style="color:#24292E;">GETNAMES</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">NO</span><span style="color:#6A737D;">  /*不讲第一行作为 col_name*/</span></span>
<span class="line"><span style="color:#24292E;">out</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">sasdb</span></span>
<span class="line"><span style="color:#24292E;">DELIMITER</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;,&quot;</span><span style="color:#6A737D;">  /* 分割符 */</span></span>
<span class="line"><span style="color:#24292E;">dbms</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">identifier replace;</span></span>
<span class="line"><span style="color:#24292E;">Run;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>选取部分 col 读入，输出一个数据集时候，效率高：</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="shiki github-light" style="background-color:#fff;" tabindex="0"><code><span class="line"><span style="color:#24292E;">DATA NEWDB;</span></span>
<span class="line"><span style="color:#24292E;">Set </span><span style="color:#6F42C1;">rawdb</span><span style="color:#24292E;">(keep</span><span style="color:#D73A49;">/</span><span style="color:#24292E;">drop</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">col_name);</span></span>
<span class="line"><span style="color:#24292E;">Run;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>以下能够输出到多个数据集中，但内存中操作的是整个 RAWDB 数据集。</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="shiki github-light" style="background-color:#fff;" tabindex="0"><code><span class="line"><span style="color:#24292E;">DATA </span><span style="color:#6F42C1;">NEWDB1</span><span style="color:#24292E;">(keep</span><span style="color:#D73A49;">/</span><span style="color:#24292E;">drop</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">col_name)</span></span>
<span class="line"><span style="color:#6F42C1;">NEWDB2</span><span style="color:#24292E;">(keep</span><span style="color:#D73A49;">/</span><span style="color:#24292E;">drop</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">col_name);</span></span>
<span class="line"><span style="color:#24292E;">Set rawdb;</span></span>
<span class="line"><span style="color:#24292E;">Run;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="数据选择" tabindex="-1"><a class="header-anchor" href="#数据选择" aria-hidden="true">#</a> 数据选择</h4><p>Data 语句指定了新数据集名，set 指定要读取的老数据集名。如果不想创建新的，则也可以在 data 中指定老数据集。</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="shiki github-light" style="background-color:#fff;" tabindex="0"><code><span class="line"><span style="color:#24292E;">DATA NEWDB;</span></span>
<span class="line"><span style="color:#24292E;">SET OLD_DB;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="软件直接导入-view-table-窗口" tabindex="-1"><a class="header-anchor" href="#软件直接导入-view-table-窗口" aria-hidden="true">#</a> 软件直接导入 View table 窗口</h4><p>一般如果前几行缺失的话，该列会默认识别成字符型。可以在前几行添加一些数字性数据，然后导入后删掉这些行。</p><h3 id="数据操作" tabindex="-1"><a class="header-anchor" href="#数据操作" aria-hidden="true">#</a> 数据操作</h3><h5 id="变量" tabindex="-1"><a class="header-anchor" href="#变量" aria-hidden="true">#</a> 变量</h5><p>如果我们执行这样的操作：</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="shiki github-light" style="background-color:#fff;" tabindex="0"><code><span class="line"><span style="color:#24292E;">data c;</span></span>
<span class="line"><span style="color:#24292E;">set b;</span></span>
<span class="line"><span style="color:#24292E;">	new_col</span><span style="color:#D73A49;">+</span><span style="color:#24292E;">col;</span></span>
<span class="line"><span style="color:#24292E;">	format new_col;</span></span>
<span class="line"><span style="color:#24292E;">run;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>sas 相当与执行了以下 python 操作：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="shiki github-light" style="background-color:#fff;" tabindex="0"><code><span class="line"><span style="color:#24292E;">c </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> new_data()</span></span>
<span class="line"><span style="color:#24292E;">b </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> load_data()</span></span>
<span class="line"><span style="color:#D73A49;">for</span><span style="color:#24292E;"> row </span><span style="color:#D73A49;">in</span><span style="color:#24292E;"> b:</span></span>
<span class="line"><span style="color:#24292E;">    col1, col2, col3 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> b.columns</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> new_col:</span></span>
<span class="line"><span style="color:#24292E;">        new_col </span><span style="color:#D73A49;">+=</span><span style="color:#24292E;"> col1 </span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">else</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">        new_col</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">0</span></span>
<span class="line"><span style="color:#24292E;">    c.append(col1, col2, col3,</span><span style="color:#005CC5;">float</span><span style="color:#24292E;">(new_col))  </span><span style="color:#6A737D;"># 这一布会添加所有中间出现过的变量</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>对与 b 表格中的 cols 变量，他会覆盖之前定义过的所有同名变量。</p><p>对于中间我们自定义的其他变量，它会保持住上次更新的值。</p><p>所有中间变量都会被统一默认 output，当然我们可以自定义 output。</p><h5 id="运算符号" tabindex="-1"><a class="header-anchor" href="#运算符号" aria-hidden="true">#</a> 运算符号</h5><div class="language-c line-numbers-mode" data-ext="c"><pre class="shiki github-light" style="background-color:#fff;" tabindex="0"><code><span class="line"><span style="color:#D73A49;">**</span></span>
<span class="line"><span style="color:#D73A49;">*</span></span>
<span class="line"><span style="color:#D73A49;">+</span></span>
<span class="line"><span style="color:#D73A49;">-</span></span>
<span class="line"><span style="color:#D73A49;">=</span><span style="color:#6A737D;"> /*等于与复制语句有时候很相似*/</span></span>
<span class="line"><span style="color:#D73A49;">^=</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">~=</span><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#D73A49;">&gt;=</span></span>
<span class="line"><span style="color:#D73A49;">&amp;</span><span style="color:#24292E;">  and</span></span>
<span class="line"><span style="color:#D73A49;">|</span><span style="color:#24292E;">,</span><span style="color:#D73A49;">!</span><span style="color:#24292E;">  OR</span></span>
<span class="line"><span style="color:#D73A49;">^</span><span style="color:#24292E;"> not</span></span>
<span class="line"><span style="color:#24292E;">max</span></span>
<span class="line"><span style="color:#24292E;">min</span></span>
<span class="line"><span style="color:#D73A49;">||</span><span style="color:#24292E;"> 字符链接操作</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="条件运算" tabindex="-1"><a class="header-anchor" href="#条件运算" aria-hidden="true">#</a> 条件运算</h5><div class="language-c line-numbers-mode" data-ext="c"><pre class="shiki github-light" style="background-color:#fff;" tabindex="0"><code><span class="line"><span style="color:#24292E;">data a c;</span></span>
<span class="line"><span style="color:#24292E;">set b;</span></span>
<span class="line"><span style="color:#D73A49;">if</span><span style="color:#24292E;"> gender</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">1</span><span style="color:#24292E;"> then </span><span style="color:#D73A49;">do</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">    output a;</span></span>
<span class="line"><span style="color:#24292E;">    end;</span></span>
<span class="line"><span style="color:#D73A49;">else</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> gender</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">. then </span><span style="color:#D73A49;">do</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">    tg</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&#39;gender_missing&#39;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">    end;</span></span>
<span class="line"><span style="color:#D73A49;">else</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">do</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">    output c;</span></span>
<span class="line"><span style="color:#24292E;">    end;</span></span>
<span class="line"><span style="color:#24292E;">Run;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>部分逻辑</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="shiki github-light" style="background-color:#fff;" tabindex="0"><code><span class="line"><span style="color:#24292E;">COL </span><span style="color:#6F42C1;">IN</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;TARGET&#39;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&#39;TARGET&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">Year</span><span style="color:#D73A49;">&lt;</span><span style="color:#005CC5;">1999</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="循环" tabindex="-1"><a class="header-anchor" href="#循环" aria-hidden="true">#</a> 循环</h5><div class="language-c line-numbers-mode" data-ext="c"><pre class="shiki github-light" style="background-color:#fff;" tabindex="0"><code><span class="line"><span style="color:#24292E;">DO I </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;"> TO </span><span style="color:#005CC5;">5</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">	CODE.</span></span>
<span class="line"><span style="color:#24292E;">END;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="日期操作" tabindex="-1"><a class="header-anchor" href="#日期操作" aria-hidden="true">#</a> 日期操作</h5><h5 id="array" tabindex="-1"><a class="header-anchor" href="#array" aria-hidden="true">#</a> ARRAY</h5><p>创建 <code>store</code> 数组，储存四个列的变量</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="shiki github-light" style="background-color:#fff;" tabindex="0"><code><span class="line"><span style="color:#24292E;">ARRAY </span><span style="color:#6F42C1;">store</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">4</span><span style="color:#24292E;">) Macys Penneys Sears Target;</span></span>
<span class="line"><span style="color:#6A737D;">/*或用 -- 省略中间列*/</span></span>
<span class="line"><span style="color:#24292E;">ARRAY </span><span style="color:#6F42C1;">store</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">4</span><span style="color:#24292E;">) Macys </span><span style="color:#D73A49;">--</span><span style="color:#24292E;"> Target;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="筛选" tabindex="-1"><a class="header-anchor" href="#筛选" aria-hidden="true">#</a> 筛选</h5><div class="language-c line-numbers-mode" data-ext="c"><pre class="shiki github-light" style="background-color:#fff;" tabindex="0"><code><span class="line"><span style="color:#24292E;">PROC PRINT DATA</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;XXX&quot;</span></span>
<span class="line"><span style="color:#24292E;">	WHERE Genro</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;target genro&quot;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="打印" tabindex="-1"><a class="header-anchor" href="#打印" aria-hidden="true">#</a> 打印</h5><div class="language-c line-numbers-mode" data-ext="c"><pre class="shiki github-light" style="background-color:#fff;" tabindex="0"><code><span class="line"><span style="color:#24292E;">PROC PRINT DATA</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;XXX&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">	WHERE Genro</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;target genro&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">	</span></span>
<span class="line"><span style="color:#24292E;">	LABEL NEW_COLNAME</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;A LONG COL NAME&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">	BY COL_LIST;</span><span style="color:#6A737D;"> /*筛选 col*/</span></span>
<span class="line"><span style="color:#24292E;">	ID TARGET_ID_LIST;</span><span style="color:#6A737D;"> /*筛选 row*/</span></span>
<span class="line"><span style="color:#24292E;">	FORMAT Last_Date DATE9.</span><span style="color:#6A737D;"> /*格式化输出*/</span></span>
<span class="line"><span style="color:#24292E;">	FOOTNOTE </span><span style="color:#032F62;">&quot;F = FRANCE&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>其中格式化输出支持自定义格式化。</strong></p><p>打印统计指标，包括 mean, std dev, min, max 等值：</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="shiki github-light" style="background-color:#fff;" tabindex="0"><code><span class="line"><span style="color:#24292E;">proc MEANS DATA</span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> SALES;</span></span>
<span class="line"><span style="color:#24292E;">	BY Month;</span></span>
<span class="line"><span style="color:#24292E;">	VAR TARGET_COLS;</span></span>
<span class="line"><span style="color:#24292E;">	TITLE </span><span style="color:#032F62;">&quot;TITLE OF PRINT TABLE&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>可以使用自带功能打印简单报告</strong></p><div class="language-c line-numbers-mode" data-ext="c"><pre class="shiki github-light" style="background-color:#fff;" tabindex="0"><code><span class="line"><span style="color:#24292E;">proc report data</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">xxxx;</span></span>
<span class="line"><span style="color:#24292E;">	options;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="计数" tabindex="-1"><a class="header-anchor" href="#计数" aria-hidden="true">#</a> 计数</h5><p>对变量进行统计计数，支持单/双变量计数。</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="shiki github-light" style="background-color:#fff;" tabindex="0"><code><span class="line"><span style="color:#24292E;">PROC FREQ DATA</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">ORDERS;</span></span>
<span class="line"><span style="color:#24292E;">	TABLES WINDOW WINDOW </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> COFFEE</span></span>
<span class="line"><span style="color:#24292E;">	RUN;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>代码告诉 SAS 打印两个表，一个是 one-way 的频率表 WINDOW，一个是交叉表。交叉表的每个小方格内，SAS 打印了频数、百分比、行百分比和列百分比。左边和右边是累积百分比。注意计算频数时没有考虑缺失值</p><figure><img src="`+r+`" alt="相关图片" height="300" tabindex="0" loading="lazy"><figcaption>相关图片</figcaption></figure><p>如果要打印三个变量的频率：</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="shiki github-light" style="background-color:#fff;" tabindex="0"><code><span class="line"><span style="color:#24292E;">proc tabulate data</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">boats;</span></span>
<span class="line"><span style="color:#24292E;">	class col1 col2 col3;</span></span>
<span class="line"><span style="color:#24292E;">	table col1, col2, col3;</span></span>
<span class="line"><span style="color:#24292E;">    RUN;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>其中根据 col1 值打印多个双变量频率表。</p><p><strong>除了打印计数之外，还可以打印其他计算结果。</strong> 美化输出结果等。</p><h5 id="排序" tabindex="-1"><a class="header-anchor" href="#排序" aria-hidden="true">#</a> 排序</h5><div class="language-c line-numbers-mode" data-ext="c"><pre class="shiki github-light" style="background-color:#fff;" tabindex="0"><code><span class="line"><span style="color:#24292E;">PROC SORT DATA</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">MESSY OUT</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">NEAT dupout</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">dupdata NODUPKEY;</span></span>
<span class="line"><span style="color:#24292E;">	BY State DESCENDING cITY</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>将 DESCENDING 加在要降序的变量前面。</p><p>缺失值比任何值都小。</p><p>重复的数据将会输出到 dupdata 中</p><p>排序后，默认可以使用 <code>FIRST.COL</code> 和 <code>LAST.COL</code> 提取最小和最大值。因为他们直接指向了第一 row 读取的数和最后一 row 读取的数。</p><h5 id="分组" tabindex="-1"><a class="header-anchor" href="#分组" aria-hidden="true">#</a> 分组</h5><div class="language-c line-numbers-mode" data-ext="c"><pre class="shiki github-light" style="background-color:#fff;" tabindex="0"><code><span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"></div></div><h5 id="拼接数据集" tabindex="-1"><a class="header-anchor" href="#拼接数据集" aria-hidden="true">#</a> 拼接数据集</h5><p>可以使用 set 实现拼接。SET 语句是一次一个变量地，将一个数据集放入数据步中予以分析。</p><p>根据 row 的方向拼接；</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="shiki github-light" style="background-color:#fff;" tabindex="0"><code><span class="line"><span style="color:#24292E;">DATA NEWDB;</span></span>
<span class="line"><span style="color:#24292E;">	SET OLD1 OLD2;</span></span>
<span class="line"><span style="color:#24292E;">PROC PRINT DATA</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">NEWDB;</span></span>
<span class="line"><span style="color:#24292E;">RUN;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="合并数据集" tabindex="-1"><a class="header-anchor" href="#合并数据集" aria-hidden="true">#</a> 合并数据集</h5><p>合并前需要 sort 合并的 key</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="shiki github-light" style="background-color:#fff;" tabindex="0"><code><span class="line"><span style="color:#24292E;">PROC SORT DATA</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">DB1;</span></span>
<span class="line"><span style="color:#24292E;">	BY col1;</span></span>
<span class="line"><span style="color:#24292E;">PROC SORT DATA</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">DB2;</span></span>
<span class="line"><span style="color:#24292E;">	BY col1;</span></span>
<span class="line"><span style="color:#24292E;">DATA newdb;</span></span>
<span class="line"><span style="color:#24292E;">	merge db1 db2;</span></span>
<span class="line"><span style="color:#24292E;">	by col1;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如上，相当于 db2 向 db1 合并。（db1 为左表）</p><p>可以通过 <code>in=</code> 方法来调整合并时候，左右两个表不同的 row 如：</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="shiki github-light" style="background-color:#fff;" tabindex="0"><code><span class="line"><span style="color:#24292E;">DATA BOTH;</span></span>
<span class="line"><span style="color:#24292E;">	MERGE </span><span style="color:#6F42C1;">STATE</span><span style="color:#24292E;"> (IN</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">INSTATE) </span><span style="color:#6F42C1;">COUNTEY</span><span style="color:#24292E;"> (IN</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">INCOUNTRY);</span></span>
<span class="line"><span style="color:#24292E;">	BY COL1;</span></span>
<span class="line"><span style="color:#24292E;">	IF INSTATE</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>当前 row 的 col1 在 STATE 数据集存在时，<code>INSTATE=1</code>； MERGE 会遍历所有出现过的 row；</p><h5 id="更新数据" tabindex="-1"><a class="header-anchor" href="#更新数据" aria-hidden="true">#</a> 更新数据</h5><p>根据 col1，将 db2 中非空数值更新到 db1 中</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="shiki github-light" style="background-color:#fff;" tabindex="0"><code><span class="line"><span style="color:#24292E;">data db1;</span></span>
<span class="line"><span style="color:#24292E;">	update db1 db2;</span></span>
<span class="line"><span style="color:#24292E;">	by col1;</span></span>
<span class="line"><span style="color:#24292E;">run;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="位测试" tabindex="-1"><a class="header-anchor" href="#位测试" aria-hidden="true">#</a> 位测试：</h5><div class="language-c line-numbers-mode" data-ext="c"><pre class="shiki github-light" style="background-color:#fff;" tabindex="0"><code><span class="line"><span style="color:#D73A49;">if</span><span style="color:#24292E;"> a</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&#39;..1.000&#39;</span><span style="color:#24292E;">b than </span><span style="color:#D73A49;">do</span><span style="color:#24292E;">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h5 id="操作语句" tabindex="-1"><a class="header-anchor" href="#操作语句" aria-hidden="true">#</a> 操作语句</h5><div class="language-c line-numbers-mode" data-ext="c"><pre class="shiki github-light" style="background-color:#fff;" tabindex="0"><code><span class="line"><span style="color:#6F42C1;">MEAN</span><span style="color:#24292E;">(OF COL1 </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> COL9)</span></span>
<span class="line"><span style="color:#6F42C1;">MEAN</span><span style="color:#24292E;">(COL1, COL2, COL3)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="输出-ods" tabindex="-1"><a class="header-anchor" href="#输出-ods" aria-hidden="true">#</a> 输出 ODS</h3><p>ODS 是输出必须经过的一个环节。ODS 支持很多输出美化配置</p><h4 id="打印中间变量" tabindex="-1"><a class="header-anchor" href="#打印中间变量" aria-hidden="true">#</a> 打印中间变量</h4><div class="language-c line-numbers-mode" data-ext="c"><pre class="shiki github-light" style="background-color:#fff;" tabindex="0"><code><span class="line"><span style="color:#24292E;">ODS TRACE ON;</span></span>
<span class="line"><span style="color:#24292E;">	THE DATA YOU WANT TO PRINT</span></span>
<span class="line"><span style="color:#24292E;">ODS TRACE OFF;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>或输出单一变量</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="shiki github-light" style="background-color:#fff;" tabindex="0"><code><span class="line"><span style="color:#24292E;">ODS SELECT MEANS.byGroup1.Summary</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="输出到-html" tabindex="-1"><a class="header-anchor" href="#输出到-html" aria-hidden="true">#</a> 输出到 HTML</h4><div class="language-c line-numbers-mode" data-ext="c"><pre class="shiki github-light" style="background-color:#fff;" tabindex="0"><code><span class="line"><span style="color:#24292E;">ODS HTML OPTIONS;</span></span>
<span class="line"><span style="color:#24292E;">	data ...</span></span>
<span class="line"><span style="color:#24292E;">	proc ...</span></span>
<span class="line"><span style="color:#24292E;">ODS HTML CLOSE;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>options 需要指定一个路径。HTML 支持很多输出美化。</p><h4 id="输出到多个表" tabindex="-1"><a class="header-anchor" href="#输出到多个表" aria-hidden="true">#</a> 输出到多个表</h4><div class="language-c line-numbers-mode" data-ext="c"><pre class="shiki github-light" style="background-color:#fff;" tabindex="0"><code><span class="line"><span style="color:#24292E;">data db1 db2;</span></span>
<span class="line"><span style="color:#24292E;"> 	set rawdb;</span></span>
<span class="line"><span style="color:#24292E;"> 	</span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> col1</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">1</span><span style="color:#24292E;"> then output db1;</span></span>
<span class="line"><span style="color:#24292E;"> 	</span><span style="color:#D73A49;">else</span><span style="color:#24292E;"> output db2;</span></span>
<span class="line"><span style="color:#24292E;">run;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>output 用于控制合适将观测值写入到 SAS 数据库中。如果数据集中没有 OUTPUT 语句，则暗含在结尾，放置了 output 之后，则结尾的就不再暗含存在。当 SAS 出现 OUTPUT 语句时，则写入一个观测值。</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="shiki github-light" style="background-color:#fff;" tabindex="0"><code><span class="line"><span style="color:#24292E;">DATA DB1;</span></span>
<span class="line"><span style="color:#24292E;">	DO X </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;"> TO </span><span style="color:#005CC5;">6</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">		Y</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">X</span><span style="color:#D73A49;">**</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">		OUTPUT;</span></span>
<span class="line"><span style="color:#24292E;">	END;</span></span>
<span class="line"><span style="color:#24292E;">RUN;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>每一次 output 就时一行，output 时候将 output 所有记录的 cols；</p><h4 id="输出到文件" tabindex="-1"><a class="header-anchor" href="#输出到文件" aria-hidden="true">#</a> 输出到文件</h4><div class="language-c line-numbers-mode" data-ext="c"><pre class="shiki github-light" style="background-color:#fff;" tabindex="0"><code><span class="line"><span style="color:#24292E;">PROC EXPORT DATA</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">data</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">set OUTFILE</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&#39;filename&#39;</span><span style="color:#24292E;">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="宏" tabindex="-1"><a class="header-anchor" href="#宏" aria-hidden="true">#</a> 宏</h3><p>宏与 C 中宏变量相似，在编译时候被替换。</p><p>使用宏指令之前必须将宏系统选项打开，尽管有时默认是打开的。可以用下面代码查看是否打开： PROC OPTIONS OPTION=MACRO; RUN;查看日志，如果看到 MACRO，则打开了；如果看到 NOMACRO，则没有打开。</p><p>定义宏变量</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="shiki github-light" style="background-color:#fff;" tabindex="0"><code><span class="line"><span style="color:#D73A49;">%</span><span style="color:#24292E;">LET iterations</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">10</span><span style="color:#24292E;">; </span></span>
<span class="line"><span style="color:#D73A49;">%</span><span style="color:#24292E;">LET country</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">New Zealand;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>当赋值字符串时，不需要加引号</strong> 。除非在开头和结尾有空格，否则从等号到分号的全部内容都是变量值。</p><p>引用时候使用 <code>&amp;</code></p><div class="language-c line-numbers-mode" data-ext="c"><pre class="shiki github-light" style="background-color:#fff;" tabindex="0"><code><span class="line"><span style="color:#D73A49;">do</span><span style="color:#24292E;"> i </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;"> to </span><span style="color:#D73A49;">&amp;</span><span style="color:#24292E;">iterations</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>可以将一段代码定义成宏：</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="shiki github-light" style="background-color:#fff;" tabindex="0"><code><span class="line"><span style="color:#D73A49;">%</span><span style="color:#24292E;">MACRO SAMPLECODE;</span></span>
<span class="line"><span style="color:#24292E;">PROC SORT DATA</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">DB;</span></span>
<span class="line"><span style="color:#24292E;">	CODES;</span></span>
<span class="line"><span style="color:#D73A49;">%</span><span style="color:#24292E;">MEND SAMPLECODE</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>调用时候直接 <code>%SAMPLECODE</code></p><p>可以添加参数</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="shiki github-light" style="background-color:#fff;" tabindex="0"><code><span class="line"><span style="color:#D73A49;">%</span><span style="color:#24292E;">MARCRO </span><span style="color:#6F42C1;">SELECT</span><span style="color:#24292E;">(X</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">, Y</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">	PROC SORT DATA</span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> DB;</span></span>
<span class="line"><span style="color:#24292E;">		BY </span><span style="color:#D73A49;">&amp;</span><span style="color:#24292E;">X;</span></span>
<span class="line"><span style="color:#24292E;">		WHERE ID</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;&amp;Y&quot;</span></span>
<span class="line"><span style="color:#D73A49;">%</span><span style="color:#24292E;">MEND SELECT;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>使用：</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="shiki github-light" style="background-color:#fff;" tabindex="0"><code><span class="line"><span style="color:#D73A49;">%</span><span style="color:#6F42C1;">SELECT</span><span style="color:#24292E;">(X</span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> COL1, Y</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">TARGETID)</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="宏中条件" tabindex="-1"><a class="header-anchor" href="#宏中条件" aria-hidden="true">#</a> 宏中条件</h5><div class="language-c line-numbers-mode" data-ext="c"><pre class="shiki github-light" style="background-color:#fff;" tabindex="0"><code><span class="line"><span style="color:#D73A49;">%</span><span style="color:#24292E;">IF condition </span><span style="color:#D73A49;">%</span><span style="color:#24292E;">THEN action; </span></span>
<span class="line"><span style="color:#D73A49;">%</span><span style="color:#24292E;">ELSE </span><span style="color:#D73A49;">%</span><span style="color:#24292E;">IF condition </span><span style="color:#D73A49;">%</span><span style="color:#24292E;">THEN action; </span></span>
<span class="line"><span style="color:#D73A49;">%</span><span style="color:#24292E;">ELSE action; </span></span>
<span class="line"><span style="color:#D73A49;">%</span><span style="color:#24292E;">IF condition </span><span style="color:#D73A49;">%</span><span style="color:#24292E;">THEN </span><span style="color:#D73A49;">%</span><span style="color:#24292E;">DO; </span></span>
<span class="line"><span style="color:#24292E;">SAS statements </span></span>
<span class="line"><span style="color:#D73A49;">%</span><span style="color:#24292E;">END;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="其他" tabindex="-1"><a class="header-anchor" href="#其他" aria-hidden="true">#</a> 其他</h3><p>其他函数</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="shiki github-light" style="background-color:#fff;" tabindex="0"><code><span class="line"><span style="color:#005CC5;">REG</span><span style="color:#24292E;"> </span><span style="color:#6A737D;"># 支线回归</span></span>
<span class="line"><span style="color:#005CC5;">PRINCOMP</span><span style="color:#24292E;">  </span><span style="color:#6A737D;"># PCA</span></span>
<span class="line"><span style="color:#005CC5;">GLM</span><span style="color:#24292E;"> </span><span style="color:#6A737D;"># 协方差分析</span></span>
<span class="line"><span style="color:#005CC5;">ANOVA</span><span style="color:#24292E;"> </span><span style="color:#6A737D;"># 方差分析</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如简单的回归</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="shiki github-light" style="background-color:#fff;" tabindex="0"><code><span class="line"><span style="color:#24292E;">PROC REG DATA</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">DB;</span></span>
<span class="line"><span style="color:#24292E;">	MODEL Y</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">X;</span></span>
<span class="line"><span style="color:#24292E;">	PLOT Y</span><span style="color:#D73A49;">*</span><span style="color:#24292E;">X;</span></span>
<span class="line"><span style="color:#24292E;">RUN;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>根据 X 预测 Y</p><p>能够添加缩写，自动指代到</p>`,136);function v(b,E){const a=e("ExternalLinkIcon");return p(),i("div",null,[t,s("p",null,[s("a",u,[n("python 插件"),o(a)])]),y])}const A=l(d,[["render",v],["__file","笔记sas.html.vue"]]);export{A as default};
