import{_ as l}from"./plugin-vue_export-helper-c27b6911.js";import{r as p,o,c as e,a as s,b as n,d as c,e as r,f as t}from"./app-f00ee6c1.js";const i="/assets/img/原始套接字/image-20210407170927862.png",y="/assets/img/原始套接字/image-20210407171445864.png",d="/assets/img/原始套接字/image-20210409221404501.png",E="/assets/img/原始套接字/image-20210409222719590.png",v="/assets/img/原始套接字/image-20210409223043298.png",C="/assets/img/原始套接字/image-20210409223502067.png",u="/assets/img/原始套接字/image-20210409224416877.png",m="/assets/img/原始套接字/image-20210409224613765.png",A="/assets/img/原始套接字/image-20210409225346159.png",D={},b={href:"https://www.bilibili.com/video/BV1FA411v7YW?p=530&spm_id_from=pageDriver",target:"_blank",rel:"noopener noreferrer"},g=t(`<h3 id="概述" tabindex="-1"><a class="header-anchor" href="#概述" aria-hidden="true">#</a> 概述</h3><p>原始套接字（SOCK_RAW） 1、一种不同于 SOCK_STREAM、SOCK_DGRAM 的套接字，它实现于系统核心 2、可以接收本机网卡上所有的数据帧（数据包）,对于监听网络流量和分析网络数据很有作 用 3、开发人员可发送自己组装的数据包到网络上 4、广泛应用于高级网络编程 5、网络专家、黑客通常会用此来编写奇特的网络程序</p><p>流式套接字只能收发 TCP 协议的数据 数据报套接字只能收发 UDP 协议的数据 原始套接字可以收发 1、内核没有处理的数据包，因此要访问其他协议 2、发送的数据需要使用，原始套接字(SOCK_RAW)</p><h4 id="创建原始套接字" tabindex="-1"><a class="header-anchor" href="#创建原始套接字" aria-hidden="true">#</a> 创建原始套接字</h4><div class="language-c line-numbers-mode" data-ext="c"><pre class="shiki github-light" style="background-color:#fff;" tabindex="0"><code><span class="line"><span style="color:#D73A49;">#include</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&lt;sys/types.h&gt;</span><span style="color:#24292E;"> </span><span style="color:#6A737D;">/* See NOTES */</span></span>
<span class="line"><span style="color:#D73A49;">#include</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&lt;sys/socket.h&gt;</span></span>
<span class="line"><span style="color:#D73A49;">int</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">socket</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> </span><span style="color:#E36209;">domain</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> </span><span style="color:#E36209;">type</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> </span><span style="color:#E36209;">protocol</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">功能：创建套接字，返回文件描述符</span></span>
<span class="line"><span style="color:#24292E;">参数：</span></span>
<span class="line"><span style="color:#24292E;">domain：通信域，地址族</span></span>
<span class="line"><span style="color:#24292E;">AF_PACKET</span></span>
<span class="line"><span style="color:#24292E;">type：套接字类型</span></span>
<span class="line"><span style="color:#24292E;">SOCK_RAW</span></span>
<span class="line"><span style="color:#24292E;">protocol：附加协议</span></span>
<span class="line"><span style="color:#D73A49;">#include</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&lt;netinet/ether.h&gt;</span></span>
<span class="line"><span style="color:#24292E;">ETH_P_ALL 所有协议对应的数据包</span></span>
<span class="line"><span style="color:#24292E;">ETH_P_IP 只接受 ip 数据包</span></span>
<span class="line"><span style="color:#24292E;">ETH_P_ARP 只接受 arp 数据包</span></span>
<span class="line"><span style="color:#24292E;">返回值：</span></span>
<span class="line"><span style="color:#24292E;">成功：文件描述符</span></span>
<span class="line"><span style="color:#24292E;">失败：‐</span><span style="color:#005CC5;">1</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="创建链路层的原始套接字" tabindex="-1"><a class="header-anchor" href="#创建链路层的原始套接字" aria-hidden="true">#</a> 创建链路层的原始套接字</h4><div class="language-c line-numbers-mode" data-ext="c"><pre class="shiki github-light" style="background-color:#fff;" tabindex="0"><code><span class="line"><span style="color:#D73A49;">#include</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&lt;sys/socket.h&gt;</span></span>
<span class="line"><span style="color:#D73A49;">#include</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&lt;sys/types.h&gt;</span><span style="color:#24292E;"> </span><span style="color:#6A737D;">//socket</span></span>
<span class="line"><span style="color:#D73A49;">#include</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&lt;netinet/ether.h&gt;</span><span style="color:#24292E;"> </span><span style="color:#6A737D;">//ETH_P_ALL</span></span>
<span class="line"><span style="color:#D73A49;">#include</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&lt;unistd.h&gt;</span><span style="color:#24292E;"> </span><span style="color:#6A737D;">//close</span></span>
<span class="line"><span style="color:#D73A49;">#include</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&lt;stdlib.h&gt;</span><span style="color:#24292E;"> </span><span style="color:#6A737D;">//exit</span></span>
<span class="line"><span style="color:#D73A49;">#include</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&lt;stdio.h&gt;</span><span style="color:#24292E;"> </span><span style="color:#6A737D;">//printf</span></span>
<span class="line"><span style="color:#D73A49;">#include</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&lt;arpa/inet.h&gt;</span></span>
<span class="line"><span style="color:#D73A49;">int</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">main</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> </span><span style="color:#E36209;">argc</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">char</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#E36209;">argv</span><span style="color:#D73A49;">[]</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#6A737D;">//使用 socket 函数创建链路层的原始套接字</span></span>
<span class="line"><span style="color:#D73A49;">int</span><span style="color:#24292E;"> sockfd;</span></span>
<span class="line"><span style="color:#D73A49;">if</span><span style="color:#24292E;">((sockfd </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">socket</span><span style="color:#24292E;">(AF_PACKET, SOCK_RAW, </span><span style="color:#6F42C1;">htons</span><span style="color:#24292E;">(ETH_P_ALL))) </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> ‐</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#6F42C1;">perror</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;fail to sockfd&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#6F42C1;">exit</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#6F42C1;">printf</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;sockfd = </span><span style="color:#005CC5;">%d\\n</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;">, sockfd);</span></span>
<span class="line"><span style="color:#6A737D;">//关闭套接字文件描述符</span></span>
<span class="line"><span style="color:#6F42C1;">close</span><span style="color:#24292E;">(sockfd);</span></span>
<span class="line"><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>注意：原始套接字的代码运行时需要管理员权限</p><h2 id="数据包详解" tabindex="-1"><a class="header-anchor" href="#数据包详解" aria-hidden="true">#</a> 数据包详解</h2><p>在 TCP/IP 协议栈中的每一层为了能够正确解析出上层的数据包，从而使用一些“协议类型”来标记，详细如下图</p><figure><img src="`+i+'" alt="image-20210407170927862" tabindex="0" loading="lazy"><figcaption>image-20210407170927862</figcaption></figure><h3 id="udp-封包格式" tabindex="-1"><a class="header-anchor" href="#udp-封包格式" aria-hidden="true">#</a> UDP 封包格式</h3><figure><img src="'+y+'" alt="image-20210407171445864" tabindex="0" loading="lazy"><figcaption>image-20210407171445864</figcaption></figure><ol><li>源端口号：发送方端口号</li><li>目的端口号：接收方端口号</li><li>长度：UDP 用户数据报的长度，最小值是 8（仅有首部），注意，需要包括数据的长度</li><li>校验和：检测 UDP 用户数据报在传输中是否有错，有错就丢弃</li></ol><h3 id="ip-封包格式" tabindex="-1"><a class="header-anchor" href="#ip-封包格式" aria-hidden="true">#</a> IP 封包格式</h3><figure><img src="'+d+'" alt="image-20210409221404501" tabindex="0" loading="lazy"><figcaption>image-20210409221404501</figcaption></figure><ol><li>版本：IP 协议的版本。通信双方使用过的 IP 协议的版本必须一致，目前最广泛使用的 IP 协议版本号为 4（即 IPv4 )</li><li>首部长度：单位是 32 位（4 字节）传 5 表示 20 字节</li><li>服务类型：一般不适用，取值为 0。前 3 位：优先级，第 47 位：延时，吞吐量，可靠性，花费。第 8 位保留</li><li>总长度：指首部加上数据的总长度，单位为字节。最大长度为 65535 字节。</li><li>标识（identification）：用来标识主机发送的每一份数据报。IP 软件在存储器中维持一个计数器，每产生一个数据报，计数器就加 1，并将此值赋给标识字段。</li><li>标志（flag）：目前只有两位有意义。 标志字段中的最低位记为 MF。MF=1 即表示后面“还有分片”的数据报。 MF=0 表示这已是若干数据报片中的最后一个。 标志字段中间的一位记为 DF，意思是“不能分片”，只有当 DF=0 时才允许分片</li><li>片偏移：指出较长的分组在分片后，某片在源分组中的相对位置，也就是说，相对于用户数据段的起点，该片从何处开始。片偏移以 8 字节为偏移单位。</li><li>生存时间：TTL，表明是数据报在网络中的寿命，即为“跳数限制”，由发出数据报的源点设置这个字段。路由器在转发数据之前就把 TTL 值减一，当 TTL 值减为零时，就丢弃这个数据报。通常设置为 32、64、128。</li><li>协议：指出此数据报携带的数据时使用何种协议，以便使目的主机的 IP 层知道 应将数据部分上交给哪个处理过程，常用的 ICMP(1),IGMP(2),TCP(6),UDP(17),IPv6（41）</li><li>首部校验和：只校验数据报的首部，不包括数据部分。</li><li>源地址：发送方 IP 地址</li><li>目的地址：接收方 IP 地址</li><li>选项：用来定义一些任选项；如记录路径、时间戳等。这些选项很少被使用，同时并不是所有主机和路由器都支持这些选项。一般忽略不计</li></ol><p>数据部分填充 TCP 或 UDP 及应用数据</p><h3 id="ethernet-封包格式" tabindex="-1"><a class="header-anchor" href="#ethernet-封包格式" aria-hidden="true">#</a> Ethernet 封包格式</h3><figure><img src="'+E+'" alt="image-20210409222719590" tabindex="0" loading="lazy"><figcaption>image-20210409222719590</figcaption></figure><p>1、目的地址：目的 mac 地址 2、源地址：源 mac 地址 3、类型：ip 数据报（0x0800）、ARP 数据报（0x0806）、RARP（0x8035） 4、数据：数据根据类型来决定</p><p>1.CRC、PAD 在组包时可以忽略 2.FCS CRC 即循环冗余校验码：是数据通信领域中最常用的一种查错校验码，其特征是信息字段和校验字段的长度可以任意选定。循环冗余检查是一种数据传输检错功能，对数据进行 h 多项式计算，并将得到的结果附在帧的后面，接收设备也执行类似的算法，以保证数据传输的正确性和完整性</p><h3 id="tcp-封包格式" tabindex="-1"><a class="header-anchor" href="#tcp-封包格式" aria-hidden="true">#</a> TCP 封包格式</h3><figure><img src="'+v+'" alt="image-20210409223043298" tabindex="0" loading="lazy"><figcaption>image-20210409223043298</figcaption></figure><ol><li>源端口号：发送方端口号</li><li>目的端口号：接收方端口号</li><li>序列号：本报文段的数据的第一个字节的序号</li><li>确认序号：期望收到对方下一个报文段的第一个数据字节的序号</li><li>首部长度（数据偏移）：TCP 报文段的数据起始处距离 TCP 报文段的起始处有多远，即首部长度。单位：32 位，即以 4 字节为计算单位。</li><li>保留：占 6 位，保留为今后使用，目前应置为 0</li><li>紧急 URG: 此位置 1，表明紧急指针字段有效，它告诉系统此报文段中有紧急数据，应尽快传送</li><li>确认 ACK: 仅当 ACK=1 时确认号字段才有效，TCP 规定，在连接建立后所有传达的报文段都必须把 ACK 置 1</li><li>推送 PSH：当两个应用进程进行交互式的通信时，有时在一端的应用进程希望在键入一个命令后立即就能够收到对方的响应。在这种情况下，TCP 就可以使用推送（push）操作，这时，发送方 TCP 把 PSH 置 1，并立即创建一个报文段发送出去，接收方收到 PSH=1 的报文段，就尽快地（即“推送”向前）交付给接收 应用进程，而不再等到整个缓存都填满后再向上交付</li><li>复位 RST: 用于复位相应的 TCP 连接</li><li>同步 SYN: 仅在三次握手建立 TCP 连接时有效。当 SYN=1 而 ACK=0 时，表明 这是一个连接请求报文段，对方若同意建立连接，则应在相应的报文段中使用 SYN=1 和 ACK=1.因此，SYN 置 1 就表示这是一个连接请求或连接接受报文</li><li>终止 FIN：用来释放一个连接。当 FIN=1 时，表明此报文段的发送方的数据已经发送完毕，并要求释放运输连接。</li><li>窗口：指发送本报文段的一方的接收窗口（而不是自己的发送窗口）</li><li>校验和：校验和字段检验的范围包括首部和数据两部分，在计算校验和时需要加上 12 字节的伪头部</li><li>紧急指针：仅在 URG=1 时才有意义，它指出本报文段中的紧急数据的字节数 （紧急数据结束后就是普通数据），即指出了紧急数据的末尾在报文中的位置，注意：即使窗口为零时也可发送紧急数据</li><li>选项：长度可变，最长可达 40 字节，当没有使用选项时，TCP 首部长度是 20 字节</li></ol><h3 id="icmp-封包格式" tabindex="-1"><a class="header-anchor" href="#icmp-封包格式" aria-hidden="true">#</a> ICMP 封包格式</h3><p>使用时要跟 IP 协议</p><figure><img src="'+C+`" alt="image-20210409223502067" tabindex="0" loading="lazy"><figcaption>image-20210409223502067</figcaption></figure><h2 id="分析-mac-数据包" tabindex="-1"><a class="header-anchor" href="#分析-mac-数据包" aria-hidden="true">#</a> 分析 MAC 数据包</h2><div class="language-c line-numbers-mode" data-ext="c"><pre class="shiki github-light" style="background-color:#fff;" tabindex="0"><code><span class="line"><span style="color:#D73A49;">#include</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&lt;sys/socket.h&gt;</span></span>
<span class="line"><span style="color:#D73A49;">#include</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&lt;sys/types.h&gt;</span><span style="color:#24292E;"> </span><span style="color:#6A737D;">//socket</span></span>
<span class="line"><span style="color:#D73A49;">#include</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&lt;netinet/ether.h&gt;</span><span style="color:#24292E;"> </span><span style="color:#6A737D;">//ETH_P_ALL</span></span>
<span class="line"><span style="color:#D73A49;">#include</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&lt;unistd.h&gt;</span><span style="color:#24292E;"> </span><span style="color:#6A737D;">//close</span></span>
<span class="line"><span style="color:#D73A49;">#include</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&lt;stdlib.h&gt;</span><span style="color:#24292E;"> </span><span style="color:#6A737D;">//exit</span></span>
<span class="line"><span style="color:#D73A49;">#include</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&lt;stdio.h&gt;</span><span style="color:#24292E;"> </span><span style="color:#6A737D;">//printf</span></span>
<span class="line"><span style="color:#D73A49;">#include</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&lt;arpa/inet.h&gt;</span><span style="color:#24292E;"> </span><span style="color:#6A737D;">//htons</span></span>
<span class="line"><span style="color:#D73A49;">#define</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">ERRLOG</span><span style="color:#24292E;">(</span><span style="color:#E36209;">errmsg</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">do</span><span style="color:#24292E;">{</span><span style="color:#005CC5;">\\</span></span>
<span class="line"><span style="color:#6F42C1;">perror</span><span style="color:#24292E;">(errmsg);</span><span style="color:#005CC5;">\\</span></span>
<span class="line"><span style="color:#6F42C1;">exit</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">);</span><span style="color:#005CC5;">\\</span></span>
<span class="line"><span style="color:#24292E;">}</span><span style="color:#D73A49;">while</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#D73A49;">int</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">main</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> </span><span style="color:#E36209;">argc</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">char</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#E36209;">argv</span><span style="color:#D73A49;">[]</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#6A737D;">//创建原始套接字</span></span>
<span class="line"><span style="color:#D73A49;">int</span><span style="color:#24292E;"> sockfd;</span></span>
<span class="line"><span style="color:#D73A49;">if</span><span style="color:#24292E;">((sockfd </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">socket</span><span style="color:#24292E;">(AF_PACKET, SOCK_RAW, </span><span style="color:#6F42C1;">htons</span><span style="color:#24292E;">(ETH_P_ALL))) </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#6F42C1;">ERRLOG</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;fail to socket&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#6A737D;">//printf(&quot;sockfd = %d\\n&quot;, sockfd);</span></span>
<span class="line"><span style="color:#6A737D;">//接收数据并分析</span></span>
<span class="line"><span style="color:#D73A49;">unsigned</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">char</span><span style="color:#24292E;"> </span><span style="color:#E36209;">msg</span><span style="color:#24292E;">[</span><span style="color:#005CC5;">1600</span><span style="color:#24292E;">] </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">while</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#6A737D;">//recvfrom recv read 都可以使用</span></span>
<span class="line"><span style="color:#D73A49;">if</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">recvfrom</span><span style="color:#24292E;">(sockfd, msg, </span><span style="color:#D73A49;">sizeof</span><span style="color:#24292E;">(msg), </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">NULL</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">NULL</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#6F42C1;">ERRLOG</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;fail to recvfrom&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#6A737D;">//分析接收到的数据包</span></span>
<span class="line"><span style="color:#D73A49;">unsigned</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">char</span><span style="color:#24292E;"> </span><span style="color:#E36209;">dst_mac</span><span style="color:#24292E;">[</span><span style="color:#005CC5;">18</span><span style="color:#24292E;">] </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">unsigned</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">char</span><span style="color:#24292E;"> </span><span style="color:#E36209;">src_mac</span><span style="color:#24292E;">[</span><span style="color:#005CC5;">18</span><span style="color:#24292E;">] </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">unsigned</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">short</span><span style="color:#24292E;"> type;</span></span>
<span class="line"><span style="color:#6F42C1;">sprintf</span><span style="color:#24292E;">(dst_mac, </span><span style="color:#032F62;">&quot;</span><span style="color:#005CC5;">%x</span><span style="color:#032F62;">:</span><span style="color:#005CC5;">%x</span><span style="color:#032F62;">:</span><span style="color:#005CC5;">%x</span><span style="color:#032F62;">:</span><span style="color:#005CC5;">%x</span><span style="color:#032F62;">:</span><span style="color:#005CC5;">%x</span><span style="color:#032F62;">:</span><span style="color:#005CC5;">%x</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;">, </span><span style="color:#E36209;">msg</span><span style="color:#24292E;">[</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">], </span><span style="color:#E36209;">msg</span><span style="color:#24292E;">[</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">], </span><span style="color:#E36209;">msg</span><span style="color:#24292E;">[</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">], </span><span style="color:#E36209;">msg</span><span style="color:#24292E;">[</span><span style="color:#005CC5;">3</span><span style="color:#24292E;">], </span><span style="color:#E36209;">msg</span><span style="color:#24292E;">[</span><span style="color:#005CC5;">4</span><span style="color:#24292E;">],</span><span style="color:#E36209;">msg</span><span style="color:#24292E;">[</span><span style="color:#005CC5;">5</span><span style="color:#24292E;">]);</span></span>
<span class="line"><span style="color:#6F42C1;">sprintf</span><span style="color:#24292E;">(src_mac, </span><span style="color:#032F62;">&quot;</span><span style="color:#005CC5;">%x</span><span style="color:#032F62;">:</span><span style="color:#005CC5;">%x</span><span style="color:#032F62;">:</span><span style="color:#005CC5;">%x</span><span style="color:#032F62;">:</span><span style="color:#005CC5;">%x</span><span style="color:#032F62;">:</span><span style="color:#005CC5;">%x</span><span style="color:#032F62;">:</span><span style="color:#005CC5;">%x</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;">, </span><span style="color:#E36209;">msg</span><span style="color:#24292E;">[</span><span style="color:#005CC5;">6</span><span style="color:#24292E;">], </span><span style="color:#E36209;">msg</span><span style="color:#24292E;">[</span><span style="color:#005CC5;">7</span><span style="color:#24292E;">], </span><span style="color:#E36209;">msg</span><span style="color:#24292E;">[</span><span style="color:#005CC5;">8</span><span style="color:#24292E;">], </span><span style="color:#E36209;">msg</span><span style="color:#24292E;">[</span><span style="color:#005CC5;">9</span><span style="color:#24292E;">], </span><span style="color:#E36209;">msg</span><span style="color:#24292E;">[</span><span style="color:#005CC5;">10</span><span style="color:#24292E;">],</span><span style="color:#E36209;">msg</span><span style="color:#24292E;">[</span><span style="color:#005CC5;">11</span><span style="color:#24292E;">]);</span></span>
<span class="line"><span style="color:#24292E;">type </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">ntohs</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">*</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">unsigned</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">short</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#24292E;">)(msg </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">12</span><span style="color:#24292E;">));</span></span>
<span class="line"><span style="color:#6F42C1;">printf</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;源 mac：</span><span style="color:#005CC5;">%s</span><span style="color:#032F62;"> ‐‐&gt; 目的 mac：</span><span style="color:#005CC5;">%s\\n</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;">, src_mac, dst_mac);</span></span>
<span class="line"><span style="color:#6F42C1;">printf</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;type = </span><span style="color:#005CC5;">%#x\\n</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;">, type);</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="网络数据分析器" tabindex="-1"><a class="header-anchor" href="#网络数据分析器" aria-hidden="true">#</a> 网络数据分析器</h2><p><strong>说明:</strong> 1、ARP 的 TYPE 为 0x0806 2、buf 为 unsinged char 3、所有数据均为大端</p><p><strong>要求：</strong> 1、分析出 ARP/IP/RARP 2、分析出 MAC 扩展：在完成基本要求的前提下，分析 PORT 提示：以 root 权限运行</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="shiki github-light" style="background-color:#fff;" tabindex="0"><code><span class="line"><span style="color:#D73A49;">#include</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&lt;sys/socket.h&gt;</span></span>
<span class="line"><span style="color:#D73A49;">#include</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&lt;sys/types.h&gt;</span><span style="color:#24292E;"> </span><span style="color:#6A737D;">//socket</span></span>
<span class="line"><span style="color:#D73A49;">#include</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&lt;netinet/ether.h&gt;</span><span style="color:#24292E;"> </span><span style="color:#6A737D;">//ETH_P_ALL</span></span>
<span class="line"><span style="color:#D73A49;">#include</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&lt;unistd.h&gt;</span><span style="color:#24292E;"> </span><span style="color:#6A737D;">//close</span></span>
<span class="line"><span style="color:#D73A49;">#include</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&lt;stdlib.h&gt;</span><span style="color:#24292E;"> </span><span style="color:#6A737D;">//exit</span></span>
<span class="line"><span style="color:#D73A49;">#include</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&lt;stdio.h&gt;</span><span style="color:#24292E;"> </span><span style="color:#6A737D;">//printf</span></span>
<span class="line"><span style="color:#D73A49;">#include</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&lt;arpa/inet.h&gt;</span><span style="color:#24292E;"> </span><span style="color:#6A737D;">//htons</span></span>
<span class="line"><span style="color:#D73A49;">#define</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">ERRLOG</span><span style="color:#24292E;">(</span><span style="color:#E36209;">errmsg</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">do</span><span style="color:#24292E;">{</span><span style="color:#005CC5;">\\</span></span>
<span class="line"><span style="color:#6F42C1;">perror</span><span style="color:#24292E;">(errmsg);</span><span style="color:#005CC5;">\\</span></span>
<span class="line"><span style="color:#6F42C1;">exit</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">);</span><span style="color:#005CC5;">\\</span></span>
<span class="line"><span style="color:#24292E;">}</span><span style="color:#D73A49;">while</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#D73A49;">int</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">main</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> </span><span style="color:#E36209;">argc</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">char</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#E36209;">argv</span><span style="color:#D73A49;">[]</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#6A737D;">//创建原始套接字</span></span>
<span class="line"><span style="color:#D73A49;">int</span><span style="color:#24292E;"> sockfd;</span></span>
<span class="line"><span style="color:#D73A49;">if</span><span style="color:#24292E;">((sockfd </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">socket</span><span style="color:#24292E;">(AF_PACKET, SOCK_RAW, </span><span style="color:#6F42C1;">htons</span><span style="color:#24292E;">(ETH_P_ALL))) </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#6F42C1;">ERRLOG</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;fail to socket&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#6A737D;">//printf(&quot;sockfd = %d\\n&quot;, sockfd);</span></span>
<span class="line"><span style="color:#6A737D;">//接收数据并分析</span></span>
<span class="line"><span style="color:#D73A49;">unsigned</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">char</span><span style="color:#24292E;"> </span><span style="color:#E36209;">msg</span><span style="color:#24292E;">[</span><span style="color:#005CC5;">1600</span><span style="color:#24292E;">] </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">while</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#6A737D;">//recvfrom recv read 都可以使用</span></span>
<span class="line"><span style="color:#D73A49;">if</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">recvfrom</span><span style="color:#24292E;">(sockfd, msg, </span><span style="color:#D73A49;">sizeof</span><span style="color:#24292E;">(msg), </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">NULL</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">NULL</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#6F42C1;">ERRLOG</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;fail to recvfrom&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#6A737D;">//分析接收到的数据包</span></span>
<span class="line"><span style="color:#D73A49;">unsigned</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">char</span><span style="color:#24292E;"> </span><span style="color:#E36209;">dst_mac</span><span style="color:#24292E;">[</span><span style="color:#005CC5;">18</span><span style="color:#24292E;">] </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">unsigned</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">char</span><span style="color:#24292E;"> </span><span style="color:#E36209;">src_mac</span><span style="color:#24292E;">[</span><span style="color:#005CC5;">18</span><span style="color:#24292E;">] </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">unsigned</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">short</span><span style="color:#24292E;"> type;</span></span>
<span class="line"><span style="color:#6F42C1;">sprintf</span><span style="color:#24292E;">(dst_mac, </span><span style="color:#032F62;">&quot;</span><span style="color:#005CC5;">%x</span><span style="color:#032F62;">:</span><span style="color:#005CC5;">%x</span><span style="color:#032F62;">:</span><span style="color:#005CC5;">%x</span><span style="color:#032F62;">:</span><span style="color:#005CC5;">%x</span><span style="color:#032F62;">:</span><span style="color:#005CC5;">%x</span><span style="color:#032F62;">:</span><span style="color:#005CC5;">%x</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;">, </span><span style="color:#E36209;">msg</span><span style="color:#24292E;">[</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">], </span><span style="color:#E36209;">msg</span><span style="color:#24292E;">[</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">], </span><span style="color:#E36209;">msg</span><span style="color:#24292E;">[</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">], </span><span style="color:#E36209;">msg</span><span style="color:#24292E;">[</span><span style="color:#005CC5;">3</span><span style="color:#24292E;">], </span><span style="color:#E36209;">msg</span><span style="color:#24292E;">[</span><span style="color:#005CC5;">4</span><span style="color:#24292E;">], </span><span style="color:#E36209;">msg</span><span style="color:#24292E;">[</span><span style="color:#005CC5;">5</span><span style="color:#24292E;">]);</span></span>
<span class="line"><span style="color:#6F42C1;">sprintf</span><span style="color:#24292E;">(src_mac, </span><span style="color:#032F62;">&quot;</span><span style="color:#005CC5;">%x</span><span style="color:#032F62;">:</span><span style="color:#005CC5;">%x</span><span style="color:#032F62;">:</span><span style="color:#005CC5;">%x</span><span style="color:#032F62;">:</span><span style="color:#005CC5;">%x</span><span style="color:#032F62;">:</span><span style="color:#005CC5;">%x</span><span style="color:#032F62;">:</span><span style="color:#005CC5;">%x</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;">, </span><span style="color:#E36209;">msg</span><span style="color:#24292E;">[</span><span style="color:#005CC5;">6</span><span style="color:#24292E;">], </span><span style="color:#E36209;">msg</span><span style="color:#24292E;">[</span><span style="color:#005CC5;">7</span><span style="color:#24292E;">], </span><span style="color:#E36209;">msg</span><span style="color:#24292E;">[</span><span style="color:#005CC5;">8</span><span style="color:#24292E;">], </span><span style="color:#E36209;">msg</span><span style="color:#24292E;">[</span><span style="color:#005CC5;">9</span><span style="color:#24292E;">], </span><span style="color:#E36209;">msg</span><span style="color:#24292E;">[</span><span style="color:#005CC5;">10</span><span style="color:#24292E;">], </span><span style="color:#E36209;">msg</span><span style="color:#24292E;">[</span><span style="color:#005CC5;">11</span><span style="color:#24292E;">]);</span></span>
<span class="line"><span style="color:#24292E;">type </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">ntohs</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">*</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">unsigned</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">short</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#24292E;">)(msg </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">12</span><span style="color:#24292E;">));</span></span>
<span class="line"><span style="color:#6F42C1;">printf</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;源 mac：</span><span style="color:#005CC5;">%s</span><span style="color:#032F62;"> ‐‐&gt; 目的 mac：</span><span style="color:#005CC5;">%s\\n</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;">, src_mac, dst_mac);</span></span>
<span class="line"><span style="color:#6F42C1;">printf</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;type = </span><span style="color:#005CC5;">%#x\\n</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;">, type);</span></span>
<span class="line"><span style="color:#D73A49;">if</span><span style="color:#24292E;">(type </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">0x</span><span style="color:#005CC5;">0800</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#6F42C1;">printf</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;ip 数据报</span><span style="color:#005CC5;">\\n</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#6A737D;">//头部长度、总长度</span></span>
<span class="line"><span style="color:#D73A49;">unsigned</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">char</span><span style="color:#24292E;"> ip_head_len;</span></span>
<span class="line"><span style="color:#D73A49;">unsigned</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">short</span><span style="color:#24292E;"> ip_len;</span></span>
<span class="line"><span style="color:#24292E;">ip_head_len </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> ((</span><span style="color:#D73A49;">*</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">unsigned</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">char</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#24292E;">)(msg </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">14</span><span style="color:#24292E;">)) </span><span style="color:#D73A49;">&amp;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">0x</span><span style="color:#005CC5;">0f</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">4</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">ip_len </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">ntohs</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">*</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">unsigned</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">short</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#24292E;">)(msg </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">16</span><span style="color:#24292E;">));</span></span>
<span class="line"><span style="color:#6F42C1;">printf</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;ip 头部：</span><span style="color:#005CC5;">%d</span><span style="color:#032F62;">, ip 数据报总长</span></span>
<span class="line"><span style="color:#032F62;">度: </span><span style="color:#005CC5;">%d\\n</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;">, ip_head_len, ip_len);</span></span>
<span class="line"><span style="color:#6A737D;">//目的 ip 地址、源 IP 地址</span></span>
<span class="line"><span style="color:#D73A49;">unsigned</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">char</span><span style="color:#24292E;"> </span><span style="color:#E36209;">dst_ip</span><span style="color:#24292E;">[</span><span style="color:#005CC5;">16</span><span style="color:#24292E;">] </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">unsigned</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">char</span><span style="color:#24292E;"> </span><span style="color:#E36209;">src_ip</span><span style="color:#24292E;">[</span><span style="color:#005CC5;">16</span><span style="color:#24292E;">] </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#6F42C1;">sprintf</span><span style="color:#24292E;">(src_ip, </span><span style="color:#032F62;">&quot;</span><span style="color:#005CC5;">%u</span><span style="color:#032F62;">.</span><span style="color:#005CC5;">%u</span><span style="color:#032F62;">.</span><span style="color:#005CC5;">%u</span><span style="color:#032F62;">.</span><span style="color:#005CC5;">%u</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;">, </span><span style="color:#E36209;">msg</span><span style="color:#24292E;">[</span><span style="color:#005CC5;">26</span><span style="color:#24292E;">], </span><span style="color:#E36209;">msg</span><span style="color:#24292E;">[</span><span style="color:#005CC5;">27</span><span style="color:#24292E;">], </span><span style="color:#E36209;">msg</span><span style="color:#24292E;">[</span><span style="color:#005CC5;">28</span><span style="color:#24292E;">], </span><span style="color:#E36209;">msg</span><span style="color:#24292E;">[</span><span style="color:#005CC5;">29</span><span style="color:#24292E;">]);</span></span>
<span class="line"><span style="color:#6F42C1;">sprintf</span><span style="color:#24292E;">(dst_ip, </span><span style="color:#032F62;">&quot;</span><span style="color:#005CC5;">%u</span><span style="color:#032F62;">.</span><span style="color:#005CC5;">%u</span><span style="color:#032F62;">.</span><span style="color:#005CC5;">%u</span><span style="color:#032F62;">.</span><span style="color:#005CC5;">%u</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;">, </span><span style="color:#E36209;">msg</span><span style="color:#24292E;">[</span><span style="color:#005CC5;">30</span><span style="color:#24292E;">], </span><span style="color:#E36209;">msg</span><span style="color:#24292E;">[</span><span style="color:#005CC5;">31</span><span style="color:#24292E;">], </span><span style="color:#E36209;">msg</span><span style="color:#24292E;">[</span><span style="color:#005CC5;">32</span><span style="color:#24292E;">], </span><span style="color:#E36209;">msg</span><span style="color:#24292E;">[</span><span style="color:#005CC5;">33</span><span style="color:#24292E;">]);</span></span>
<span class="line"><span style="color:#6F42C1;">printf</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;源 ip 地址：</span><span style="color:#005CC5;">%s</span><span style="color:#032F62;"> ‐‐&gt; 目的 ip 地址：</span><span style="color:#005CC5;">%s\\n</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;">, src_ip, dst_ip);</span></span>
<span class="line"><span style="color:#6A737D;">//协议类型</span></span>
<span class="line"><span style="color:#D73A49;">unsigned</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">char</span><span style="color:#24292E;"> ip_type;</span></span>
<span class="line"><span style="color:#24292E;">ip_type </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#24292E;">(msg </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">23</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#6F42C1;">printf</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;ip_type = </span><span style="color:#005CC5;">%d\\n</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;">, ip_type);</span></span>
<span class="line"><span style="color:#6A737D;">//icmp、igmp、tcp、udp</span></span>
<span class="line"><span style="color:#D73A49;">if</span><span style="color:#24292E;">(ip_type </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#6F42C1;">printf</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;icmp 报文</span><span style="color:#005CC5;">\\n</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#D73A49;">else</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">if</span><span style="color:#24292E;">(ip_type </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">2</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#6F42C1;">printf</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;igmp 报文</span><span style="color:#005CC5;">\\n</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#D73A49;">else</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">if</span><span style="color:#24292E;">(ip_type </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">6</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#6F42C1;">printf</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;tcp 报文</span><span style="color:#005CC5;">\\n</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#D73A49;">unsigned</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">short</span><span style="color:#24292E;"> src_port;</span></span>
<span class="line"><span style="color:#D73A49;">unsigned</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">short</span><span style="color:#24292E;"> dst_port;</span></span>
<span class="line"><span style="color:#24292E;">src_port </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">ntohs</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">*</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">unsigned</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">short</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#24292E;">)(msg </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">34</span><span style="color:#24292E;">));</span></span>
<span class="line"><span style="color:#24292E;">dst_port </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">ntohs</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">*</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">unsigned</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">short</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#24292E;">)(msg </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">36</span><span style="color:#24292E;">));</span></span>
<span class="line"><span style="color:#6F42C1;">printf</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;源端口号：</span><span style="color:#005CC5;">%d</span><span style="color:#032F62;"> ‐‐&gt; 目的端口号: </span><span style="color:#005CC5;">%d\\n</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;">, src_port, dst_port);</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#D73A49;">else</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">if</span><span style="color:#24292E;">(ip_type </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">17</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#6F42C1;">printf</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;udp 报文</span><span style="color:#005CC5;">\\n</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#6A737D;">//目的端口号、源端口号</span></span>
<span class="line"><span style="color:#D73A49;">unsigned</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">short</span><span style="color:#24292E;"> src_port;</span></span>
<span class="line"><span style="color:#D73A49;">unsigned</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">short</span><span style="color:#24292E;"> dst_port;</span></span>
<span class="line"><span style="color:#24292E;">src_port </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">ntohs</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">*</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">unsigned</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">short</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#24292E;">)(msg </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">34</span><span style="color:#24292E;">));</span></span>
<span class="line"><span style="color:#24292E;">dst_port </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">ntohs</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">*</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">unsigned</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">short</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#24292E;">)(msg </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">36</span><span style="color:#24292E;">));</span></span>
<span class="line"><span style="color:#6F42C1;">printf</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;源端口号：</span><span style="color:#005CC5;">%d</span><span style="color:#032F62;"> ‐‐&gt; 目的端口号: </span><span style="color:#005CC5;">%d\\n</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;">, src_port, dst_port);</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#D73A49;">else</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">if</span><span style="color:#24292E;">(type </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">0x</span><span style="color:#005CC5;">0806</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#6F42C1;">printf</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;arp 数据报</span><span style="color:#005CC5;">\\n</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#6A737D;">//源 ip 地址</span></span>
<span class="line"><span style="color:#6A737D;">//目的 ip 地址</span></span>
<span class="line"><span style="color:#D73A49;">unsigned</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">char</span><span style="color:#24292E;"> </span><span style="color:#E36209;">dst_ip</span><span style="color:#24292E;">[</span><span style="color:#005CC5;">16</span><span style="color:#24292E;">] </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">unsigned</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">char</span><span style="color:#24292E;"> </span><span style="color:#E36209;">src_ip</span><span style="color:#24292E;">[</span><span style="color:#005CC5;">16</span><span style="color:#24292E;">] </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#6F42C1;">sprintf</span><span style="color:#24292E;">(src_ip, </span><span style="color:#032F62;">&quot;</span><span style="color:#005CC5;">%u</span><span style="color:#032F62;">.</span><span style="color:#005CC5;">%u</span><span style="color:#032F62;">.</span><span style="color:#005CC5;">%u</span><span style="color:#032F62;">.</span><span style="color:#005CC5;">%u</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;">, </span><span style="color:#E36209;">msg</span><span style="color:#24292E;">[</span><span style="color:#005CC5;">28</span><span style="color:#24292E;">], </span><span style="color:#E36209;">msg</span><span style="color:#24292E;">[</span><span style="color:#005CC5;">29</span><span style="color:#24292E;">], </span><span style="color:#E36209;">msg</span><span style="color:#24292E;">[</span><span style="color:#005CC5;">30</span><span style="color:#24292E;">], </span><span style="color:#E36209;">msg</span><span style="color:#24292E;">[</span><span style="color:#005CC5;">31</span><span style="color:#24292E;">]);</span></span>
<span class="line"><span style="color:#6F42C1;">sprintf</span><span style="color:#24292E;">(dst_ip, </span><span style="color:#032F62;">&quot;</span><span style="color:#005CC5;">%u</span><span style="color:#032F62;">.</span><span style="color:#005CC5;">%u</span><span style="color:#032F62;">.</span><span style="color:#005CC5;">%u</span><span style="color:#032F62;">.</span><span style="color:#005CC5;">%u</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;">, </span><span style="color:#E36209;">msg</span><span style="color:#24292E;">[</span><span style="color:#005CC5;">38</span><span style="color:#24292E;">], </span><span style="color:#E36209;">msg</span><span style="color:#24292E;">[</span><span style="color:#005CC5;">39</span><span style="color:#24292E;">], </span><span style="color:#E36209;">msg</span><span style="color:#24292E;">[</span><span style="color:#005CC5;">40</span><span style="color:#24292E;">], </span><span style="color:#E36209;">msg</span><span style="color:#24292E;">[</span><span style="color:#005CC5;">41</span><span style="color:#24292E;">]);</span></span>
<span class="line"><span style="color:#6F42C1;">printf</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;源 ip 地址：</span><span style="color:#005CC5;">%s</span><span style="color:#032F62;"> ‐‐&gt; 目的 ip 地址：</span><span style="color:#005CC5;">%s\\n</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;">, src_ip, dst_ip);</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#D73A49;">else</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">if</span><span style="color:#24292E;">(type </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">0x</span><span style="color:#005CC5;">8035</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#6F42C1;">printf</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;rarp 数据报</span><span style="color:#005CC5;">\\n</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#6F42C1;">printf</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;</span><span style="color:#005CC5;">\\n</span><span style="color:#032F62;">*****************</span><span style="color:#005CC5;">\\n\\n</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#6F42C1;">close</span><span style="color:#24292E;">(sockfd);</span></span>
<span class="line"><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="混杂模式" tabindex="-1"><a class="header-anchor" href="#混杂模式" aria-hidden="true">#</a> 混杂模式</h3><p>混杂模式 1、指一台机器的网卡能够接收所有经过它的数据包，而不论其目的地址是否是它。 2、一般计算机网卡都工作在非混杂模式下，如果设置网卡为混杂模式需要 root 权限 linux 下设置 1、设置混杂模式：ifconfig eth0 promisc 2、取消混杂模式：ifconfig eth0 -promisc linux 下通过程序设置网卡混杂模式：</p><figure><img src="`+u+`" alt="image-20210409224416877" tabindex="0" loading="lazy"><figcaption>image-20210409224416877</figcaption></figure><h2 id="sendto-发送数据" tabindex="-1"><a class="header-anchor" href="#sendto-发送数据" aria-hidden="true">#</a> sendto 发送数据</h2><h3 id="用-sendto-发送原始套接字数据" tabindex="-1"><a class="header-anchor" href="#用-sendto-发送原始套接字数据" aria-hidden="true">#</a> 用 sendto 发送原始套接字数据</h3><div class="language-c line-numbers-mode" data-ext="c"><pre class="shiki github-light" style="background-color:#fff;" tabindex="0"><code><span class="line"><span style="color:#6F42C1;">sendto</span><span style="color:#24292E;">(sock_raw_fd, msg, msg_len, </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">,(</span><span style="color:#D73A49;">struct</span><span style="color:#24292E;"> sockaddr</span><span style="color:#D73A49;">*</span><span style="color:#24292E;">)</span><span style="color:#D73A49;">&amp;</span><span style="color:#E36209;">sll</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">sizeof</span><span style="color:#24292E;">(sll));</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>注意： 1、sock_raw_fd：原始套接字 2、msg:发送的消息（封装好的协议数据） 3、sll:本机网络接口，指发送的数据应该从本机的哪个网卡出去，而不是以前的目的地址</p><h3 id="本机网络接口" tabindex="-1"><a class="header-anchor" href="#本机网络接口" aria-hidden="true">#</a> 本机网络接口</h3><div class="language-c line-numbers-mode" data-ext="c"><pre class="shiki github-light" style="background-color:#fff;" tabindex="0"><code><span class="line"><span style="color:#D73A49;">#include</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&lt;netpacket/packet.h&gt;</span></span>
<span class="line"><span style="color:#D73A49;">struct</span><span style="color:#24292E;"> sockaddr_ll</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="`+m+`" alt="image-20210409224613765" tabindex="0" loading="lazy"><figcaption>image-20210409224613765</figcaption></figure><p>只需要对 sll.sll_ifindex 赋值，就可使用</p><h3 id="发送数据-demo" tabindex="-1"><a class="header-anchor" href="#发送数据-demo" aria-hidden="true">#</a> 发送数据 demo</h3><div class="language-c line-numbers-mode" data-ext="c"><pre class="shiki github-light" style="background-color:#fff;" tabindex="0"><code><span class="line"><span style="color:#D73A49;">struct</span><span style="color:#24292E;"> sockaddr_ll sll;</span></span>
<span class="line"><span style="color:#6F42C1;">bzero</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">&amp;</span><span style="color:#E36209;">sll</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">sizeof</span><span style="color:#24292E;">(sll));</span></span>
<span class="line"><span style="color:#24292E;">sll.sll_ifindex </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">???</span><span style="color:#6A737D;"> //赋值为获取到当前要出去的网络接口的地址</span></span>
<span class="line"><span style="color:#D73A49;">if</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">sendto</span><span style="color:#24292E;">(sockfd, msg, </span><span style="color:#D73A49;">sizeof</span><span style="color:#24292E;">(msg), </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">, (</span><span style="color:#D73A49;">struct</span><span style="color:#24292E;"> sockaddr </span><span style="color:#D73A49;">*</span><span style="color:#24292E;">)</span><span style="color:#D73A49;">&amp;</span><span style="color:#24292E;">sll, </span><span style="color:#D73A49;">sizeof</span><span style="color:#24292E;">(sll)) </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> ‐</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#6F42C1;">perror</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;fail to sendto&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#6F42C1;">exit</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="通过-ioctl-来获取网络接口地址" tabindex="-1"><a class="header-anchor" href="#通过-ioctl-来获取网络接口地址" aria-hidden="true">#</a> 通过 ioctl 来获取网络接口地址</h3><div class="language-c line-numbers-mode" data-ext="c"><pre class="shiki github-light" style="background-color:#fff;" tabindex="0"><code><span class="line"><span style="color:#6A737D;">//获取接口信息</span></span>
<span class="line"><span style="color:#6A737D;">//将 arp 请求报文发送出去，通过 eth0 发送出去</span></span>
<span class="line"><span style="color:#6A737D;">//使用 ioctl 函数获取本机网络接口</span></span>
<span class="line"><span style="color:#D73A49;">struct</span><span style="color:#24292E;"> ifreq ethreq;</span></span>
<span class="line"><span style="color:#6F42C1;">strncpy</span><span style="color:#24292E;">(ethreq.ifr_name, </span><span style="color:#032F62;">&quot;eth0&quot;</span><span style="color:#24292E;">, IFNAMSIZ);</span></span>
<span class="line"><span style="color:#D73A49;">if</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">ioctl</span><span style="color:#24292E;">(sockfd, SIOCGIFINDEX, ðreq) </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> ‐</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#6F42C1;">perror</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;fail to ioctl&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#6F42C1;">exit</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#6A737D;">//设置本机网络接口</span></span>
<span class="line"><span style="color:#D73A49;">struct</span><span style="color:#24292E;"> sockaddr_ll sll;</span></span>
<span class="line"><span style="color:#6F42C1;">bzero</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">&amp;</span><span style="color:#E36209;">sll</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">sizeof</span><span style="color:#24292E;">(sll));</span></span>
<span class="line"><span style="color:#24292E;">sll.sll_ifindex </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> ethreq.ifr_ifindex;</span></span>
<span class="line"><span style="color:#6A737D;">//发送数据</span></span>
<span class="line"><span style="color:#D73A49;">if</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">sendto</span><span style="color:#24292E;">(sockfd, msg, </span><span style="color:#D73A49;">sizeof</span><span style="color:#24292E;">(msg), </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">, (</span><span style="color:#D73A49;">struct</span><span style="color:#24292E;"> sockaddr </span><span style="color:#D73A49;">*</span><span style="color:#24292E;">)</span><span style="color:#D73A49;">&amp;</span><span style="color:#E36209;">sll</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">sizeof</span><span style="color:#24292E;">(sll)) </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#6F42C1;">perror</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;fail to sendto&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#6F42C1;">exit</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="apr" tabindex="-1"><a class="header-anchor" href="#apr" aria-hidden="true">#</a> APR</h2><p>ARP 概述</p><p>如果 A(192.168.1.1)向 B(192.168.1.2)发送一个数据包，那么需要的条件有 ip、port、使用的协议（TCP/UDP）之外还需要 MAC 地址，因为在以太网数据包中 MAC 地址是必须要有的； 问怎样才能知道对方的 MAC 地址？使用什么协议呢？</p><p>ARP（Address Resolution Protocol，地址解析协议） 1、是 TCP/IP 协议族中的一个 2、主要用于查询指定 ip 所对应的的 MAC 3、请求方使用广播来发送请求 4、应答方使用单播来回送数据 5、为了在发送数据的时候提高效率在计算中会有一个 ARP 缓存表，用来暂时存放 ip 所对应的 MAC，在 linux 中使用 ARP 即可查看,在 xp 中使用 <code>ARP -a</code></p><p>在 linux 下查看 arp 表 <code>arp</code></p><p>注意：当主机 A 和主机 B 通信时，会先查看 arp 表中有没有对方的 mac 地址，如果有则直接通信即可，如果没有再调用 arp 协议获取对方 mac 地址并将其保存在 arp 表中</p><h3 id="arp-协议格式" tabindex="-1"><a class="header-anchor" href="#arp-协议格式" aria-hidden="true">#</a> ARP 协议格式</h3><figure><img src="`+A+`" alt="image-20210409225346159" tabindex="0" loading="lazy"><figcaption>image-20210409225346159</figcaption></figure><ol><li>Dest MAC:目的 MAC 地址</li><li>Src MAC：源 MAC 地址</li><li>帧类型：0x0806</li><li>硬件类型：1（以太网）</li><li>协议类型：0x0800（IP 地址）</li><li>硬 件地址长度：6</li><li>协议地址长度：4</li><li>OP：1（ARP 请求），2（ARP 应答），3（RARP 请求），4（RARP 应答）</li></ol><h3 id="向指定-ip-发送-arp-请求-demo" tabindex="-1"><a class="header-anchor" href="#向指定-ip-发送-arp-请求-demo" aria-hidden="true">#</a> 向指定 IP 发送 ARP 请求(demo)</h3><div class="language-c line-numbers-mode" data-ext="c"><pre class="shiki github-light" style="background-color:#fff;" tabindex="0"><code><span class="line"><span style="color:#D73A49;">#include</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&lt;sys/socket.h&gt;</span></span>
<span class="line"><span style="color:#D73A49;">#include</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&lt;sys/types.h&gt;</span><span style="color:#24292E;"> </span><span style="color:#6A737D;">//socket</span></span>
<span class="line"><span style="color:#D73A49;">#include</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&lt;stdio.h&gt;</span><span style="color:#24292E;"> </span><span style="color:#6A737D;">//printf</span></span>
<span class="line"><span style="color:#D73A49;">#include</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&lt;unistd.h&gt;</span><span style="color:#24292E;"> </span><span style="color:#6A737D;">//close</span></span>
<span class="line"><span style="color:#D73A49;">#include</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&lt;stdlib.h&gt;</span><span style="color:#24292E;"> </span><span style="color:#6A737D;">//exit</span></span>
<span class="line"><span style="color:#D73A49;">#include</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&lt;netinet/ether.h&gt;</span><span style="color:#24292E;"> </span><span style="color:#6A737D;">//ETH_P_ALL</span></span>
<span class="line"><span style="color:#D73A49;">#include</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&lt;netpacket/packet.h&gt;</span><span style="color:#24292E;"> </span><span style="color:#6A737D;">//sockaddr_ll</span></span>
<span class="line"><span style="color:#D73A49;">#include</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&lt;sys/ioctl.h&gt;</span><span style="color:#24292E;"> </span><span style="color:#6A737D;">//ioctl</span></span>
<span class="line"><span style="color:#D73A49;">#include</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&lt;net/if.h&gt;</span><span style="color:#24292E;"> </span><span style="color:#6A737D;">//ifreq</span></span>
<span class="line"><span style="color:#D73A49;">#include</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&lt;string.h&gt;</span><span style="color:#24292E;"> </span><span style="color:#6A737D;">//strncpy</span></span>
<span class="line"><span style="color:#D73A49;">#include</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&lt;strings.h&gt;</span><span style="color:#24292E;"> </span><span style="color:#6A737D;">//bzero</span></span>
<span class="line"><span style="color:#D73A49;">#include</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&lt;arpa/inet.h&gt;</span><span style="color:#24292E;"> </span><span style="color:#6A737D;">//htons</span></span>
<span class="line"><span style="color:#D73A49;">#define</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">ERRLOG</span><span style="color:#24292E;">(</span><span style="color:#E36209;">errmsg</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">do</span><span style="color:#24292E;">{</span><span style="color:#005CC5;">\\</span></span>
<span class="line"><span style="color:#6F42C1;">perror</span><span style="color:#24292E;">(errmsg);</span><span style="color:#005CC5;">\\</span></span>
<span class="line"><span style="color:#6F42C1;">exit</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">);</span><span style="color:#005CC5;">\\</span></span>
<span class="line"><span style="color:#24292E;">}</span><span style="color:#D73A49;">while</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#6A737D;">//使用 arp 协议通过对方 ip 地址获取 mac 地址</span></span>
<span class="line"><span style="color:#D73A49;">int</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">main</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> </span><span style="color:#E36209;">argc</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">char</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#E36209;">argv</span><span style="color:#D73A49;">[]</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#6A737D;">//创建原始套接字</span></span>
<span class="line"><span style="color:#D73A49;">int</span><span style="color:#24292E;"> sockfd;</span></span>
<span class="line"><span style="color:#D73A49;">if</span><span style="color:#24292E;">((sockfd </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">socket</span><span style="color:#24292E;">(AF_PACKET, SOCK_RAW, </span><span style="color:#6F42C1;">htons</span><span style="color:#24292E;">(ETH_P_ALL))) </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#6F42C1;">ERRLOG</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;fail to socket&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#6A737D;">//组数据包</span></span>
<span class="line"><span style="color:#6A737D;">//源 mac 地址：00:0c:29:7b:35:d7</span></span>
<span class="line"><span style="color:#D73A49;">unsigned</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">char</span><span style="color:#24292E;"> </span><span style="color:#E36209;">msg</span><span style="color:#24292E;">[</span><span style="color:#005CC5;">1600</span><span style="color:#24292E;">] </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#6A737D;">//组以太网首部</span></span>
<span class="line"><span style="color:#D73A49;">0x</span><span style="color:#005CC5;">ff</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">0x</span><span style="color:#005CC5;">ff</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">0x</span><span style="color:#005CC5;">ff</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">0x</span><span style="color:#005CC5;">ff</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">0x</span><span style="color:#005CC5;">ff</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">0x</span><span style="color:#005CC5;">ff</span><span style="color:#24292E;">,</span><span style="color:#6A737D;"> //目的 mac 地址，广播地址</span></span>
<span class="line"><span style="color:#D73A49;">0x</span><span style="color:#005CC5;">00</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">0x</span><span style="color:#005CC5;">0c</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">0x</span><span style="color:#005CC5;">29</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">0x</span><span style="color:#005CC5;">7b</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">0x</span><span style="color:#005CC5;">35</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">0x</span><span style="color:#005CC5;">d7</span><span style="color:#24292E;">,</span><span style="color:#6A737D;"> //源 mac 地址</span></span>
<span class="line"><span style="color:#D73A49;">0x</span><span style="color:#005CC5;">08</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">0x</span><span style="color:#005CC5;">06</span><span style="color:#24292E;">,</span><span style="color:#6A737D;"> //帧类型 arp 报文：0x0806</span></span>
<span class="line"><span style="color:#6A737D;">//组 arp 报文</span></span>
<span class="line"><span style="color:#D73A49;">0x</span><span style="color:#005CC5;">00</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">0x</span><span style="color:#005CC5;">01</span><span style="color:#24292E;">,</span><span style="color:#6A737D;"> //硬件类型 以太网：1</span></span>
<span class="line"><span style="color:#D73A49;">0x</span><span style="color:#005CC5;">08</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">0x</span><span style="color:#005CC5;">00</span><span style="color:#24292E;">,</span><span style="color:#6A737D;"> //协议类型 ip 地址：0x0800</span></span>
<span class="line"><span style="color:#005CC5;">6</span><span style="color:#24292E;">,</span><span style="color:#6A737D;"> //硬件地址长度</span></span>
<span class="line"><span style="color:#005CC5;">4</span><span style="color:#24292E;">,</span><span style="color:#6A737D;"> //协议地址长度</span></span>
<span class="line"><span style="color:#D73A49;">0x</span><span style="color:#005CC5;">00</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">0x</span><span style="color:#005CC5;">01</span><span style="color:#24292E;">,</span><span style="color:#6A737D;"> //op arp 请求：1</span></span>
<span class="line"><span style="color:#D73A49;">0x</span><span style="color:#005CC5;">00</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">0x</span><span style="color:#005CC5;">0c</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">0x</span><span style="color:#005CC5;">29</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">0x</span><span style="color:#005CC5;">7b</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">0x</span><span style="color:#005CC5;">35</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">0x</span><span style="color:#005CC5;">d7</span><span style="color:#24292E;">,</span><span style="color:#6A737D;"> //源 mac 地址</span></span>
<span class="line"><span style="color:#005CC5;">192</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">168</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">3</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">103</span><span style="color:#24292E;">,</span><span style="color:#6A737D;"> //源 ip 地址</span></span>
<span class="line"><span style="color:#D73A49;">0x</span><span style="color:#005CC5;">00</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">0x</span><span style="color:#005CC5;">00</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">0x</span><span style="color:#005CC5;">00</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">0x</span><span style="color:#005CC5;">00</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">0x</span><span style="color:#005CC5;">00</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">0x</span><span style="color:#005CC5;">00</span><span style="color:#24292E;">,</span><span style="color:#6A737D;"> //目的 mac 地址</span></span>
<span class="line"><span style="color:#005CC5;">192</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">168</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">3</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">78</span><span style="color:#6A737D;"> //目的 ip 地址</span></span>
<span class="line"><span style="color:#24292E;">};</span></span>
<span class="line"><span style="color:#6A737D;">//获取接口信息</span></span>
<span class="line"><span style="color:#6A737D;">//将 arp 请求报文发送出去，通过 ens33 发送出去</span></span>
<span class="line"><span style="color:#6A737D;">//使用 ioctl 函数获取本机网络接口</span></span>
<span class="line"><span style="color:#D73A49;">struct</span><span style="color:#24292E;"> ifreq ethreq;</span></span>
<span class="line"><span style="color:#6F42C1;">strncpy</span><span style="color:#24292E;">(ethreq.ifr_name, </span><span style="color:#032F62;">&quot;ens33&quot;</span><span style="color:#24292E;">, IFNAMSIZ);</span></span>
<span class="line"><span style="color:#D73A49;">if</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">ioctl</span><span style="color:#24292E;">(sockfd, SIOCGIFINDEX, </span><span style="color:#D73A49;">&amp;</span><span style="color:#24292E;">ethreq) </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> ‐</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#6F42C1;">perror</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;fail to ioctl&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#6F42C1;">exit</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#6A737D;">//设置本机网络接</span></span>
<span class="line"><span style="color:#24292E;">口</span></span>
<span class="line"><span style="color:#D73A49;">struct</span><span style="color:#24292E;"> sockaddr_ll sll;</span></span>
<span class="line"><span style="color:#6F42C1;">bzero</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">&amp;</span><span style="color:#24292E;">sll, </span><span style="color:#D73A49;">sizeof</span><span style="color:#24292E;">(sll));</span></span>
<span class="line"><span style="color:#24292E;">sll.sll_ifindex </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> ethreq.ifr_ifindex;</span></span>
<span class="line"><span style="color:#6A737D;">//发送数据</span></span>
<span class="line"><span style="color:#D73A49;">if</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">sendto</span><span style="color:#24292E;">(sockfd, msg, </span><span style="color:#005CC5;">14</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">28</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">, (</span><span style="color:#D73A49;">struct</span><span style="color:#24292E;"> sockaddr </span><span style="color:#D73A49;">*</span><span style="color:#24292E;">)</span><span style="color:#D73A49;">&amp;</span><span style="color:#24292E;">sll, </span><span style="color:#D73A49;">sizeof</span><span style="color:#24292E;">(sll)) </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#6F42C1;">ERRLOG</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;fail to sendto&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#D73A49;">unsigned</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">char</span><span style="color:#24292E;"> </span><span style="color:#E36209;">recv_msg</span><span style="color:#24292E;">[</span><span style="color:#005CC5;">1600</span><span style="color:#24292E;">] </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">unsigned</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">char</span><span style="color:#24292E;"> </span><span style="color:#E36209;">mac</span><span style="color:#24292E;">[</span><span style="color:#005CC5;">18</span><span style="color:#24292E;">] </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">while</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#6A737D;">//接收数据并分析</span></span>
<span class="line"><span style="color:#D73A49;">if</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">recvfrom</span><span style="color:#24292E;">(sockfd, recv_msg, </span><span style="color:#D73A49;">sizeof</span><span style="color:#24292E;">(recv_msg), </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">NULL</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">NULL</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span></span>
<span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#6F42C1;">ERRLOG</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;fail to recvfrom&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#6A737D;">//如果是 arp 数据包并且是 arp 应答，则打印源 mac 地址</span></span>
<span class="line"><span style="color:#D73A49;">if</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">ntohs</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">*</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">unsigned</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">short</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#24292E;">)(recv_msg </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">12</span><span style="color:#24292E;">)) </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">0x</span><span style="color:#005CC5;">0806</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#D73A49;">if</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">ntohs</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">*</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">unsigned</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">short</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#24292E;">)(recv_msg </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">20</span><span style="color:#24292E;">)) </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">2</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#6F42C1;">sprintf</span><span style="color:#24292E;">(mac, </span><span style="color:#032F62;">&quot;</span><span style="color:#005CC5;">%x</span><span style="color:#032F62;">:</span><span style="color:#005CC5;">%x</span><span style="color:#032F62;">:</span><span style="color:#005CC5;">%x</span><span style="color:#032F62;">:</span><span style="color:#005CC5;">%x</span><span style="color:#032F62;">:</span><span style="color:#005CC5;">%x</span><span style="color:#032F62;">:</span><span style="color:#005CC5;">%x</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;">, </span><span style="color:#E36209;">recv_msg</span><span style="color:#24292E;">[</span><span style="color:#005CC5;">6</span><span style="color:#24292E;">], </span><span style="color:#E36209;">recv_msg</span><span style="color:#24292E;">[</span><span style="color:#005CC5;">7</span><span style="color:#24292E;">]</span></span>
<span class="line"><span style="color:#E36209;">ecv_msg</span><span style="color:#24292E;">[</span><span style="color:#005CC5;">8</span><span style="color:#24292E;">], </span><span style="color:#E36209;">recv_msg</span><span style="color:#24292E;">[</span><span style="color:#005CC5;">9</span><span style="color:#24292E;">], </span><span style="color:#E36209;">recv_msg</span><span style="color:#24292E;">[</span><span style="color:#005CC5;">10</span><span style="color:#24292E;">], </span><span style="color:#E36209;">recv_msg</span><span style="color:#24292E;">[</span><span style="color:#005CC5;">11</span><span style="color:#24292E;">]);</span></span>
<span class="line"><span style="color:#6F42C1;">printf</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;192.168.3.</span><span style="color:#005CC5;">%d</span><span style="color:#032F62;"> ‐‐&gt; </span><span style="color:#005CC5;">%s\\n</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;">, </span><span style="color:#E36209;">msg</span><span style="color:#24292E;">[</span><span style="color:#005CC5;">41</span><span style="color:#24292E;">], mac);</span></span>
<span class="line"><span style="color:#D73A49;">break</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#6F42C1;">close</span><span style="color:#24292E;">(sockfd);</span></span>
<span class="line"><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,60);function h(F,f){const a=p("ExternalLinkIcon");return o(),e("div",null,[s("blockquote",null,[s("p",null,[n("笔记总结 课程链接："),s("a",b,[n("千峰嵌入式教程"),c(a)])])]),r("more"),g])}const q=l(D,[["render",h],["__file","原始套接字.html.vue"]]);export{q as default};
