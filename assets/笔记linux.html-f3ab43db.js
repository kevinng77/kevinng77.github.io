import{al as i,Q as r,S as p,U as a,an as s,ac as e,a7 as t,au as l,H as c}from"./framework-a614cb70.js";const o={},d=a("h1",{id:"linux-命令笔记",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#linux-命令笔记","aria-hidden":"true"},"#"),s(" Linux 命令笔记")],-1),u=a("p",null,"嵌入式自学开始一个月啦~ 为了自己的贾维斯！！",-1),v=a("p",null,"Linux 笔记比较少，入门级笔记。用多了就记住了。",-1),b={href:"https://www.bilibili.com/video/BV1FA411v7YW?p=530&spm_id_from=pageDriver",target:"_blank",rel:"noopener noreferrer"},m=l(`<h2 id="命令" tabindex="-1"><a class="header-anchor" href="#命令" aria-hidden="true">#</a> 命令</h2><ul><li>ctrl + shift + &quot;+&quot;</li><li>user@主机名: + [ ~家目录；/根目录|] $ 普通用户权限，#管理员权限</li><li>命令 选项 参数，之间用空格隔开</li><li>一次 tab 补全，两次 tab 查看全部相关命令</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>命令 + <span class="token parameter variable">--helpls</span>
ls, more, man,cat, head, <span class="token function">tail</span>
<span class="token function">cat</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">man</span> 章节 查找命令，reshuffle 文件信息
可以用 <span class="token function">man</span> <span class="token function">man</span> 查询 <span class="token function">man</span> 的信息
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>命令 <span class="token operator">&gt;</span> <span class="token function">file</span> 先清空，后输入
命令 <span class="token operator">&gt;&gt;</span> <span class="token function">file</span> 追加
<span class="token function">ls</span> <span class="token parameter variable">--help</span> <span class="token operator">|</span> <span class="token function">more</span> more<span class="token punctuation">(</span>ls --help<span class="token punctuation">)</span>
<span class="token function">ls</span> <span class="token operator">|</span> <span class="token function">wc</span> <span class="token parameter variable">-w</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>ls</strong></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">ls</span> / <span class="token parameter variable">-a</span> <span class="token parameter variable">-l</span> <span class="token parameter variable">-al</span> <span class="token parameter variable">-hl</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li><p>drwxr-xr-x 2 youtiaowenzi youtiaowenzi 4096 Sep 28 21:43 Downloads</p></li><li><p>d: 文件类型(bcd-lsp)</p><ul><li>b：块设备 c：字符设备 d 目录文件 -普通文件 l 软连接文件 s 套接字 p 管道文件</li></ul></li><li><p>rwxr-xr-x：文件权限，三个为一组</p><ul><li>r w x -读，写，可执行，无权限</li></ul></li><li><p>2： 链接文件个数</p></li><li><p>用户名 用户组名</p></li><li><p>4096 文件大小（bytes）</p></li><li><p>文件最后修改时间</p></li><li><p>tree (apt-get install tree)</p><ul><li>tree -L 3 只显示 3 层</li></ul></li><li><p><strong>clear</strong> 清屏 或 ctrl + L</p></li><li><p><strong>cd pwd</strong></p></li><li><p>cd / 根目录 直接 cd 或 ~进入 home</p></li><li><p>cd .. 上级目录 . 当前目录 - 返回上一次的路径</p></li><li><p>pwd 当前绝对路径</p></li><li><p><strong>cat</strong> 显示文本文件内容</p></li><li><p><strong>rm -rf</strong> 删除目录</p></li><li><p><strong>cp file_name dir</strong> 复制 <strong>cp dir1 dir2 -a</strong> 复制 dir1 到 dir2 ， <strong>cp file file2</strong> 复制 file 副本 file2，覆盖原先 file2</p></li><li><p><strong>mv file dir/</strong> 移动文件 mv file1 file2 如果 file2 不存在，则为重命名</p></li><li><p><strong>mkdir/ touch</strong></p></li><li><p>mkdir -p dir1/dir2/dir3/dir4 创建嵌套文件</p></li><li><p>touch 会更新更新时间戳</p></li><li><p><strong>find path -name filename</strong></p></li><li><p>find . - name dir2</p></li><li><p><strong>grep</strong> 查找信息 file 参数-n (-n 返回行号)</p></li><li><p>grep 信息 * -R -n 对所有文件*查询，-R 对嵌套的文件进行查询</p></li><li><p><strong>ln</strong> 创建链接文件</p></li><li><p>ln 源文件 链接文件名 -s</p></li></ul><h2 id="tar" tabindex="-1"><a class="header-anchor" href="#tar" aria-hidden="true">#</a> tar</h2><ul><li>tar zcvf 压缩包.tar.gz file1 file2 file3 压缩</li><li>tar zxvf 压缩包.tar.gz 解压</li><li>tar zxvf 压缩包.tar.gz -C 目的路径</li><li>tar jcvf name.tar.bz2</li><li>tar jxvf name.tar.bz2 -C 目的路径</li></ul><h2 id="vi" tabindex="-1"><a class="header-anchor" href="#vi" aria-hidden="true">#</a> vi</h2><ul><li>vi +n filename 打开文件，光标置于 n 行行首</li><li>命令模式或插入模式 进入 编辑模式 ESC</li><li>搜索，命令模式下输入/加上要搜索内容</li><li>编辑 进入 插入 按 a i o；进入命令模式按： <ul><li>命令 w，wq,x 保存并推出, q! 不保存，w filename 另存为 <ul><li>:set nu 设置显示行号</li></ul></li><li>编辑模式 <ul><li>u 撤销</li><li>nx 删除光标后 n 字符</li><li>nX 删除光标前</li><li>ndd 剪切 p 粘贴 4yy 复制当前开始的 n 行</li><li>shift + zz 保存并退出</li><li><code>n&lt;space&gt;</code> 移动光标到 n 字节后</li><li>n Enter 向下移动光标 n 行</li><li>nG 移动光标到 n 行</li><li>/字符串 从光标开始向后查询 <ul><li>显示搜索结果的：按 n 下一个 N 前一个</li></ul></li><li>ctrl + b/f 上/下一页</li><li>dd 删除光标所在行</li><li>d1G 删除光标所在到第一行的所有数据</li><li>dG 删除光标到最后一行所有数据</li><li>d$ 删除光标所在，到本行最后一个字符位置</li></ul></li></ul></li></ul><h2 id="编译器-gcc" tabindex="-1"><a class="header-anchor" href="#编译器-gcc" aria-hidden="true">#</a> 编译器 gcc</h2><ul><li>一步到位 <ul><li>gcc hello.c 自动生成 a.out 可执行文件</li><li>gcc hello.c -o hello 生成 hello 可执行文件</li><li>运行： ./a.out</li></ul></li><li>分布 <ul><li>gcc -E hello.c -o hello.i 预处理 （头文件展开）</li><li>gcc -S hello.i -o hello.s 编译</li><li>gcc -c hello.s -o hello.o 汇编</li><li>gcc hello.o -o filename 链接</li></ul></li></ul><h2 id="makefile" tabindex="-1"><a class="header-anchor" href="#makefile" aria-hidden="true">#</a> makefile</h2><ul><li>只会重新编译修改过时间戳的文件</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>目标（最终生成文件）：依赖文件列表
<span class="token variable"><span class="token variable">\`</span><span class="token operator">&lt;</span>TAB<span class="token operator">&gt;</span><span class="token variable">\`</span></span>命令列表
makefile:
main:main.c main.h
	gcc main.c <span class="token parameter variable">-o</span> main
clean:
	<span class="token function">rm</span> main
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>make</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>-f file<span class="token punctuation">]</span> 默认找 GNUmakefile，makefile, Makefile 作为输入文件
<span class="token punctuation">[</span>targets<span class="token punctuation">]</span> 默认实现 makefile 文件内第一个目标

一般使用直接 <span class="token function">make</span>
<span class="token function">make</span> <span class="token punctuation">[</span>-f file<span class="token punctuation">]</span> <span class="token punctuation">[</span>targets<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>多文件编译</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>main:main.o sub.o sum.o
	gcc main.o sub.o sum.o <span class="token parameter variable">-o</span> main
main.o:main.c
	gcc <span class="token parameter variable">-c</span> main.c <span class="token parameter variable">-o</span> main.o
sub.o:sub.c
	gcc <span class="token parameter variable">-c</span> sub.c <span class="token parameter variable">-o</span> sub.o
sum.o:sum.c
	gcc <span class="token parameter variable">-c</span> sum.c <span class="token parameter variable">-o</span> sum.o
clean:
	<span class="token function">rm</span> *.o main a.out <span class="token parameter variable">-rf</span>
	
<span class="token function">make</span>
<span class="token function">make</span> clean
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>makefile 变量</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>cc <span class="token operator">=</span> gcc
<span class="token comment">#cc = arm-linux-gcc 指定编译器</span>
obj <span class="token operator">=</span> main.o printf1.0
<span class="token assign-left variable">target</span><span class="token operator">=</span>main
<span class="token assign-left variable">cflags</span><span class="token operator">=</span>-Wall <span class="token parameter variable">-g</span>

<span class="token variable"><span class="token variable">$(</span>target<span class="token variable">)</span></span><span class="token builtin class-name">:</span><span class="token variable"><span class="token variable">$(</span>obj<span class="token variable">)</span></span>
	<span class="token variable"><span class="token variable">$(</span>cc<span class="token variable">)</span></span> <span class="token variable"><span class="token variable">$(</span>obj<span class="token variable">)</span></span> <span class="token parameter variable">-o</span> <span class="token variable"><span class="token variable">$(</span>obj<span class="token variable">)</span></span>  <span class="token comment">#用变量替换上一步的程序</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>系统环境变量</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment">#export test=10 定义环境变量</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>预定义变量</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token variable">$@</span> 目标名
$<span class="token operator">&lt;</span>	依赖文件中的第一个文件
$^ 	所有依赖文件
CC	C 编译器名称
CFLAGS		C 编译器选项


CC <span class="token operator">=</span> gcc
obj <span class="token operator">=</span> main
obj1 <span class="token operator">=</span> sub
obj2 <span class="token operator">=</span> <span class="token function">sum</span>
OBJ <span class="token operator">=</span> main.o sub.o sum.o
CFLAGS <span class="token operator">=</span> <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-g</span>

<span class="token variable"><span class="token variable">$(</span>obj<span class="token variable">)</span></span><span class="token builtin class-name">:</span><span class="token variable"><span class="token variable">$(</span>OBJ<span class="token variable">)</span></span>
	<span class="token variable"><span class="token variable">$(</span>CC<span class="token variable">)</span></span> $^ <span class="token parameter variable">-o</span> <span class="token variable">$@</span>
<span class="token variable"><span class="token variable">$(</span>obj<span class="token variable">)</span></span>.o:<span class="token variable"><span class="token variable">$(</span>obj<span class="token variable">)</span></span>.c
	<span class="token variable"><span class="token variable">$(</span>CC<span class="token variable">)</span></span> <span class="token variable"><span class="token variable">$(</span>CFLAGS<span class="token variable">)</span></span> <span class="token parameter variable">-c</span> $<span class="token operator">&lt;</span> <span class="token parameter variable">-o</span> <span class="token variable">$@</span>
<span class="token variable"><span class="token variable">$(</span>obj1<span class="token variable">)</span></span>.o:<span class="token variable"><span class="token variable">$(</span>obj1<span class="token variable">)</span></span>.c
	<span class="token variable"><span class="token variable">$(</span>CC<span class="token variable">)</span></span> <span class="token variable"><span class="token variable">$(</span>CFLAGS<span class="token variable">)</span></span> <span class="token parameter variable">-c</span> $<span class="token operator">&lt;</span> <span class="token parameter variable">-o</span> <span class="token variable">$@</span>
<span class="token variable"><span class="token variable">$(</span>obj2<span class="token variable">)</span></span>.o:<span class="token variable"><span class="token variable">$(</span>obj2<span class="token variable">)</span></span>.c
	<span class="token variable"><span class="token variable">$(</span>CC<span class="token variable">)</span></span> <span class="token variable"><span class="token variable">$(</span>CFLAGS<span class="token variable">)</span></span> <span class="token parameter variable">-c</span> $<span class="token operator">&lt;</span> <span class="token parameter variable">-o</span> <span class="token variable">$@</span>
clean:
	<span class="token function">rm</span> *.o <span class="token variable"><span class="token variable">$(</span>obj<span class="token variable">)</span></span> a.out <span class="token parameter variable">-rf</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>进阶版</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>CC <span class="token operator">=</span> gcc
obj <span class="token operator">=</span> main
OBJ <span class="token operator">=</span> main.o sub.o sum.o
CFLAGS <span class="token operator">=</span> <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-g</span>

<span class="token variable"><span class="token variable">$(</span>obj<span class="token variable">)</span></span><span class="token builtin class-name">:</span><span class="token variable"><span class="token variable">$(</span>OBJ<span class="token variable">)</span></span>
	<span class="token variable"><span class="token variable">$(</span>CC<span class="token variable">)</span></span> $^ <span class="token parameter variable">-o</span> <span class="token variable">$@</span>
<span class="token variable">$*</span>.o:<span class="token variable">$*</span>.c
	<span class="token variable"><span class="token variable">$(</span>CC<span class="token variable">)</span></span> <span class="token variable"><span class="token variable">$(</span>CFLAGS<span class="token variable">)</span></span> <span class="token parameter variable">-c</span> $<span class="token operator">&lt;</span> <span class="token parameter variable">-o</span> <span class="token variable">$@</span>
clean:
	<span class="token function">rm</span> *.o <span class="token variable"><span class="token variable">$(</span>obj<span class="token variable">)</span></span> a.out <span class="token parameter variable">-rf</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="链接" tabindex="-1"><a class="header-anchor" href="#链接" aria-hidden="true">#</a> 链接</h4><p>硬链接：B 是 A 的硬链接，A 删了，B 还可以访问（类似创建一个新指针）。允许一个文件有多个路径。可以通过硬链接建立多个链接，防止文件误删。<code>ln A B</code></p><p>软连接：类似 windows 的快捷方式。<code>ln -s A C</code> 软连接 <code>ls -l</code> 查看后为 <code>l</code> 前缀</p><p><code>echo &quot;写入文件的内容&quot;&gt;&gt;A</code></p><h2 id="用户" tabindex="-1"><a class="header-anchor" href="#用户" aria-hidden="true">#</a> 用户</h2><p><code>useradd -m 用户名</code>，-m 自动创建用户目录 -g 给用户分给组。用户信息被写入 <code>/etc/passwd</code></p><p><code>userdel -r 用户名</code> 删除用户与用户目录</p><p><code>su 用户名</code> 切换用户</p><p><code>passwd 用户名</code> 设置用户密码</p><p><code>passwd -l 用户</code> 锁定用户，用户无法登录</p><h2 id="用户组" tabindex="-1"><a class="header-anchor" href="#用户组" aria-hidden="true">#</a> 用户组</h2><p><code>groupadd groupname</code> 创建用户组，<code>-g</code> 指定用户组 ID，<code>/etc/group</code> 下可查看</p><p><code>groupdel name</code> 删除用户组</p><p><code>groupmod name</code> 修改组信息，<code>-g</code> 改 ID，<code>-n</code>改名字</p><h2 id="磁盘管理" tabindex="-1"><a class="header-anchor" href="#磁盘管理" aria-hidden="true">#</a> 磁盘管理</h2><p><code>df</code> 整体磁盘使用量</p><p><code>du -h --max_depth=1</code> 查看当前文件夹容量</p><p><code>mount /dev/devicename /mnt/dirname</code> 将外部设备挂在到目的目录下</p><p><code>umount -f</code> 强制卸载</p><h2 id="进程" tabindex="-1"><a class="header-anchor" href="#进程" aria-hidden="true">#</a> 进程</h2><p><code>ps</code></p><p>-a：显示终端运行的进程信息</p><p>-u：以用户的信息显示进程</p><p>-x：显示用户运行进程的参数</p><p><code>ps -ef</code> 可以查看到父进程的信息</p><p><code>pstree</code> 显示进程树 -p 显示父 ID -u 显示用户组</p><h2 id="安装" tabindex="-1"><a class="header-anchor" href="#安装" aria-hidden="true">#</a> 安装</h2><p>yum 在线安装</p><h2 id="系统环境变量" tabindex="-1"><a class="header-anchor" href="#系统环境变量" aria-hidden="true">#</a> 系统环境变量</h2>`,58),k={href:"https://blog.csdn.net/jiangyanting2011/article/details/78875928",target:"_blank",rel:"noopener noreferrer"},h=l(`<p><strong>系统级：</strong></p><p>/etc/environment: 是系统在登录时读取的第一个文件，用于为所有进程设置环境变量。系统使用此文件时并不是执行此文件中的命令，而是根据 KEY=VALUE 模式的代码，对 KEY 赋值以 VALUE，因此文件中如果要定义 PATH 环境变量，只需加入一行形如 PATH=$PATH:/xxx/bin 的代码即可。</p><p>/etc/profile：是系统登录时执行的第二个文件，可以用于设定针对全系统所有用户的环境变量。该文件一般是调用/etc/bash.bashrc 文件。 /etc/bash.bashrc：系统级的 bashrc 文件，为每一个运行 bash shell 的用户执行此文件。此文件会在用户每次打开 shell 时执行一次。</p><p>注意：　/etc/environment 是设置整个系统的环境，而/etc/profile 是设置所有用户的环境，前者与登录用户无关，后者与登录用户有关。 这两个文件修改后一般都要重启系统才能生效。</p><p><strong>用户级：</strong></p><p>~/.profile: 是对应当前登录用户的 profile 文件，用于定制当前用户的个人工作环境。 每个用户都可使用该文件输入专用于自己使用的 shell 信息,当用户登录时,该文件仅仅执行一次!默认情况下,他设置一些环境变量,执行用户的.bashrc 文件。这里是推荐放置个人设置的地方 <strong>~/.bashrc:</strong> <strong>是对应当前登录用户的 bash 初始化文件，当用户每次打开 shell 时，系统都会执行此文件一次。平时设置这个文件就可以了。</strong></p><h3 id="更换阿里源" tabindex="-1"><a class="header-anchor" href="#更换阿里源" aria-hidden="true">#</a> 更换阿里源</h3><p><code>lsb_release -c</code> 查看 ubuntu 版本。 <code>cp /etc/apt/sources.list /etc/apt/source.list.bak</code> 备份原文件 <code>vim /etc/apt/sources.list</code> 修改文件为：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>deb-src http://archive.ubuntu.com/ubuntu xenial main restricted <span class="token comment">#Added by software-properties</span>
deb http://mirrors.aliyun.com/ubuntu/ xenial main restricted
deb-src http://mirrors.aliyun.com/ubuntu/ xenial main restricted multiverse universe <span class="token comment">#Added by software-properties</span>
deb http://mirrors.aliyun.com/ubuntu/ xenial-updates main restricted
deb-src http://mirrors.aliyun.com/ubuntu/ xenial-updates main restricted multiverse universe <span class="token comment">#Added by software-properties</span>
deb http://mirrors.aliyun.com/ubuntu/ xenial universe
deb http://mirrors.aliyun.com/ubuntu/ xenial-updates universe
deb http://mirrors.aliyun.com/ubuntu/ xenial multiverse
deb http://mirrors.aliyun.com/ubuntu/ xenial-updates multiverse
deb http://mirrors.aliyun.com/ubuntu/ xenial-backports main restricted universe multiverse
deb-src http://mirrors.aliyun.com/ubuntu/ xenial-backports main restricted universe multiverse <span class="token comment">#Added by software-properties</span>
deb http://archive.canonical.com/ubuntu xenial partner
deb-src http://archive.canonical.com/ubuntu xenial partner
deb http://mirrors.aliyun.com/ubuntu/ xenial-security main restricted
deb-src http://mirrors.aliyun.com/ubuntu/ xenial-security main restricted multiverse universe <span class="token comment">#Added by software-properties</span>
deb http://mirrors.aliyun.com/ubuntu/ xenial-security universe
deb http://mirrors.aliyun.com/ubuntu/ xenial-security multiverse
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="host-映射" tabindex="-1"><a class="header-anchor" href="#host-映射" aria-hidden="true">#</a> host 映射</h4><p><code>vim /etc/hosts</code> 添加映射 <code>ip 简称 全称</code>：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>172.17.0.3      node2
172.17.0.4      node3
172.17.0.2      node1
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="防火墙" tabindex="-1"><a class="header-anchor" href="#防火墙" aria-hidden="true">#</a> 防火墙</h4><p><code>apt-get install ufw</code><code>ufw enable</code>, <code>ufw disable</code>, <code>ufw reset</code><code>ufw default allow outgoing</code> 默认传入链接</p>`,14);function g(f,x){const n=c("ExternalLinkIcon");return r(),p("div",null,[d,a("blockquote",null,[u,v,a("p",null,[s("笔记总结 课程链接："),a("a",b,[s("千峰嵌入式教程"),e(n)])])]),t(" more"),m,a("p",null,[a("a",k,[s("Linux 下的环境变量"),e(n)])]),h])}const _=i(o,[["render",g],["__file","笔记linux.html.vue"]]);export{_ as default};
